{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { UnavailabilityError } from '@unimodules/core';\nimport ExpoSecureStore from \"./ExpoSecureStore\";\nexport var AFTER_FIRST_UNLOCK = ExpoSecureStore.AFTER_FIRST_UNLOCK;\nexport var AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY = ExpoSecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY;\nexport var ALWAYS = ExpoSecureStore.ALWAYS;\nexport var WHEN_PASSCODE_SET_THIS_DEVICE_ONLY = ExpoSecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY;\nexport var ALWAYS_THIS_DEVICE_ONLY = ExpoSecureStore.ALWAYS_THIS_DEVICE_ONLY;\nexport var WHEN_UNLOCKED = ExpoSecureStore.WHEN_UNLOCKED;\nexport var WHEN_UNLOCKED_THIS_DEVICE_ONLY = ExpoSecureStore.WHEN_UNLOCKED_THIS_DEVICE_ONLY;\nvar VALUE_BYTES_LIMIT = 2048;\nexport function deleteItemAsync(_x) {\n  return _deleteItemAsync.apply(this, arguments);\n}\n\nfunction _deleteItemAsync() {\n  _deleteItemAsync = _asyncToGenerator(function* (key) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _ensureValidKey(key);\n\n    if (!ExpoSecureStore.deleteValueWithKeyAsync) {\n      throw new UnavailabilityError('SecureStore', 'deleteItemAsync');\n    }\n\n    yield ExpoSecureStore.deleteValueWithKeyAsync(key, options);\n  });\n  return _deleteItemAsync.apply(this, arguments);\n}\n\nexport function getItemAsync(_x2) {\n  return _getItemAsync.apply(this, arguments);\n}\n\nfunction _getItemAsync() {\n  _getItemAsync = _asyncToGenerator(function* (key) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _ensureValidKey(key);\n\n    return yield ExpoSecureStore.getValueWithKeyAsync(key, options);\n  });\n  return _getItemAsync.apply(this, arguments);\n}\n\nexport function setItemAsync(_x3, _x4) {\n  return _setItemAsync.apply(this, arguments);\n}\n\nfunction _setItemAsync() {\n  _setItemAsync = _asyncToGenerator(function* (key, value) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    _ensureValidKey(key);\n\n    if (!_isValidValue(value)) {\n      throw new Error(\"Invalid value provided to SecureStore. Values must be strings; consider JSON-encoding your values if they are serializable.\");\n    }\n\n    if (!ExpoSecureStore.setValueWithKeyAsync) {\n      throw new UnavailabilityError('SecureStore', 'setItemAsync');\n    }\n\n    yield ExpoSecureStore.setValueWithKeyAsync(value, key, options);\n  });\n  return _setItemAsync.apply(this, arguments);\n}\n\nfunction _ensureValidKey(key) {\n  if (!_isValidKey(key)) {\n    throw new Error(\"Invalid key provided to SecureStore. Keys must not be empty and contain only alphanumeric characters, \\\".\\\", \\\"-\\\", and \\\"_\\\".\");\n  }\n}\n\nfunction _isValidKey(key) {\n  return typeof key === 'string' && /^[\\w.-]+$/.test(key);\n}\n\nfunction _isValidValue(value) {\n  if (typeof value !== 'string') {\n    return false;\n  }\n\n  if (_byteCount(value) > VALUE_BYTES_LIMIT) {\n    console.warn('Provided value to SecureStore is larger than 2048 bytes. An attempt to store such a value will throw an error in SDK 35.');\n  }\n\n  return true;\n}\n\nfunction _byteCount(value) {\n  var bytes = 0;\n\n  for (var i = 0; i < value.length; i++) {\n    var codePoint = value.charCodeAt(i);\n\n    if (codePoint >= 0xD800 && codePoint < 0xE000) {\n      if (codePoint < 0xDC00 && i + 1 < value.length) {\n        var next = value.charCodeAt(i + 1);\n\n        if (next >= 0xDC00 && next < 0xE000) {\n          bytes += 4;\n          i++;\n          continue;\n        }\n      }\n    }\n\n    bytes += codePoint < 0x80 ? 1 : codePoint < 0x800 ? 2 : 3;\n  }\n\n  return bytes;\n}","map":{"version":3,"sources":["../src/SecureStore.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport ExpoSecureStore from './ExpoSecureStore';\n\nexport type KeychainAccessibilityConstant = number;\n\nexport const AFTER_FIRST_UNLOCK: KeychainAccessibilityConstant = ExpoSecureStore.AFTER_FIRST_UNLOCK;\nexport const AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY: KeychainAccessibilityConstant =\n  ExpoSecureStore.AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY;\nexport const ALWAYS: KeychainAccessibilityConstant = ExpoSecureStore.ALWAYS;\nexport const WHEN_PASSCODE_SET_THIS_DEVICE_ONLY: KeychainAccessibilityConstant =\n  ExpoSecureStore.WHEN_PASSCODE_SET_THIS_DEVICE_ONLY;\nexport const ALWAYS_THIS_DEVICE_ONLY: KeychainAccessibilityConstant =\n  ExpoSecureStore.ALWAYS_THIS_DEVICE_ONLY;\nexport const WHEN_UNLOCKED: KeychainAccessibilityConstant = ExpoSecureStore.WHEN_UNLOCKED;\nexport const WHEN_UNLOCKED_THIS_DEVICE_ONLY: KeychainAccessibilityConstant =\n  ExpoSecureStore.WHEN_UNLOCKED_THIS_DEVICE_ONLY;\n\nconst VALUE_BYTES_LIMIT = 2048;\n\nexport type SecureStoreOptions = {\n  keychainService?: string;\n  keychainAccessible?: KeychainAccessibilityConstant;\n};\n\nexport async function deleteItemAsync(\n  key: string,\n  options: SecureStoreOptions = {}\n): Promise<void> {\n  _ensureValidKey(key);\n\n  if (!ExpoSecureStore.deleteValueWithKeyAsync) {\n    throw new UnavailabilityError('SecureStore', 'deleteItemAsync');\n  }\n  await ExpoSecureStore.deleteValueWithKeyAsync(key, options);\n}\n\nexport async function getItemAsync(\n  key: string,\n  options: SecureStoreOptions = {}\n): Promise<string | null> {\n  _ensureValidKey(key);\n  return await ExpoSecureStore.getValueWithKeyAsync(key, options);\n}\n\nexport async function setItemAsync(\n  key: string,\n  value: string,\n  options: SecureStoreOptions = {}\n): Promise<void> {\n  _ensureValidKey(key);\n  if (!_isValidValue(value)) {\n    throw new Error(\n      `Invalid value provided to SecureStore. Values must be strings; consider JSON-encoding your values if they are serializable.`\n    );\n  }\n  if (!ExpoSecureStore.setValueWithKeyAsync) {\n    throw new UnavailabilityError('SecureStore', 'setItemAsync');\n  }\n  await ExpoSecureStore.setValueWithKeyAsync(value, key, options);\n}\n\nfunction _ensureValidKey(key: string) {\n  if (!_isValidKey(key)) {\n    throw new Error(\n      `Invalid key provided to SecureStore. Keys must not be empty and contain only alphanumeric characters, \".\", \"-\", and \"_\".`\n    );\n  }\n}\n\nfunction _isValidKey(key: string) {\n  return typeof key === 'string' && /^[\\w.-]+$/.test(key);\n}\n\nfunction _isValidValue(value: string) {\n  if (typeof value !== 'string') {\n    return false;\n  }\n  if (_byteCount(value) > VALUE_BYTES_LIMIT) {\n    console.warn('Provided value to SecureStore is larger than 2048 bytes. An attempt to store such a value will throw an error in SDK 35.');\n  }\n  return true;\n}\n\n// copy-pasted from https://stackoverflow.com/a/39488643\nfunction _byteCount(value: string) {\n  let bytes = 0;\n\n  for (let i = 0; i < value.length; i++) {\n    const codePoint = value.charCodeAt(i);\n\n    // Lone surrogates cannot be passed to encodeURI\n    if (codePoint >= 0xD800 && codePoint < 0xE000) {\n      if (codePoint < 0xDC00 && i + 1 < value.length) {\n        const next = value.charCodeAt(i + 1);\n\n        if (next >= 0xDC00 && next < 0xE000) {\n          bytes += 4;\n          i++;\n          continue;\n        }\n      }\n    }\n\n    bytes += (codePoint < 0x80 ? 1 : (codePoint < 0x800 ? 2 : 3));\n  }\n\n  return bytes;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}