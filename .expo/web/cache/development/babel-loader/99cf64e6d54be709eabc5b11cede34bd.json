{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\expo\\\\build\\\\Maps\\\\MapView.web.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { GoogleMap, withGoogleMap } from 'react-google-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Marker from \"./Marker\";\n\nclass GoogleMapInnerContainer extends React.Component {\n  render() {\n    var _this$props = this.props,\n        {\n      onMapMount\n    } = _this$props,\n        props = _objectWithoutProperties(_this$props, [\"onMapMount\"]);\n\n    return React.createElement(GoogleMap, _extends({}, props, {\n      ref: onMapMount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\n\nvar GoogleMapContainer = withGoogleMap(GoogleMapInnerContainer);\n\nclass MapView extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.googleMap = null;\n\n    this.onMapMount = googleMap => {\n      this.googleMap = googleMap;\n    };\n\n    this.onDragEnd = () => {\n      var {\n        onRegionChangeComplete\n      } = this.props;\n\n      if (this.googleMap && onRegionChangeComplete) {\n        var center = this.googleMap.getCenter();\n        onRegionChangeComplete({\n          latitude: center.lat(),\n          longitude: center.lng()\n        });\n      }\n    };\n  }\n\n  render() {\n    var {\n      region,\n      initialRegion,\n      onRegionChange,\n      onPress,\n      children\n    } = this.props;\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, React.createElement(GoogleMapContainer, {\n      onMapMount: this.onMapMount,\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 76\n        }\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 123\n        }\n      }),\n      defaultCenter: {\n        lat: initialRegion.latitude,\n        lng: initialRegion.longitude\n      },\n      center: {\n        lat: region.latitude,\n        lng: region.longitude\n      },\n      onDragStart: onRegionChange,\n      onDragEnd: this.onDragEnd,\n      onClick: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, children));\n  }\n\n}\n\nMapView.Marker = Marker;\nvar styles = StyleSheet.create({\n  container: {\n    height: '100vh'\n  },\n  containerDiv: {\n    height: '100%'\n  }\n});\nexport default MapView;","map":{"version":3,"sources":["../../src/Maps/MapView.web.tsx"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,SAAT,EAAoB,aAApB,QAAyC,mBAAzC;;;AAGA,OAAO,MAAP;;AAEA,MAAM,uBAAN,SAAsC,KAAK,CAAC,SAA5C,CAA0D;AACxD,EAAA,MAAM,GAAA;AACJ,sBAAiC,KAAK,KAAtC;AAAA,QAAM;AAAE,MAAA;AAAF,KAAN;AAAA,QAAuB,KAAvB;;AACA,WAAO,oBAAC,SAAD,eAAe,KAAf;AAAsB,MAAA,GAAG,EAAE,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAJuD;;AAO1D,IAAM,kBAAkB,GAAG,aAAa,CAAC,uBAAD,CAAxC;;AAUA,MAAM,OAAN,SAAsB,KAAK,CAAC,SAA5B,CAA4C;AAA5C,EAAA,WAAA,GAAA;;AAGE,SAAA,SAAA,GAA8B,IAA9B;;AAEA,SAAA,UAAA,GAAc,SAAD,IAAgC;AAC3C,WAAK,SAAL,GAAiB,SAAjB;AACD,KAFD;;AAIA,SAAA,SAAA,GAAY,MAAK;AACf,UAAM;AAAE,QAAA;AAAF,UAA6B,KAAK,KAAxC;;AACA,UAAI,KAAK,SAAL,IAAkB,sBAAtB,EAA8C;AAC5C,YAAM,MAAM,GAAG,KAAK,SAAL,CAAe,SAAf,EAAf;AACA,QAAA,sBAAsB,CAAC;AAAE,UAAA,QAAQ,EAAE,MAAM,CAAC,GAAP,EAAZ;AAA0B,UAAA,SAAS,EAAE,MAAM,CAAC,GAAP;AAArC,SAAD,CAAtB;AACD;AACF,KAND;AAiCD;;AAzBC,EAAA,MAAM,GAAA;AACJ,QAAM;AAAE,MAAA,MAAF;AAAU,MAAA,aAAV;AAAyB,MAAA,cAAzB;AAAyC,MAAA,OAAzC;AAAkD,MAAA;AAAlD,QAA+D,KAAK,KAA1E;AAEA,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,MAAM,CAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,kBAAD;AACE,MAAA,UAAU,EAAE,KAAK,UADnB;AAEE,MAAA,gBAAgB,EAAE;AAAK,QAAA,KAAK,EAAE;AAAE,UAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFpB;AAGE,MAAA,UAAU,EAAE;AAAK,QAAA,KAAK,EAAE;AAAE,UAAA,MAAM,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHd;AAIE,MAAA,aAAa,EAAE;AACb,QAAA,GAAG,EAAE,aAAa,CAAC,QADN;AAEb,QAAA,GAAG,EAAE,aAAa,CAAC;AAFN,OAJjB;AAQE,MAAA,MAAM,EAAE;AACN,QAAA,GAAG,EAAE,MAAM,CAAC,QADN;AAEN,QAAA,GAAG,EAAE,MAAM,CAAC;AAFN,OARV;AAYE,MAAA,WAAW,EAAE,cAZf;AAaE,MAAA,SAAS,EAAE,KAAK,SAblB;AAcE,MAAA,OAAO,EAAE,OAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAeG,QAfH,CADF,CADF;AAqBD;;AAzCyC;;AACnC,OAAA,CAAA,MAAA,GAAS,MAAT;AA2CT,IAAM,MAAM,GAAG,UAAU,CAAC,MAAX,CAAkB;AAC/B,EAAA,SAAS,EAAE;AACT,IAAA,MAAM,EAAE;AADC,GADoB;AAI/B,EAAA,YAAY,EAAE;AACZ,IAAA,MAAM,EAAE;AADI;AAJiB,CAAlB,CAAf;AASA,eAAe,OAAf","sourcesContent":["import React from 'react';\nimport { GoogleMap, withGoogleMap } from 'react-google-maps';\nimport { StyleSheet, View } from 'react-native';\n\nimport Marker from './Marker';\n\nclass GoogleMapInnerContainer extends React.Component<any> {\n  render() {\n    const { onMapMount, ...props } = this.props;\n    return <GoogleMap {...props} ref={onMapMount} />;\n  }\n}\n\nconst GoogleMapContainer = withGoogleMap(GoogleMapInnerContainer);\n\ntype Props = {\n  onRegionChangeComplete: Function | null;\n  onPress: Function;\n  onRegionChange: Function | null;\n  initialRegion: { latitude: number; longitude: number };\n  region: { latitude: number; longitude: number };\n};\n\nclass MapView extends React.Component<Props> {\n  static Marker = Marker;\n\n  googleMap: GoogleMap | null = null;\n\n  onMapMount = (googleMap: GoogleMap | null) => {\n    this.googleMap = googleMap;\n  };\n\n  onDragEnd = () => {\n    const { onRegionChangeComplete } = this.props;\n    if (this.googleMap && onRegionChangeComplete) {\n      const center = this.googleMap.getCenter();\n      onRegionChangeComplete({ latitude: center.lat(), longitude: center.lng() });\n    }\n  };\n\n  render() {\n    const { region, initialRegion, onRegionChange, onPress, children } = this.props;\n\n    return (\n      <View style={styles.container}>\n        <GoogleMapContainer\n          onMapMount={this.onMapMount}\n          containerElement={<div style={{ height: '100%' }} />}\n          mapElement={<div style={{ height: '100%' }} />}\n          defaultCenter={{\n            lat: initialRegion.latitude,\n            lng: initialRegion.longitude,\n          }}\n          center={{\n            lat: region.latitude,\n            lng: region.longitude,\n          }}\n          onDragStart={onRegionChange}\n          onDragEnd={this.onDragEnd}\n          onClick={onPress}>\n          {children}\n        </GoogleMapContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: '100vh',\n  },\n  containerDiv: {\n    height: '100%',\n  },\n});\n\nexport default MapView;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}