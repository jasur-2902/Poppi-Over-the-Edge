{"ast":null,"code":"import FontObserver from 'fontfaceobserver';\nexport default {\n  get name() {\n    return 'ExpoFontLoader';\n  },\n\n  loadAsync(fontFamilyName, resource) {\n    var canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n\n    if (!canInjectStyle) {\n      throw new Error('E_FONT_CREATION_FAILED : document element cannot support injecting fonts');\n    }\n\n    var style = _createWebStyle(fontFamilyName, resource);\n\n    document.head.appendChild(style);\n    return new FontObserver(fontFamilyName).load();\n  }\n\n};\n\nfunction _createWebStyle(fontFamily, resource) {\n  var fontStyle = \"@font-face {\\n    font-family: \".concat(fontFamily, \";\\n    src: url(\").concat(resource, \");\\n  }\");\n  var styleElement = document.createElement('style');\n  styleElement.type = 'text/css';\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = fontStyle;\n  } else {\n    var textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n\n  return styleElement;\n}","map":{"version":3,"sources":["../src/ExpoFontLoader.web.ts"],"names":[],"mappings":"AAAA,OAAO,YAAP,MAAyB,kBAAzB;AAEA,eAAe;AACb,MAAI,IAAJ,GAAQ;AACN,WAAO,gBAAP;AACD,GAHY;;AAKb,EAAA,SAAS,CAAC,cAAD,EAAyB,QAAzB,EAAyC;AAChD,QAAM,cAAc,GAAG,QAAQ,CAAC,IAAT,IAAiB,OAAO,QAAQ,CAAC,IAAT,CAAc,WAArB,KAAqC,UAA7E;;AACA,QAAI,CAAC,cAAL,EAAqB;AACnB,YAAM,IAAI,KAAJ,CAAU,0EAAV,CAAN;AACD;;AAED,QAAM,KAAK,GAAG,eAAe,CAAC,cAAD,EAAiB,QAAjB,CAA7B;;AACA,IAAA,QAAQ,CAAC,IAAT,CAAe,WAAf,CAA2B,KAA3B;AACA,WAAO,IAAI,YAAJ,CAAiB,cAAjB,EAAiC,IAAjC,EAAP;AACD;;AAdY,CAAf;;AAiBA,SAAS,eAAT,CAAyB,UAAzB,EAA6C,QAA7C,EAA6D;AAC3D,MAAM,SAAS,4CACE,UADF,6BAEF,QAFE,YAAf;AAKA,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,OAAvB,CAArB;AACA,EAAA,YAAY,CAAC,IAAb,GAAoB,UAApB;;AAGA,MAAI,YAAY,CAAC,UAAjB,EAA6B;AAE3B,IAAA,YAAY,CAAC,UAAb,CAAwB,OAAxB,GAAkC,SAAlC;AACD,GAHD,MAGO;AACL,QAAM,QAAQ,GAAG,QAAQ,CAAC,cAAT,CAAwB,SAAxB,CAAjB;AACA,IAAA,YAAY,CAAC,WAAb,CAAyB,QAAzB;AACD;;AACD,SAAO,YAAP;AACD","sourcesContent":["import FontObserver from 'fontfaceobserver';\n\nexport default {\n  get name(): string {\n    return 'ExpoFontLoader';\n  },\n\n  loadAsync(fontFamilyName: string, resource: string): Promise<void> {\n    const canInjectStyle = document.head && typeof document.head.appendChild === 'function';\n    if (!canInjectStyle) {\n      throw new Error('E_FONT_CREATION_FAILED : document element cannot support injecting fonts');\n    }\n\n    const style = _createWebStyle(fontFamilyName, resource);\n    document.head!.appendChild(style);\n    return new FontObserver(fontFamilyName).load();\n  },\n};\n\nfunction _createWebStyle(fontFamily: string, resource: string): HTMLStyleElement {\n  const fontStyle = `@font-face {\n    font-family: ${fontFamily};\n    src: url(${resource});\n  }`;\n\n  const styleElement = document.createElement('style');\n  styleElement.type = 'text/css';\n  // @ts-ignore: TypeScript does not define HTMLStyleElement::styleSheet. This is just for IE and\n  // possibly can be removed if it's unnecessary on IE 11.\n  if (styleElement.styleSheet) {\n    // @ts-ignore\n    styleElement.styleSheet.cssText = fontStyle;\n  } else {\n    const textNode = document.createTextNode(fontStyle);\n    styleElement.appendChild(textNode);\n  }\n  return styleElement;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}