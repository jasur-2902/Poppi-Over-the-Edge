{"ast":null,"code":"import PropTypes from 'prop-types';\nexport var availableApplePayNetworks = ['american_express', 'discover', 'master_card', 'visa'];\nexport var availableApplePayAddressFields = ['all', 'name', 'email', 'phone', 'postal_address'];\nexport var availableApplePayShippingTypes = ['shipping', 'delivery', 'store_pickup', 'service_pickup'];\nexport var availableSourceTypes = ['bancontact', 'giropay', 'ideal', 'sepaDebit', 'sofort', 'threeDSecure', 'alipay'];\nexport var setOptionsOptionsPropTypes = {\n  publishableKey: PropTypes.string,\n  merchantId: PropTypes.string,\n  androidPayMode: PropTypes.string\n};\nexport var availableApplePayNetworkPropTypes = PropTypes.oneOf(availableApplePayNetworks);\nexport var canMakeApplePayPaymentsOptionsPropTypes = {\n  networks: PropTypes.arrayOf(availableApplePayNetworkPropTypes)\n};\nexport var paymentRequestWithApplePayItemPropTypes = {\n  label: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['final', 'pending'])\n};\nexport var paymentRequestWithApplePayItemsPropTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape(paymentRequestWithApplePayItemPropTypes)).isRequired\n};\nexport var applePayAddressFieldsPropTypes = PropTypes.oneOf(availableApplePayAddressFields);\nexport var applePayOptionShippingMethodPropTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  detail: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired\n};\nexport var paymentRequestWithApplePayOptionsPropTypes = {\n  currencyCode: PropTypes.string,\n  countryCode: PropTypes.string,\n  requiredBillingAddressFields: PropTypes.arrayOf(applePayAddressFieldsPropTypes),\n  requiredShippingAddressFields: PropTypes.arrayOf(applePayAddressFieldsPropTypes),\n  shippingMethods: PropTypes.arrayOf(PropTypes.shape(applePayOptionShippingMethodPropTypes)),\n  shippingType: PropTypes.oneOf(availableApplePayShippingTypes)\n};\nexport var paymentRequestWithCardFormOptionsPropTypes = {\n  requiredBillingAddressFields: PropTypes.oneOf(['full', 'zip']),\n  managedAccountCurrency: PropTypes.string,\n  smsAutofillDisabled: PropTypes.bool,\n  prefilledInformation: PropTypes.shape({\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    billingAddress: PropTypes.shape({\n      name: PropTypes.string,\n      line1: PropTypes.string,\n      line2: PropTypes.string,\n      city: PropTypes.string,\n      state: PropTypes.string,\n      postalCode: PropTypes.string,\n      country: PropTypes.string,\n      phone: PropTypes.string,\n      email: PropTypes.string\n    })\n  }),\n  theme: PropTypes.shape({\n    primaryBackgroundColor: PropTypes.string,\n    secondaryBackgroundColor: PropTypes.string,\n    primaryForegroundColor: PropTypes.string,\n    secondaryForegroundColor: PropTypes.string,\n    accentColor: PropTypes.string,\n    errorColor: PropTypes.string\n  })\n};\nexport var createTokenWithCardParamsPropTypes = {\n  number: PropTypes.string.isRequired,\n  expMonth: PropTypes.number.isRequired,\n  expYear: PropTypes.number.isRequired,\n  cvc: PropTypes.string,\n  name: PropTypes.string,\n  addressLine1: PropTypes.string,\n  addressLine2: PropTypes.string,\n  addressCity: PropTypes.string,\n  addressState: PropTypes.string,\n  addressZip: PropTypes.string,\n  addressCountry: PropTypes.string,\n  country: PropTypes.string,\n  currency: PropTypes.string,\n  brand: PropTypes.string,\n  last4: PropTypes.string,\n  fingerprint: PropTypes.string,\n  funding: PropTypes.string\n};\nexport var createTokenWithBankAccountParamsPropTypes = {\n  accountNumber: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  routingNumber: PropTypes.string,\n  accountHolderName: PropTypes.string,\n  accountHolderType: PropTypes.oneOf(['company', 'individual'])\n};\nexport var androidPayLineItemPropTypes = {\n  currency_code: PropTypes.string.isRequired,\n  total_price: PropTypes.string.isRequired,\n  unit_price: PropTypes.string.isRequired,\n  quantity: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired\n};\nexport var paymentRequestWithAndroidPayOptionsPropTypes = {\n  total_price: PropTypes.string.isRequired,\n  currency_code: PropTypes.string.isRequired,\n  line_items: PropTypes.arrayOf(PropTypes.shape(androidPayLineItemPropTypes)).isRequired,\n  shipping_address_required: PropTypes.bool,\n  billing_address_required: PropTypes.bool\n};\nexport var createSourceWithParamsPropType = {\n  type: PropTypes.oneOf(availableSourceTypes).isRequired,\n  amount: PropTypes.number,\n  name: PropTypes.string,\n  returnURL: PropTypes.string,\n  statementDescriptor: PropTypes.string,\n  currency: PropTypes.string,\n  email: PropTypes.string,\n  bank: PropTypes.string,\n  iban: PropTypes.string,\n  addressLine1: PropTypes.string,\n  city: PropTypes.string,\n  postalCode: PropTypes.string,\n  country: PropTypes.string,\n  card: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/expo-payments-stripe/src/utils/types.js"],"names":["PropTypes","availableApplePayNetworks","availableApplePayAddressFields","availableApplePayShippingTypes","availableSourceTypes","setOptionsOptionsPropTypes","publishableKey","string","merchantId","androidPayMode","availableApplePayNetworkPropTypes","oneOf","canMakeApplePayPaymentsOptionsPropTypes","networks","arrayOf","paymentRequestWithApplePayItemPropTypes","label","isRequired","amount","type","paymentRequestWithApplePayItemsPropTypes","items","shape","applePayAddressFieldsPropTypes","applePayOptionShippingMethodPropTypes","id","detail","paymentRequestWithApplePayOptionsPropTypes","currencyCode","countryCode","requiredBillingAddressFields","requiredShippingAddressFields","shippingMethods","shippingType","paymentRequestWithCardFormOptionsPropTypes","managedAccountCurrency","smsAutofillDisabled","bool","prefilledInformation","email","phone","billingAddress","name","line1","line2","city","state","postalCode","country","theme","primaryBackgroundColor","secondaryBackgroundColor","primaryForegroundColor","secondaryForegroundColor","accentColor","errorColor","createTokenWithCardParamsPropTypes","number","expMonth","expYear","cvc","addressLine1","addressLine2","addressCity","addressState","addressZip","addressCountry","currency","brand","last4","fingerprint","funding","createTokenWithBankAccountParamsPropTypes","accountNumber","routingNumber","accountHolderName","accountHolderType","androidPayLineItemPropTypes","currency_code","total_price","unit_price","quantity","description","paymentRequestWithAndroidPayOptionsPropTypes","line_items","shipping_address_required","billing_address_required","createSourceWithParamsPropType","returnURL","statementDescriptor","bank","iban","card"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const availableApplePayNetworks = ['american_express', 'discover', 'master_card', 'visa'];\nexport const availableApplePayAddressFields = ['all', 'name', 'email', 'phone', 'postal_address'];\nexport const availableApplePayShippingTypes = [\n  'shipping',\n  'delivery',\n  'store_pickup',\n  'service_pickup',\n];\nexport const availableSourceTypes = [\n  'bancontact',\n  'giropay',\n  'ideal',\n  'sepaDebit',\n  'sofort',\n  'threeDSecure',\n  'alipay',\n];\n\nexport const setOptionsOptionsPropTypes = {\n  publishableKey: PropTypes.string,\n  merchantId: PropTypes.string,\n  androidPayMode: PropTypes.string,\n};\n\nexport const availableApplePayNetworkPropTypes = PropTypes.oneOf(availableApplePayNetworks);\n\nexport const canMakeApplePayPaymentsOptionsPropTypes = {\n  networks: PropTypes.arrayOf(availableApplePayNetworkPropTypes),\n};\n\nexport const paymentRequestWithApplePayItemPropTypes = {\n  label: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['final', 'pending']),\n};\n\nexport const paymentRequestWithApplePayItemsPropTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape(paymentRequestWithApplePayItemPropTypes)).isRequired,\n};\n\nexport const applePayAddressFieldsPropTypes = PropTypes.oneOf(availableApplePayAddressFields);\n\nexport const applePayOptionShippingMethodPropTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  detail: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n};\n\nexport const paymentRequestWithApplePayOptionsPropTypes = {\n  currencyCode: PropTypes.string,\n  countryCode: PropTypes.string,\n  requiredBillingAddressFields: PropTypes.arrayOf(applePayAddressFieldsPropTypes),\n  requiredShippingAddressFields: PropTypes.arrayOf(applePayAddressFieldsPropTypes),\n  shippingMethods: PropTypes.arrayOf(PropTypes.shape(applePayOptionShippingMethodPropTypes)),\n  shippingType: PropTypes.oneOf(availableApplePayShippingTypes),\n};\n\nexport const paymentRequestWithCardFormOptionsPropTypes = {\n  requiredBillingAddressFields: PropTypes.oneOf(['full', 'zip']),\n  managedAccountCurrency: PropTypes.string,\n  smsAutofillDisabled: PropTypes.bool,\n  prefilledInformation: PropTypes.shape({\n    email: PropTypes.string,\n    phone: PropTypes.string,\n    billingAddress: PropTypes.shape({\n      name: PropTypes.string,\n      line1: PropTypes.string,\n      line2: PropTypes.string,\n      city: PropTypes.string,\n      state: PropTypes.string,\n      postalCode: PropTypes.string,\n      country: PropTypes.string,\n      phone: PropTypes.string,\n      email: PropTypes.string,\n    }),\n  }),\n  theme: PropTypes.shape({\n    primaryBackgroundColor: PropTypes.string,\n    secondaryBackgroundColor: PropTypes.string,\n    primaryForegroundColor: PropTypes.string,\n    secondaryForegroundColor: PropTypes.string,\n    accentColor: PropTypes.string,\n    errorColor: PropTypes.string,\n  }),\n};\n\nexport const createTokenWithCardParamsPropTypes = {\n  number: PropTypes.string.isRequired,\n  expMonth: PropTypes.number.isRequired,\n  expYear: PropTypes.number.isRequired,\n  cvc: PropTypes.string,\n  name: PropTypes.string,\n  addressLine1: PropTypes.string,\n  addressLine2: PropTypes.string,\n  addressCity: PropTypes.string,\n  addressState: PropTypes.string,\n  addressZip: PropTypes.string,\n  addressCountry: PropTypes.string,\n  country: PropTypes.string,\n  currency: PropTypes.string,\n\n  // Android Only\n  brand: PropTypes.string,\n  last4: PropTypes.string,\n  fingerprint: PropTypes.string,\n  funding: PropTypes.string,\n};\n\nexport const createTokenWithBankAccountParamsPropTypes = {\n  accountNumber: PropTypes.string.isRequired,\n  countryCode: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  routingNumber: PropTypes.string,\n  accountHolderName: PropTypes.string,\n  accountHolderType: PropTypes.oneOf(['company', 'individual']),\n};\n\nexport const androidPayLineItemPropTypes = {\n  currency_code: PropTypes.string.isRequired,\n  total_price: PropTypes.string.isRequired,\n  unit_price: PropTypes.string.isRequired,\n  quantity: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nexport const paymentRequestWithAndroidPayOptionsPropTypes = {\n  total_price: PropTypes.string.isRequired,\n  currency_code: PropTypes.string.isRequired,\n  line_items: PropTypes.arrayOf(PropTypes.shape(androidPayLineItemPropTypes)).isRequired,\n  shipping_address_required: PropTypes.bool,\n  billing_address_required: PropTypes.bool,\n};\n\nexport const createSourceWithParamsPropType = {\n  type: PropTypes.oneOf(availableSourceTypes).isRequired,\n  amount: PropTypes.number,\n  name: PropTypes.string,\n  returnURL: PropTypes.string,\n  statementDescriptor: PropTypes.string,\n  currency: PropTypes.string,\n  email: PropTypes.string,\n  bank: PropTypes.string,\n  iban: PropTypes.string,\n  addressLine1: PropTypes.string,\n  city: PropTypes.string,\n  postalCode: PropTypes.string,\n  country: PropTypes.string,\n  card: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}