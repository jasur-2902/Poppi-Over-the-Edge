{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nexport function getCalendarsAsync(_x) {\n  return _getCalendarsAsync.apply(this, arguments);\n}\n\nfunction _getCalendarsAsync() {\n  _getCalendarsAsync = _asyncToGenerator(function* (entityType) {\n    if (!entityType) {\n      return NativeModules.ExponentCalendar.getCalendarsAsync(null);\n    }\n\n    return NativeModules.ExponentCalendar.getCalendarsAsync(entityType);\n  });\n  return _getCalendarsAsync.apply(this, arguments);\n}\n\nexport function createCalendarAsync() {\n  return _createCalendarAsync.apply(this, arguments);\n}\n\nfunction _createCalendarAsync() {\n  _createCalendarAsync = _asyncToGenerator(function* () {\n    var details = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var color = details.color ? processColor(details.color) : undefined;\n\n    var newDetails = _objectSpread(_objectSpread({}, details), {}, {\n      id: undefined,\n      color\n    });\n\n    return NativeModules.ExponentCalendar.saveCalendarAsync(newDetails);\n  });\n  return _createCalendarAsync.apply(this, arguments);\n}\n\nexport function updateCalendarAsync(_x2) {\n  return _updateCalendarAsync.apply(this, arguments);\n}\n\nfunction _updateCalendarAsync() {\n  _updateCalendarAsync = _asyncToGenerator(function* (id) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!id) {\n      throw new Error('updateCalendarAsync must be called with an id (string) of the target calendar');\n    }\n\n    var color = details.color ? processColor(details.color) : undefined;\n\n    if (Platform.OS === 'android') {\n      if (details.hasOwnProperty('source') || details.hasOwnProperty('color') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities') || details.hasOwnProperty('isPrimary') || details.hasOwnProperty('ownerAccount') || details.hasOwnProperty('timeZone') || details.hasOwnProperty('allowedReminders') || details.hasOwnProperty('allowedAttendeeTypes') || details.hasOwnProperty('accessLevel')) {\n        console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n      }\n    } else {\n      if (details.hasOwnProperty('source') || details.hasOwnProperty('type') || details.hasOwnProperty('entityType') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities')) {\n        console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n      }\n    }\n\n    var newDetails = _objectSpread(_objectSpread({}, details), {}, {\n      id,\n      color\n    });\n\n    return NativeModules.ExponentCalendar.saveCalendarAsync(newDetails);\n  });\n  return _updateCalendarAsync.apply(this, arguments);\n}\n\nexport function deleteCalendarAsync(_x3) {\n  return _deleteCalendarAsync.apply(this, arguments);\n}\n\nfunction _deleteCalendarAsync() {\n  _deleteCalendarAsync = _asyncToGenerator(function* (id) {\n    if (!id) {\n      throw new Error('deleteCalendarAsync must be called with an id (string) of the target calendar');\n    }\n\n    return NativeModules.ExponentCalendar.deleteCalendarAsync(id);\n  });\n  return _deleteCalendarAsync.apply(this, arguments);\n}\n\nexport function getEventsAsync(_x4, _x5, _x6) {\n  return _getEventsAsync.apply(this, arguments);\n}\n\nfunction _getEventsAsync() {\n  _getEventsAsync = _asyncToGenerator(function* (calendarIds, startDate, endDate) {\n    if (!startDate) {\n      throw new Error('getEventsAsync must be called with a startDate (date) to search for events');\n    }\n\n    if (!endDate) {\n      throw new Error('getEventsAsync must be called with an endDate (date) to search for events');\n    }\n\n    if (!calendarIds || !calendarIds.length) {\n      throw new Error('getEventsAsync must be called with a non-empty array of calendarIds to search');\n    }\n\n    return NativeModules.ExponentCalendar.getEventsAsync(startDate, endDate, calendarIds);\n  });\n  return _getEventsAsync.apply(this, arguments);\n}\n\nexport function getEventAsync(_x7) {\n  return _getEventAsync.apply(this, arguments);\n}\n\nfunction _getEventAsync() {\n  _getEventAsync = _asyncToGenerator(function* (id) {\n    var {\n      futureEvents = false,\n      instanceStartDate\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!id) {\n      throw new Error('getEventAsync must be called with an id (string) of the target event');\n    }\n\n    if (Platform.OS === 'ios') {\n      return NativeModules.ExponentCalendar.getEventByIdAsync(id, instanceStartDate);\n    } else {\n      return NativeModules.ExponentCalendar.getEventByIdAsync(id);\n    }\n  });\n  return _getEventAsync.apply(this, arguments);\n}\n\nexport function createEventAsync(_x8) {\n  return _createEventAsync.apply(this, arguments);\n}\n\nfunction _createEventAsync() {\n  _createEventAsync = _asyncToGenerator(function* (calendarId) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!calendarId) {\n      throw new Error('createEventAsync must be called with an id (string) of the target calendar');\n    }\n\n    if (Platform.OS === 'android') {\n      if (!details.startDate) {\n        throw new Error('createEventAsync requires a startDate (Date)');\n      }\n\n      if (!details.endDate) {\n        throw new Error('createEventAsync requires an endDate (Date)');\n      }\n\n      if (!details.timeZone) {\n        throw new Error('createEventAsync requires a timeZone (string)');\n      }\n    }\n\n    var newDetails = _objectSpread(_objectSpread({}, details), {}, {\n      id: undefined,\n      calendarId: calendarId === DEFAULT ? undefined : calendarId\n    });\n\n    return NativeModules.ExponentCalendar.saveEventAsync(newDetails, {});\n  });\n  return _createEventAsync.apply(this, arguments);\n}\n\nexport function updateEventAsync(_x9) {\n  return _updateEventAsync.apply(this, arguments);\n}\n\nfunction _updateEventAsync() {\n  _updateEventAsync = _asyncToGenerator(function* (id) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var {\n      futureEvents = false,\n      instanceStartDate\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!id) {\n      throw new Error('updateEventAsync must be called with an id (string) of the target event');\n    }\n\n    if (Platform.OS === 'ios') {\n      if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate') || details.hasOwnProperty('originalStartDate') || details.hasOwnProperty('isDetached') || details.hasOwnProperty('status') || details.hasOwnProperty('organizer')) {\n        console.warn('updateEventAsync was called with one or more read-only properties, which will not be updated');\n      }\n    }\n\n    var newDetails = _objectSpread(_objectSpread({}, details), {}, {\n      id,\n      instanceStartDate\n    });\n\n    return NativeModules.ExponentCalendar.saveEventAsync(newDetails, {\n      futureEvents\n    });\n  });\n  return _updateEventAsync.apply(this, arguments);\n}\n\nexport function deleteEventAsync(_x10) {\n  return _deleteEventAsync.apply(this, arguments);\n}\n\nfunction _deleteEventAsync() {\n  _deleteEventAsync = _asyncToGenerator(function* (id) {\n    var {\n      futureEvents = false,\n      instanceStartDate\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!id) {\n      throw new Error('deleteEventAsync must be called with an id (string) of the target event');\n    }\n\n    return NativeModules.ExponentCalendar.deleteEventAsync({\n      id,\n      instanceStartDate\n    }, {\n      futureEvents\n    });\n  });\n  return _deleteEventAsync.apply(this, arguments);\n}\n\nexport function getAttendeesForEventAsync(_x11) {\n  return _getAttendeesForEventAsync.apply(this, arguments);\n}\n\nfunction _getAttendeesForEventAsync() {\n  _getAttendeesForEventAsync = _asyncToGenerator(function* (id) {\n    var {\n      futureEvents = false,\n      instanceStartDate\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!id) {\n      throw new Error('getAttendeesForEventAsync must be called with an id (string) of the target event');\n    }\n\n    var params = Platform.OS === 'ios' ? {\n      id,\n      instanceStartDate\n    } : id;\n    return NativeModules.ExponentCalendar.getAttendeesForEventAsync(params);\n  });\n  return _getAttendeesForEventAsync.apply(this, arguments);\n}\n\nexport function createAttendeeAsync(_x12) {\n  return _createAttendeeAsync.apply(this, arguments);\n}\n\nfunction _createAttendeeAsync() {\n  _createAttendeeAsync = _asyncToGenerator(function* (eventId) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (Platform.OS === 'ios') {\n      throw new Error('createAttendeeAsync is not available on iOS');\n    }\n\n    if (!eventId) {\n      throw new Error('createAttendeeAsync must be called with an id (string) of the target event');\n    }\n\n    if (!details.email) {\n      throw new Error('createAttendeeAsync requires an email (string)');\n    }\n\n    if (!details.role) {\n      throw new Error('createAttendeeAsync requires a role (string)');\n    }\n\n    if (!details.type) {\n      throw new Error('createAttendeeAsync requires a type (string)');\n    }\n\n    if (!details.status) {\n      throw new Error('createAttendeeAsync requires a status (string)');\n    }\n\n    var newDetails = _objectSpread(_objectSpread({}, details), {}, {\n      id: undefined\n    });\n\n    return NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, eventId);\n  });\n  return _createAttendeeAsync.apply(this, arguments);\n}\n\nexport function updateAttendeeAsync(_x13) {\n  return _updateAttendeeAsync.apply(this, arguments);\n}\n\nfunction _updateAttendeeAsync() {\n  _updateAttendeeAsync = _asyncToGenerator(function* (id) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (Platform.OS === 'ios') {\n      throw new Error('updateAttendeeAsync is not available on iOS');\n    }\n\n    if (!id) {\n      throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');\n    }\n\n    var newDetails = _objectSpread(_objectSpread({}, details), {}, {\n      id\n    });\n\n    return NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, null);\n  });\n  return _updateAttendeeAsync.apply(this, arguments);\n}\n\nexport function deleteAttendeeAsync(_x14) {\n  return _deleteAttendeeAsync.apply(this, arguments);\n}\n\nfunction _deleteAttendeeAsync() {\n  _deleteAttendeeAsync = _asyncToGenerator(function* (id) {\n    if (Platform.OS === 'ios') {\n      throw new Error('deleteAttendeeAsync is not available on iOS');\n    }\n\n    if (!id) {\n      throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');\n    }\n\n    return NativeModules.ExponentCalendar.deleteAttendeeAsync(id);\n  });\n  return _deleteAttendeeAsync.apply(this, arguments);\n}\n\nexport function getRemindersAsync(_x15, _x16, _x17, _x18) {\n  return _getRemindersAsync.apply(this, arguments);\n}\n\nfunction _getRemindersAsync() {\n  _getRemindersAsync = _asyncToGenerator(function* (calendarIds, status, startDate, endDate) {\n    if (Platform.OS === 'android') {\n      throw new Error('getRemindersAsync is not available on Android');\n    }\n\n    if (status && !startDate) {\n      throw new Error('getRemindersAsync must be called with a startDate (date) to search for reminders');\n    }\n\n    if (status && !endDate) {\n      throw new Error('getRemindersAsync must be called with an endDate (date) to search for reminders');\n    }\n\n    if (!calendarIds || !calendarIds.length) {\n      throw new Error('getRemindersAsync must be called with a non-empty array of calendarIds to search');\n    }\n\n    return NativeModules.ExponentCalendar.getRemindersAsync(startDate || null, endDate || null, calendarIds, status || null);\n  });\n  return _getRemindersAsync.apply(this, arguments);\n}\n\nexport function getReminderAsync(_x19) {\n  return _getReminderAsync.apply(this, arguments);\n}\n\nfunction _getReminderAsync() {\n  _getReminderAsync = _asyncToGenerator(function* (id) {\n    if (Platform.OS === 'android') {\n      throw new Error('getReminderAsync is not available on Android');\n    }\n\n    if (!id) {\n      throw new Error('getReminderAsync must be called with an id (string) of the target reminder');\n    }\n\n    return NativeModules.ExponentCalendar.getReminderByIdAsync(id);\n  });\n  return _getReminderAsync.apply(this, arguments);\n}\n\nexport function createReminderAsync(_x20) {\n  return _createReminderAsync.apply(this, arguments);\n}\n\nfunction _createReminderAsync() {\n  _createReminderAsync = _asyncToGenerator(function* (calendarId) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (Platform.OS === 'android') {\n      throw new Error('createReminderAsync is not available on Android');\n    }\n\n    if (!calendarId) {\n      throw new Error('createReminderAsync must be called with an id (string) of the target calendar');\n    }\n\n    var newDetails = _objectSpread(_objectSpread({}, details), {}, {\n      id: undefined,\n      calendarId: calendarId === DEFAULT ? undefined : calendarId\n    });\n\n    return NativeModules.ExponentCalendar.saveReminderAsync(newDetails);\n  });\n  return _createReminderAsync.apply(this, arguments);\n}\n\nexport function updateReminderAsync(_x21) {\n  return _updateReminderAsync.apply(this, arguments);\n}\n\nfunction _updateReminderAsync() {\n  _updateReminderAsync = _asyncToGenerator(function* (id) {\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (Platform.OS === 'android') {\n      throw new Error('updateReminderAsync is not available on Android');\n    }\n\n    if (!id) {\n      throw new Error('updateReminderAsync must be called with an id (string) of the target reminder');\n    }\n\n    if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate')) {\n      console.warn('updateReminderAsync was called with one or more read-only properties, which will not be updated');\n    }\n\n    var newDetails = _objectSpread(_objectSpread({}, details), {}, {\n      id\n    });\n\n    return NativeModules.ExponentCalendar.saveReminderAsync(newDetails);\n  });\n  return _updateReminderAsync.apply(this, arguments);\n}\n\nexport function deleteReminderAsync(_x22) {\n  return _deleteReminderAsync.apply(this, arguments);\n}\n\nfunction _deleteReminderAsync() {\n  _deleteReminderAsync = _asyncToGenerator(function* (id) {\n    if (Platform.OS === 'android') {\n      throw new Error('deleteReminderAsync is not available on Android');\n    }\n\n    if (!id) {\n      throw new Error('deleteReminderAsync must be called with an id (string) of the target reminder');\n    }\n\n    return NativeModules.ExponentCalendar.deleteReminderAsync(id);\n  });\n  return _deleteReminderAsync.apply(this, arguments);\n}\n\nexport function getSourcesAsync() {\n  return _getSourcesAsync.apply(this, arguments);\n}\n\nfunction _getSourcesAsync() {\n  _getSourcesAsync = _asyncToGenerator(function* () {\n    if (Platform.OS === 'android') {\n      throw new Error('getSourcesAsync is not available on Android');\n    }\n\n    return NativeModules.ExponentCalendar.getSourcesAsync();\n  });\n  return _getSourcesAsync.apply(this, arguments);\n}\n\nexport function getSourceAsync(_x23) {\n  return _getSourceAsync.apply(this, arguments);\n}\n\nfunction _getSourceAsync() {\n  _getSourceAsync = _asyncToGenerator(function* (id) {\n    if (Platform.OS === 'android') {\n      throw new Error('getSourceAsync is not available on Android');\n    }\n\n    if (!id) {\n      throw new Error('getSourceAsync must be called with an id (string) of the target source');\n    }\n\n    return NativeModules.ExponentCalendar.getSourceByIdAsync(id);\n  });\n  return _getSourceAsync.apply(this, arguments);\n}\n\nexport function openEventInCalendar(id) {\n  if (Platform.OS === 'ios') {\n    console.warn('openEventInCalendar is not available on iOS');\n    return;\n  }\n\n  if (!id) {\n    throw new Error('openEventInCalendar must be called with an id (string) of the target event');\n  }\n\n  return NativeModules.ExponentCalendar.openEventInCalendar(parseInt(id, 10));\n}\nexport var EntityTypes = {\n  EVENT: 'event',\n  REMINDER: 'reminder'\n};\nexport var Frequency = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  YEARLY: 'yearly'\n};\nexport var Availability = {\n  NOT_SUPPORTED: 'notSupported',\n  BUSY: 'busy',\n  FREE: 'free',\n  TENTATIVE: 'tentative',\n  UNAVAILABLE: 'unavailable'\n};\nexport var CalendarType = {\n  LOCAL: 'local',\n  CALDAV: 'caldav',\n  EXCHANGE: 'exchange',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays'\n};\nexport var EventStatus = {\n  NONE: 'none',\n  CONFIRMED: 'confirmed',\n  TENTATIVE: 'tentative',\n  CANCELED: 'canceled'\n};\nexport var SourceType = {\n  LOCAL: 'local',\n  EXCHANGE: 'exchange',\n  CALDAV: 'caldav',\n  MOBILEME: 'mobileme',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays'\n};\nexport var AttendeeRole = {\n  UNKNOWN: 'unknown',\n  REQUIRED: 'required',\n  OPTIONAL: 'optional',\n  CHAIR: 'chair',\n  NON_PARTICIPANT: 'nonParticipant',\n  ATTENDEE: 'attendee',\n  ORGANIZER: 'organizer',\n  PERFORMER: 'performer',\n  SPEAKER: 'speaker',\n  NONE: 'none'\n};\nexport var AttendeeStatus = {\n  UNKNOWN: 'unknown',\n  PENDING: 'pending',\n  ACCEPTED: 'accepted',\n  DECLINED: 'declined',\n  TENTATIVE: 'tentative',\n  DELEGATED: 'delegated',\n  COMPLETED: 'completed',\n  IN_PROCESS: 'inProcess',\n  INVITED: 'invited',\n  NONE: 'none'\n};\nexport var AttendeeType = {\n  UNKNOWN: 'unknown',\n  PERSON: 'person',\n  ROOM: 'room',\n  GROUP: 'group',\n  RESOURCE: 'resource',\n  OPTIONAL: 'optional',\n  REQUIRED: 'required',\n  NONE: 'none'\n};\nexport var AlarmMethod = {\n  ALARM: 'alarm',\n  ALERT: 'alert',\n  EMAIL: 'email',\n  SMS: 'sms',\n  DEFAULT: 'default'\n};\nexport var EventAccessLevel = {\n  CONFIDENTIAL: 'confidential',\n  PRIVATE: 'private',\n  PUBLIC: 'public',\n  DEFAULT: 'default'\n};\nexport var CalendarAccessLevel = {\n  CONTRIBUTOR: 'contributor',\n  EDITOR: 'editor',\n  FREEBUSY: 'freebusy',\n  OVERRIDE: 'override',\n  OWNER: 'owner',\n  READ: 'read',\n  RESPOND: 'respond',\n  ROOT: 'root',\n  NONE: 'none'\n};\nexport var ReminderStatus = {\n  COMPLETED: 'completed',\n  INCOMPLETE: 'incomplete'\n};\nexport var DEFAULT = 'default';","map":{"version":3,"sources":["../src/Calendar.ts"],"names":[],"mappings":"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","sourcesContent":["import { NativeModules, Platform, processColor } from 'react-native';\n\ntype RecurringEventOptions = {\n  futureEvents?: boolean,\n  instanceStartDate?: string,\n}; // iOS\n\ntype Calendar = {\n  id?: string,\n  title?: string,\n  sourceId?: string, // iOS\n  source?: Source,\n  type?: string, // iOS\n  color?: string,\n  entityType?: string, // iOS\n  allowsModifications?: boolean,\n  allowedAvailabilities?: string[],\n  isPrimary?: boolean, // Android\n  name?: string, // Android\n  ownerAccount?: string, // Android\n  timeZone?: string, // Android\n  allowedReminders?: string[], // Android\n  allowedAttendeeTypes?: string[], // Android\n  isVisible?: boolean, // Android\n  isSynced?: boolean, // Android\n  accessLevel?: string, // Android\n};\n\ntype Source = {\n  id?: string, // iOS only ??\n  type?: string,\n  name?: string,\n  isLocalAccount?: boolean, // Android\n};\n\ntype Event = {\n  id?: string,\n  calendarId?: string,\n  title?: string,\n  location?: string,\n  creationDate?: string, // iOS\n  lastModifiedDate?: string, // iOS\n  timeZone?: string,\n  endTimeZone?: string, // Android\n  url?: string, // iOS\n  notes?: string,\n  alarms?: Alarm[],\n  recurrenceRule?: RecurrenceRule,\n  startDate?: string,\n  endDate?: string,\n  originalStartDate?: string, // iOS\n  isDetached?: boolean, // iOS\n  allDay?: boolean,\n  availability?: string, // Availability\n  status?: string, // Status\n  organizer?: string, // Organizer - iOS\n  organizerEmail?: string, // Android\n  accessLevel?: string, // Android,\n  guestsCanModify?: boolean, // Android,\n  guestsCanInviteOthers?: boolean, // Android\n  guestsCanSeeGuests?: boolean, // Android\n  originalId?: string, // Android\n  instanceId?: string, // Android\n};\n\ntype Reminder = {\n  id?: string,\n  calendarId?: string,\n  title?: string,\n  location?: string,\n  creationDate?: string,\n  lastModifiedDate?: string,\n  timeZone?: string,\n  url?: string,\n  notes?: string,\n  alarms?: Alarm[],\n  recurrenceRule?: RecurrenceRule,\n  startDate?: string,\n  dueDate?: string,\n  completed?: boolean,\n  completionDate?: string,\n};\n\ntype Attendee = {\n  id?: string, // Android\n  isCurrentUser?: boolean, // iOS\n  name?: string,\n  role?: string,\n  status?: string,\n  type?: string,\n  url?: string, // iOS\n  email?: string, // Android\n};\n\ntype Alarm = {\n  absoluteDate?: string, // iOS\n  relativeOffset?: string,\n  structuredLocation?: {\n    // iOS\n    title?: string,\n    proximity?: string, // Proximity\n    radius?: number,\n    coords?: {\n      latitude?: number,\n      longitude?: number,\n    },\n  },\n  method?: string, // Method, Android\n};\n\ntype RecurrenceRule = {\n  frequency: string, // Frequency\n  interval?: number,\n  endDate?: string,\n  occurrence?: number,\n};\n\nexport async function getCalendarsAsync(entityType?: string): Promise<void> {\n  if (!entityType) {\n    return NativeModules.ExponentCalendar.getCalendarsAsync(null);\n  }\n  return NativeModules.ExponentCalendar.getCalendarsAsync(entityType);\n}\n\nexport async function createCalendarAsync(details: Calendar = {}): Promise<string> {\n  let color = details.color ? processColor(details.color) : undefined;\n  const newDetails = { ...details, id: undefined, color };\n  return NativeModules.ExponentCalendar.saveCalendarAsync(newDetails);\n}\n\nexport async function updateCalendarAsync(id: string, details: Calendar = {}): Promise<string> {\n  if (!id) {\n    throw new Error(\n      'updateCalendarAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  let color = details.color ? processColor(details.color) : undefined;\n\n  if (Platform.OS === 'android') {\n    if (\n      details.hasOwnProperty('source') ||\n      details.hasOwnProperty('color') ||\n      details.hasOwnProperty('allowsModifications') ||\n      details.hasOwnProperty('allowedAvailabilities') ||\n      details.hasOwnProperty('isPrimary') ||\n      details.hasOwnProperty('ownerAccount') ||\n      details.hasOwnProperty('timeZone') ||\n      details.hasOwnProperty('allowedReminders') ||\n      details.hasOwnProperty('allowedAttendeeTypes') ||\n      details.hasOwnProperty('accessLevel')\n    ) {\n      console.warn(\n        'updateCalendarAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  } else {\n    if (\n      details.hasOwnProperty('source') ||\n      details.hasOwnProperty('type') ||\n      details.hasOwnProperty('entityType') ||\n      details.hasOwnProperty('allowsModifications') ||\n      details.hasOwnProperty('allowedAvailabilities')\n    ) {\n      console.warn(\n        'updateCalendarAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  }\n\n  const newDetails = { ...details, id, color };\n  return NativeModules.ExponentCalendar.saveCalendarAsync(newDetails);\n}\n\nexport async function deleteCalendarAsync(id: string): Promise<void> {\n  if (!id) {\n    throw new Error(\n      'deleteCalendarAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  return NativeModules.ExponentCalendar.deleteCalendarAsync(id);\n}\n\nexport async function getEventsAsync(\n  calendarIds: string[],\n  startDate: Date,\n  endDate: Date\n): Promise<Event[]> {\n  if (!startDate) {\n    throw new Error('getEventsAsync must be called with a startDate (date) to search for events');\n  }\n  if (!endDate) {\n    throw new Error('getEventsAsync must be called with an endDate (date) to search for events');\n  }\n  if (!calendarIds || !calendarIds.length) {\n    throw new Error(\n      'getEventsAsync must be called with a non-empty array of calendarIds to search'\n    );\n  }\n  return NativeModules.ExponentCalendar.getEventsAsync(startDate, endDate, calendarIds);\n}\n\nexport async function getEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<Event> {\n  if (!id) {\n    throw new Error('getEventAsync must be called with an id (string) of the target event');\n  }\n  if (Platform.OS === 'ios') {\n    return NativeModules.ExponentCalendar.getEventByIdAsync(id, instanceStartDate);\n  } else {\n    return NativeModules.ExponentCalendar.getEventByIdAsync(id);\n  }\n}\n\nexport async function createEventAsync(calendarId: string, details: Event = {}): Promise<string> {\n  if (!calendarId) {\n    throw new Error('createEventAsync must be called with an id (string) of the target calendar');\n  }\n\n  if (Platform.OS === 'android') {\n    if (!details.startDate) {\n      throw new Error('createEventAsync requires a startDate (Date)');\n    }\n    if (!details.endDate) {\n      throw new Error('createEventAsync requires an endDate (Date)');\n    }\n    if (!details.timeZone) {\n      throw new Error('createEventAsync requires a timeZone (string)');\n    }\n  }\n\n  const newDetails = {\n    ...details,\n    id: undefined,\n    calendarId: calendarId === DEFAULT ? undefined : calendarId,\n  };\n  return NativeModules.ExponentCalendar.saveEventAsync(newDetails, {});\n}\n\nexport async function updateEventAsync(\n  id: string,\n  details: Event = {},\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<string> {\n  if (!id) {\n    throw new Error('updateEventAsync must be called with an id (string) of the target event');\n  }\n\n  if (Platform.OS === 'ios') {\n    if (\n      details.hasOwnProperty('creationDate') ||\n      details.hasOwnProperty('lastModifiedDate') ||\n      details.hasOwnProperty('originalStartDate') ||\n      details.hasOwnProperty('isDetached') ||\n      details.hasOwnProperty('status') ||\n      details.hasOwnProperty('organizer')\n    ) {\n      console.warn(\n        'updateEventAsync was called with one or more read-only properties, which will not be updated'\n      );\n    }\n  }\n\n  const newDetails = { ...details, id, instanceStartDate };\n  return NativeModules.ExponentCalendar.saveEventAsync(newDetails, { futureEvents });\n}\n\nexport async function deleteEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<void> {\n  if (!id) {\n    throw new Error('deleteEventAsync must be called with an id (string) of the target event');\n  }\n  return NativeModules.ExponentCalendar.deleteEventAsync(\n    { id, instanceStartDate },\n    { futureEvents }\n  );\n}\n\nexport async function getAttendeesForEventAsync(\n  id: string,\n  { futureEvents = false, instanceStartDate }: RecurringEventOptions = {}\n): Promise<Attendee[]> {\n  if (!id) {\n    throw new Error(\n      'getAttendeesForEventAsync must be called with an id (string) of the target event'\n    );\n  }\n  // Android only takes an ID, iOS takes an object\n  const params = Platform.OS === 'ios' ? { id, instanceStartDate } : id;\n  return NativeModules.ExponentCalendar.getAttendeesForEventAsync(params);\n}\n\nexport async function createAttendeeAsync(\n  eventId: string,\n  details: Attendee = {}\n): Promise<string> {\n  if (Platform.OS === 'ios') {\n    throw new Error('createAttendeeAsync is not available on iOS');\n  }\n  if (!eventId) {\n    throw new Error('createAttendeeAsync must be called with an id (string) of the target event');\n  }\n  if (!details.email) {\n    throw new Error('createAttendeeAsync requires an email (string)');\n  }\n  if (!details.role) {\n    throw new Error('createAttendeeAsync requires a role (string)');\n  }\n  if (!details.type) {\n    throw new Error('createAttendeeAsync requires a type (string)');\n  }\n  if (!details.status) {\n    throw new Error('createAttendeeAsync requires a status (string)');\n  }\n  const newDetails = { ...details, id: undefined };\n  return NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, eventId);\n} // Android\n\nexport async function updateAttendeeAsync(id: string, details: Attendee = {}): Promise<string> {\n  if (Platform.OS === 'ios') {\n    throw new Error('updateAttendeeAsync is not available on iOS');\n  }\n  if (!id) {\n    throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');\n  }\n  const newDetails = { ...details, id };\n  return NativeModules.ExponentCalendar.saveAttendeeForEventAsync(newDetails, null);\n} // Android\n\nexport async function deleteAttendeeAsync(id: string): Promise<void> {\n  if (Platform.OS === 'ios') {\n    throw new Error('deleteAttendeeAsync is not available on iOS');\n  }\n  if (!id) {\n    throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');\n  }\n  return NativeModules.ExponentCalendar.deleteAttendeeAsync(id);\n} // Android\n\nexport async function getRemindersAsync(\n  calendarIds: string[],\n  status: string | null,\n  startDate: Date,\n  endDate: Date\n): Promise<Reminder[]> {\n  if (Platform.OS === 'android') {\n    throw new Error('getRemindersAsync is not available on Android');\n  }\n  if (status && !startDate) {\n    throw new Error(\n      'getRemindersAsync must be called with a startDate (date) to search for reminders'\n    );\n  }\n  if (status && !endDate) {\n    throw new Error(\n      'getRemindersAsync must be called with an endDate (date) to search for reminders'\n    );\n  }\n  if (!calendarIds || !calendarIds.length) {\n    throw new Error(\n      'getRemindersAsync must be called with a non-empty array of calendarIds to search'\n    );\n  }\n  return NativeModules.ExponentCalendar.getRemindersAsync(\n    startDate || null,\n    endDate || null,\n    calendarIds,\n    status || null\n  );\n} // iOS\n\nexport async function getReminderAsync(id: string): Promise<Reminder> {\n  if (Platform.OS === 'android') {\n    throw new Error('getReminderAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error('getReminderAsync must be called with an id (string) of the target reminder');\n  }\n  return NativeModules.ExponentCalendar.getReminderByIdAsync(id);\n} // iOS\n\nexport async function createReminderAsync(\n  calendarId: string,\n  details: Reminder = {}\n): Promise<string> {\n  if (Platform.OS === 'android') {\n    throw new Error('createReminderAsync is not available on Android');\n  }\n  if (!calendarId) {\n    throw new Error(\n      'createReminderAsync must be called with an id (string) of the target calendar'\n    );\n  }\n  const newDetails = {\n    ...details,\n    id: undefined,\n    calendarId: calendarId === DEFAULT ? undefined : calendarId,\n  };\n  return NativeModules.ExponentCalendar.saveReminderAsync(newDetails);\n} // iOS\n\nexport async function updateReminderAsync(id: string, details: Reminder = {}): Promise<string> {\n  if (Platform.OS === 'android') {\n    throw new Error('updateReminderAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error(\n      'updateReminderAsync must be called with an id (string) of the target reminder'\n    );\n  }\n\n  if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate')) {\n    console.warn(\n      'updateReminderAsync was called with one or more read-only properties, which will not be updated'\n    );\n  }\n\n  const newDetails = { ...details, id };\n  return NativeModules.ExponentCalendar.saveReminderAsync(newDetails);\n} // iOS\n\nexport async function deleteReminderAsync(id: string): Promise<void> {\n  if (Platform.OS === 'android') {\n    throw new Error('deleteReminderAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error(\n      'deleteReminderAsync must be called with an id (string) of the target reminder'\n    );\n  }\n  return NativeModules.ExponentCalendar.deleteReminderAsync(id);\n} // iOS\n\nexport async function getSourcesAsync(): Promise<Source[]> {\n  if (Platform.OS === 'android') {\n    throw new Error('getSourcesAsync is not available on Android');\n  }\n  return NativeModules.ExponentCalendar.getSourcesAsync();\n} // iOS\n\nexport async function getSourceAsync(id: string): Promise<Source> {\n  if (Platform.OS === 'android') {\n    throw new Error('getSourceAsync is not available on Android');\n  }\n  if (!id) {\n    throw new Error('getSourceAsync must be called with an id (string) of the target source');\n  }\n  return NativeModules.ExponentCalendar.getSourceByIdAsync(id);\n} // iOS\n\nexport function openEventInCalendar(id: string): void {\n  if (Platform.OS === 'ios') {\n    console.warn('openEventInCalendar is not available on iOS');\n    return;\n  }\n  if (!id) {\n    throw new Error('openEventInCalendar must be called with an id (string) of the target event');\n  }\n  return NativeModules.ExponentCalendar.openEventInCalendar(parseInt(id, 10));\n} // Android\n\nexport const EntityTypes = {\n  EVENT: 'event',\n  REMINDER: 'reminder',\n};\n\nexport const Frequency = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  YEARLY: 'yearly',\n};\n\nexport const Availability = {\n  NOT_SUPPORTED: 'notSupported', // iOS\n  BUSY: 'busy',\n  FREE: 'free',\n  TENTATIVE: 'tentative',\n  UNAVAILABLE: 'unavailable', // iOS\n};\n\nexport const CalendarType = {\n  LOCAL: 'local',\n  CALDAV: 'caldav',\n  EXCHANGE: 'exchange',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays',\n}; // iOS\n\nexport const EventStatus = {\n  NONE: 'none',\n  CONFIRMED: 'confirmed',\n  TENTATIVE: 'tentative',\n  CANCELED: 'canceled',\n};\n\nexport const SourceType = {\n  LOCAL: 'local',\n  EXCHANGE: 'exchange',\n  CALDAV: 'caldav',\n  MOBILEME: 'mobileme',\n  SUBSCRIBED: 'subscribed',\n  BIRTHDAYS: 'birthdays',\n};\n\nexport const AttendeeRole = {\n  UNKNOWN: 'unknown', // iOS\n  REQUIRED: 'required', // iOS\n  OPTIONAL: 'optional', // iOS\n  CHAIR: 'chair', // iOS\n  NON_PARTICIPANT: 'nonParticipant', // iOS\n  ATTENDEE: 'attendee', // Android\n  ORGANIZER: 'organizer', // Android\n  PERFORMER: 'performer', // Android\n  SPEAKER: 'speaker', // Android\n  NONE: 'none', // Android\n};\n\nexport const AttendeeStatus = {\n  UNKNOWN: 'unknown', // iOS\n  PENDING: 'pending', // iOS\n  ACCEPTED: 'accepted',\n  DECLINED: 'declined',\n  TENTATIVE: 'tentative',\n  DELEGATED: 'delegated', // iOS\n  COMPLETED: 'completed', // iOS\n  IN_PROCESS: 'inProcess', // iOS\n  INVITED: 'invited', // Android\n  NONE: 'none', // Android\n};\n\nexport const AttendeeType = {\n  UNKNOWN: 'unknown', // iOS\n  PERSON: 'person', // iOS\n  ROOM: 'room', // iOS\n  GROUP: 'group', // iOS\n  RESOURCE: 'resource',\n  OPTIONAL: 'optional', // Android\n  REQUIRED: 'required', // Android\n  NONE: 'none', // Android\n};\n\nexport const AlarmMethod = {\n  ALARM: 'alarm',\n  ALERT: 'alert',\n  EMAIL: 'email',\n  SMS: 'sms',\n  DEFAULT: 'default',\n};\n\nexport const EventAccessLevel = {\n  CONFIDENTIAL: 'confidential',\n  PRIVATE: 'private',\n  PUBLIC: 'public',\n  DEFAULT: 'default',\n};\n\nexport const CalendarAccessLevel = {\n  CONTRIBUTOR: 'contributor',\n  EDITOR: 'editor',\n  FREEBUSY: 'freebusy',\n  OVERRIDE: 'override',\n  OWNER: 'owner',\n  READ: 'read',\n  RESPOND: 'respond',\n  ROOT: 'root',\n  NONE: 'none',\n};\n\nexport const ReminderStatus = {\n  COMPLETED: 'completed',\n  INCOMPLETE: 'incomplete',\n};\n\nexport const DEFAULT = 'default';\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}