{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport GoogleAuthData from \"./GoogleAuthData\";\n\nclass GoogleAuthentication extends GoogleAuthData {\n  constructor(options) {\n    super(options);\n    var {\n      clientId,\n      accessToken,\n      accessTokenExpirationDate,\n      refreshToken,\n      idToken,\n      idTokenExpirationDate\n    } = options;\n    this.clientId = clientId;\n    this.accessToken = accessToken;\n    this.accessTokenExpirationDate = accessTokenExpirationDate;\n    this.refreshToken = refreshToken;\n    this.idToken = idToken;\n    this.idTokenExpirationDate = idTokenExpirationDate;\n  }\n\n  equals(other) {\n    if (!super.equals(other) || !(other instanceof GoogleAuthentication)) {\n      return false;\n    }\n\n    return this.clientId === other.clientId && this.accessToken === other.accessToken && this.accessTokenExpirationDate === other.accessTokenExpirationDate && this.refreshToken === other.refreshToken && this.idToken === other.idToken && this.idTokenExpirationDate === other.idTokenExpirationDate;\n  }\n\n  toJSON() {\n    return _objectSpread({}, super.toJSON(), {\n      clientId: this.clientId,\n      accessToken: this.accessToken,\n      accessTokenExpirationDate: this.accessTokenExpirationDate,\n      refreshToken: this.refreshToken,\n      idToken: this.idToken,\n      idTokenExpirationDate: this.idTokenExpirationDate\n    });\n  }\n\n}\n\nexport default GoogleAuthentication;","map":{"version":3,"sources":["../src/GoogleAuthentication.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,cAAP;;AAEA,MAAM,oBAAN,SAAmC,cAAnC,CAAiD;AAQ/C,EAAA,WAAA,CAAY,OAAZ,EAAwB;AACtB,UAAM,OAAN;AACA,QAAM;AACJ,MAAA,QADI;AAEJ,MAAA,WAFI;AAGJ,MAAA,yBAHI;AAIJ,MAAA,YAJI;AAKJ,MAAA,OALI;AAMJ,MAAA;AANI,QAOF,OAPJ;AASA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,yBAAL,GAAiC,yBAAjC;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,OAAL,GAAe,OAAf;AACA,SAAK,qBAAL,GAA6B,qBAA7B;AACD;;AAED,EAAA,MAAM,CAAC,KAAD,EAAW;AACf,QAAI,CAAC,MAAM,MAAN,CAAa,KAAb,CAAD,IAAwB,EAAE,KAAK,YAAY,oBAAnB,CAA5B,EAAsE;AACpE,aAAO,KAAP;AACD;;AAED,WACE,KAAK,QAAL,KAAkB,KAAK,CAAC,QAAxB,IACA,KAAK,WAAL,KAAqB,KAAK,CAAC,WAD3B,IAEA,KAAK,yBAAL,KAAmC,KAAK,CAAC,yBAFzC,IAGA,KAAK,YAAL,KAAsB,KAAK,CAAC,YAH5B,IAIA,KAAK,OAAL,KAAiB,KAAK,CAAC,OAJvB,IAKA,KAAK,qBAAL,KAA+B,KAAK,CAAC,qBANvC;AAQD;;AAED,EAAA,MAAM,GAAA;AACJ,6BACK,MAAM,MAAN,EADL;AAEE,MAAA,QAAQ,EAAE,KAAK,QAFjB;AAGE,MAAA,WAAW,EAAE,KAAK,WAHpB;AAIE,MAAA,yBAAyB,EAAE,KAAK,yBAJlC;AAKE,MAAA,YAAY,EAAE,KAAK,YALrB;AAME,MAAA,OAAO,EAAE,KAAK,OANhB;AAOE,MAAA,qBAAqB,EAAE,KAAK;AAP9B;AASD;;AApD8C;;AAuDjD,eAAe,oBAAf","sourcesContent":["import GoogleAuthData from './GoogleAuthData';\n\nclass GoogleAuthentication extends GoogleAuthData {\n  clientId?: string;\n  accessToken?: string;\n  accessTokenExpirationDate?: number;\n  refreshToken?: string;\n  idToken?: string;\n  idTokenExpirationDate?: number;\n\n  constructor(options: any) {\n    super(options);\n    const {\n      clientId,\n      accessToken,\n      accessTokenExpirationDate,\n      refreshToken,\n      idToken,\n      idTokenExpirationDate,\n    } = options;\n\n    this.clientId = clientId;\n    this.accessToken = accessToken;\n    this.accessTokenExpirationDate = accessTokenExpirationDate;\n    this.refreshToken = refreshToken;\n    this.idToken = idToken;\n    this.idTokenExpirationDate = idTokenExpirationDate;\n  }\n\n  equals(other: any): boolean {\n    if (!super.equals(other) || !(other instanceof GoogleAuthentication)) {\n      return false;\n    }\n\n    return (\n      this.clientId === other.clientId &&\n      this.accessToken === other.accessToken &&\n      this.accessTokenExpirationDate === other.accessTokenExpirationDate &&\n      this.refreshToken === other.refreshToken &&\n      this.idToken === other.idToken &&\n      this.idTokenExpirationDate === other.idTokenExpirationDate\n    );\n  }\n\n  toJSON(): { [key: string]: any } {\n    return {\n      ...super.toJSON(),\n      clientId: this.clientId,\n      accessToken: this.accessToken,\n      accessTokenExpirationDate: this.accessTokenExpirationDate,\n      refreshToken: this.refreshToken,\n      idToken: this.idToken,\n      idTokenExpirationDate: this.idTokenExpirationDate,\n    };\n  }\n}\n\nexport default GoogleAuthentication;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}