{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { PIXI } from 'expo-pixi';\nimport { extras, Sprite } from 'pixi.js';\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport source from \"../assets/background/walkingToLvl2.png\";\nimport penguinSource from \"../assets/penguin/penguin1.png\";\nimport setupSpriteSheetAsync from \"./setupSpriteSheetAsync\";\nimport sprites from \"./sprites\";\nimport penguinSprites from \"./Sprites/penguin\";\nvar {\n  AnimatedSprite\n} = extras;\nvar scale = PixelRatio.get();\nvar Settings = {\n  playerFallSpeed: 0 * scale,\n  playerHorizontalPosition: 0 * scale,\n  playerVerticalPosition: 620 * scale,\n  playerMaxVelocity: -3 * scale,\n  pipeWidth: 80 * scale,\n  groundHeight: 100 * scale,\n  pipeHeight: 500 * scale,\n  playerGravity: 0 * scale,\n  minPipeHeight: 50 * scale,\n  pipeVerticalGap: 190 * scale,\n  gameSpeed: 22 * 0.25,\n  guardWidth: 200 * scale,\n  guardHeight: 200 * scale\n};\n\nclass FlappySprite extends Sprite {\n  constructor() {\n    super(...arguments);\n    this.scale.set(scale);\n  }\n\n}\n\nclass Background extends FlappySprite {\n  constructor(texture) {\n    super(texture);\n    this.moveGround = false;\n    this.position.x = 0;\n    this.position.y = 0;\n    this.width = Settings.width;\n    this.height = Settings.height;\n  }\n\n}\n\nclass Bird extends AnimatedSprite {\n  constructor(textures) {\n    super(textures);\n    this.moveBird = false;\n\n    this.restart = () => {\n      this.play();\n      this.rotation = 0;\n      this.position.x = 0;\n      this.position.y = Settings.height / 1.17;\n    };\n\n    this.animationSpeed = 0.00;\n    this.anchor.set(0.5);\n    this.width = Settings.width / 17;\n    this.height = Settings.height / 12;\n    this.speedY = Settings.playerFallSpeed;\n    this.rate = Settings.playerGravity;\n    this.restart();\n  }\n\n}\n\nvar bird;\n\nclass Game {\n  constructor(context) {\n    var _this = this;\n\n    this.stopAnimating = true;\n    this.isStarted = false;\n    this.isDead = false;\n    this.score = 0;\n    this.isButtonReleased = false;\n    this.userLost = false;\n    this.stoppedWalking = true;\n    this.loadAsync = _asyncToGenerator(function* () {\n      _this.textures = yield setupSpriteSheetAsync(source, sprites);\n      _this.penguinTexture = yield setupSpriteSheetAsync(penguinSource, penguinSprites);\n\n      _this.onAssetsLoaded();\n    });\n\n    this.onAssetsLoaded = () => {\n      this.background = new Background(this.textures.background);\n      bird = new Bird([this.penguinTexture['penguin1'], this.penguinTexture['penguin2'], this.penguinTexture['penguin3'], this.penguinTexture['penguin4']]);\n      this.bird = bird;\n      [this.background, this.bird].map(child => this.app.stage.addChild(child));\n      this.stopAnimating = false;\n    };\n\n    this.onPress = () => {\n      this.guard.buttonIsPressed = true;\n      this.ground.moveGround = true;\n    };\n\n    this.animate = () => {\n      if (this.stopAnimating) {\n        return;\n      }\n\n      this.bird.animationSpeed = 0.1;\n\n      if (this.bird.position.x < Settings.width * 0.6) {\n        this.bird.position.x += Settings.gameSpeed;\n        this.bird.animationSpeed = 0.1;\n      } else {\n        this.bird.animationSpeed = 0.0;\n        this.stoppedWalking = false;\n      }\n    };\n\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n    this.app = new PIXI.Application({\n      context,\n      autoResize: false,\n      width: context.drawingBufferWidth / 1,\n      height: context.drawingBufferHeight / 1\n    });\n    this.app.ticker.add(this.animate);\n    Settings.width = this.app.renderer.width;\n    Settings.pipeScorePosition = -(Settings.width - Settings.playerHorizontalPosition);\n    Settings.height = this.app.renderer.height;\n    Settings.skyHeight = Settings.height - Settings.groundHeight;\n    Settings.pipeHorizontalGap = Settings.pipeWidth * 5;\n    this.loadAsync();\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/src/walking.js"],"names":["PIXI","extras","Sprite","source","penguinSource","setupSpriteSheetAsync","sprites","penguinSprites","AnimatedSprite","scale","PixelRatio","get","Settings","playerFallSpeed","playerHorizontalPosition","playerVerticalPosition","playerMaxVelocity","pipeWidth","groundHeight","pipeHeight","playerGravity","minPipeHeight","pipeVerticalGap","gameSpeed","guardWidth","guardHeight","FlappySprite","constructor","set","Background","texture","moveGround","position","x","y","width","height","Bird","textures","moveBird","restart","play","rotation","animationSpeed","anchor","speedY","rate","bird","Game","context","stopAnimating","isStarted","isDead","score","isButtonReleased","userLost","stoppedWalking","loadAsync","penguinTexture","onAssetsLoaded","background","map","child","app","stage","addChild","onPress","guard","buttonIsPressed","ground","animate","settings","SCALE_MODE","SCALE_MODES","NEAREST","Application","autoResize","drawingBufferWidth","drawingBufferHeight","ticker","add","renderer","pipeScorePosition","skyHeight","pipeHorizontalGap"],"mappings":"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","sourcesContent":["import { PIXI } from 'expo-pixi';\nimport { extras, Sprite } from 'pixi.js';\nimport { PixelRatio } from 'react-native';\n\nimport source from '../assets/background/walkingToLvl2.png';\nimport penguinSource from '../assets/penguin/penguin1.png';\n\nimport setupSpriteSheetAsync from './setupSpriteSheetAsync';\nimport sprites from './sprites';\nimport penguinSprites from './Sprites/penguin';\n\n\nconst { AnimatedSprite } = extras;\n\nconst scale = PixelRatio.get();\n\n\nlet Settings = {\n  playerFallSpeed: 0 * scale,\n  playerHorizontalPosition: 0 * scale,\n  playerVerticalPosition: 620 * scale,\n  playerMaxVelocity: -3 * scale,\n  pipeWidth: 80 * scale,\n  groundHeight: 100 * scale,\n  pipeHeight: 500 * scale,\n  playerGravity: 0 * scale,\n  minPipeHeight: 50 * scale,\n  pipeVerticalGap: 190 * scale, //180 is pretty legit\n  gameSpeed: 22 * 0.25,\n  guardWidth: 200 * scale,\n  guardHeight: 200 * scale\n};\n\nclass FlappySprite extends Sprite {\n  constructor(...args) {\n    super(...args);\n    this.scale.set(scale);\n  }\n}\n\nclass Background extends FlappySprite {\n  constructor(texture) {\n    super(texture);\n    this.position.x = 0;\n    this.position.y = 0;\n    this.width = Settings.width;\n    this.height = Settings.height;\n  }\n\n  moveGround = false; \n\n}\n\n\nclass Bird extends AnimatedSprite {\n\n  moveBird = false;\n\n  constructor(textures) {\n    super(textures);\n    this.animationSpeed = 0.00;\n    this.anchor.set(0.5);\n    this.width = Settings.width / 17;\n    this.height = Settings.height / 12;\n\n    this.speedY = Settings.playerFallSpeed;\n    this.rate = Settings.playerGravity;\n\n    this.restart();\n  }\n\n  // Restarts position \n  restart = () => {\n    this.play();\n    this.rotation = 0;\n    this.position.x = 0;\n    this.position.y = Settings.height / 1.17;\n  };\n\n}\n\nlet bird; \n\nclass Game {\n  stopAnimating = true;\n  isStarted = false;\n  isDead = false;\n  score = 0;\n  isButtonReleased = false; \n  userLost = false;\n\n stoppedWalking = true\n\n \n  \n  constructor(context) {\n    // Sharp pixels\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n    \n    this.app = new PIXI.Application({\n      context,\n      autoResize: false,\n      width: context.drawingBufferWidth / 1,\n      height: context.drawingBufferHeight / 1,\n    });\n    this.app.ticker.add(this.animate);\n\n    Settings.width = this.app.renderer.width;\n    Settings.pipeScorePosition = -(\n      Settings.width - Settings.playerHorizontalPosition\n    );\n    Settings.height = this.app.renderer.height;\n    Settings.skyHeight = Settings.height - Settings.groundHeight;\n    Settings.pipeHorizontalGap = Settings.pipeWidth * 5;\n    this.loadAsync();\n  }\n\n\n  loadAsync = async () => {\n    this.textures = await setupSpriteSheetAsync(source, sprites);\n    this.penguinTexture = await setupSpriteSheetAsync(penguinSource, penguinSprites);\n    \n    this.onAssetsLoaded();\n  };\n\n  onAssetsLoaded = () => {\n    this.background = new Background(this.textures.background);\n\n    bird = new Bird([\n      this.penguinTexture['penguin1'],\n      this.penguinTexture['penguin2'],\n      this.penguinTexture['penguin3'],\n      this.penguinTexture['penguin4'],\n    ]);\n\n    this.bird = bird; \n\n    [this.background, this.bird].map(child =>\n      this.app.stage.addChild(child),\n    );\n\n    this.stopAnimating = false;\n  };\n\n  onPress = () => {\n    \n    this.guard.buttonIsPressed = true; \n\n    this.ground.moveGround = true;\n  };\n\n  animate = () => {\n    if (this.stopAnimating) {\n      return;\n    }\n    //this.walking(this.stoppedWalking);\n\n    this.bird.animationSpeed = 0.1;\n\n    if (this.bird.position.x < Settings.width*0.6){\n      this.bird.position.x += Settings.gameSpeed;\n     this.bird.animationSpeed = 0.1;\n     \n    }\n    else{\n      this.bird.animationSpeed = 0.0;\n      this.stoppedWalking = false;\n     // this.walking(this.stoppedWalking);\n    }\n    // console.log(this.stoppedWalking)\n    // console.log(this.walking.stoppedWalking)\n  };\n\n  \n}\n\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}