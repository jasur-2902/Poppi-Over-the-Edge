{"ast":null,"code":"import AnimatedValue from \"./AnimatedValue\";\nimport AnimatedNode from \"./AnimatedNode\";\nimport { val } from \"../utils\";\n\nclass AnimatedMainClock extends AnimatedValue {\n  constructor() {\n    super({\n      type: 'MAIN_CLOCK'\n    });\n\n    this._runFrame = () => {\n      this._updateValue(0);\n\n      if (this.__children.length > 0) {\n        this._frameCallback = requestAnimationFrame(this._runFrame);\n      }\n    };\n  }\n\n  __onEvaluate() {\n    return +new Date();\n  }\n\n  __attach() {\n    super.__attach();\n\n    if (!this._frameCallback) {\n      this._frameCallback = requestAnimationFrame(this._runFrame);\n    }\n  }\n\n  __detach() {\n    if (this._frameCallback) {\n      cancelAnimationFrame(this._frameCallback);\n      this._frameCallback = null;\n    }\n\n    super.__detach();\n  }\n\n}\n\nvar mainClock = new AnimatedMainClock();\nexport default class AnimatedClock extends AnimatedNode {\n  constructor() {\n    super({\n      type: 'clock'\n    });\n  }\n\n  __onEvaluate() {\n    return val(mainClock);\n  }\n\n  __attach() {\n    super.__attach();\n\n    if (this._started && !this._attached) {\n      mainClock.__addChild(this);\n    }\n\n    this._attached = true;\n  }\n\n  __detach() {\n    if (this._started && this._attached) {\n      mainClock.__removeChild(this);\n    }\n\n    this._attached = false;\n\n    super.__detach();\n  }\n\n  start() {\n    if (!this._started && this._attached) {\n      mainClock.__addChild(this);\n    }\n\n    this._started = true;\n  }\n\n  stop() {\n    if (this._started && this._attached) {\n      mainClock.__removeChild(this);\n    }\n\n    this._started = false;\n  }\n\n  isStarted() {\n    return this._started;\n  }\n\n}\nvar clock = mainClock;\nexport { clock };","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-reanimated/src/core/AnimatedClock.js"],"names":["AnimatedValue","AnimatedNode","val","AnimatedMainClock","constructor","type","_runFrame","_updateValue","__children","length","_frameCallback","requestAnimationFrame","__onEvaluate","Date","__attach","__detach","cancelAnimationFrame","mainClock","AnimatedClock","_started","_attached","__addChild","__removeChild","start","stop","isStarted","clock"],"mappings":"AAAA,OAAOA,aAAP;AACA,OAAOC,YAAP;AACA,SAASC,GAAT;;AAEA,MAAMC,iBAAN,SAAgCH,aAAhC,CAA8C;AAG5CI,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAN;;AADY,SAQdC,SARc,GAQF,MAAM;AAChB,WAAKC,YAAL,CAAkB,CAAlB;;AACA,UAAI,KAAKC,UAAL,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,aAAKC,cAAL,GAAsBC,qBAAqB,CAAC,KAAKL,SAAN,CAA3C;AACD;AACF,KAba;AAEb;;AAEDM,EAAAA,YAAY,GAAG;AACb,WAAO,CAAC,IAAIC,IAAJ,EAAR;AACD;;AASDC,EAAAA,QAAQ,GAAG;AACT,UAAMA,QAAN;;AACA,QAAI,CAAC,KAAKJ,cAAV,EAA0B;AACxB,WAAKA,cAAL,GAAsBC,qBAAqB,CAAC,KAAKL,SAAN,CAA3C;AACD;AACF;;AAEDS,EAAAA,QAAQ,GAAG;AACT,QAAI,KAAKL,cAAT,EAAyB;AACvBM,MAAAA,oBAAoB,CAAC,KAAKN,cAAN,CAApB;AACA,WAAKA,cAAL,GAAsB,IAAtB;AACD;;AACD,UAAMK,QAAN;AACD;;AA/B2C;;AAkC9C,IAAME,SAAS,GAAG,IAAId,iBAAJ,EAAlB;AAEA,eAAe,MAAMe,aAAN,SAA4BjB,YAA5B,CAAyC;AAItDG,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAN;AACD;;AAEDO,EAAAA,YAAY,GAAG;AACb,WAAOV,GAAG,CAACe,SAAD,CAAV;AACD;;AAEDH,EAAAA,QAAQ,GAAG;AACT,UAAMA,QAAN;;AACA,QAAI,KAAKK,QAAL,IAAiB,CAAC,KAAKC,SAA3B,EAAsC;AACpCH,MAAAA,SAAS,CAACI,UAAV,CAAqB,IAArB;AACD;;AACD,SAAKD,SAAL,GAAiB,IAAjB;AACD;;AAEDL,EAAAA,QAAQ,GAAG;AACT,QAAI,KAAKI,QAAL,IAAiB,KAAKC,SAA1B,EAAqC;AACnCH,MAAAA,SAAS,CAACK,aAAV,CAAwB,IAAxB;AACD;;AACD,SAAKF,SAAL,GAAiB,KAAjB;;AACA,UAAML,QAAN;AACD;;AAEDQ,EAAAA,KAAK,GAAG;AACN,QAAI,CAAC,KAAKJ,QAAN,IAAkB,KAAKC,SAA3B,EAAsC;AACpCH,MAAAA,SAAS,CAACI,UAAV,CAAqB,IAArB;AACD;;AACD,SAAKF,QAAL,GAAgB,IAAhB;AACD;;AAEDK,EAAAA,IAAI,GAAG;AACL,QAAI,KAAKL,QAAL,IAAiB,KAAKC,SAA1B,EAAqC;AACnCH,MAAAA,SAAS,CAACK,aAAV,CAAwB,IAAxB;AACD;;AACD,SAAKH,QAAL,GAAgB,KAAhB;AACD;;AAEDM,EAAAA,SAAS,GAAG;AACV,WAAO,KAAKN,QAAZ;AACD;;AA5CqD;AA+CxD,IAAMO,KAAK,GAAGT,SAAd;AACA,SAASS,KAAT","sourcesContent":["import AnimatedValue from './AnimatedValue';\nimport AnimatedNode from './AnimatedNode';\nimport { val } from '../utils';\n\nclass AnimatedMainClock extends AnimatedValue {\n  _frameCallback;\n\n  constructor() {\n    super({ type: 'MAIN_CLOCK' });\n  }\n\n  __onEvaluate() {\n    return +new Date();\n  }\n\n  _runFrame = () => {\n    this._updateValue(0);\n    if (this.__children.length > 0) {\n      this._frameCallback = requestAnimationFrame(this._runFrame);\n    }\n  };\n\n  __attach() {\n    super.__attach();\n    if (!this._frameCallback) {\n      this._frameCallback = requestAnimationFrame(this._runFrame);\n    }\n  }\n\n  __detach() {\n    if (this._frameCallback) {\n      cancelAnimationFrame(this._frameCallback);\n      this._frameCallback = null;\n    }\n    super.__detach();\n  }\n}\n\nconst mainClock = new AnimatedMainClock();\n\nexport default class AnimatedClock extends AnimatedNode {\n  _started;\n  _attached;\n\n  constructor() {\n    super({ type: 'clock' });\n  }\n\n  __onEvaluate() {\n    return val(mainClock);\n  }\n\n  __attach() {\n    super.__attach();\n    if (this._started && !this._attached) {\n      mainClock.__addChild(this);\n    }\n    this._attached = true;\n  }\n\n  __detach() {\n    if (this._started && this._attached) {\n      mainClock.__removeChild(this);\n    }\n    this._attached = false;\n    super.__detach();\n  }\n\n  start() {\n    if (!this._started && this._attached) {\n      mainClock.__addChild(this);\n    }\n    this._started = true;\n  }\n\n  stop() {\n    if (this._started && this._attached) {\n      mainClock.__removeChild(this);\n    }\n    this._started = false;\n  }\n\n  isStarted() {\n    return this._started;\n  }\n}\n\nconst clock = mainClock;\nexport { clock };\n"]},"metadata":{},"sourceType":"module"}