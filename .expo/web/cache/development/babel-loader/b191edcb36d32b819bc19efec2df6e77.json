{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport ExponentAV from \"./ExponentAV\";\nimport { Asset } from 'expo-asset';\nimport { Platform } from '@unimodules/core';\nexport var PitchCorrectionQuality;\n\n(function (PitchCorrectionQuality) {\n  PitchCorrectionQuality[PitchCorrectionQuality[\"Low\"] = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Low] = \"Low\";\n  PitchCorrectionQuality[PitchCorrectionQuality[\"Medium\"] = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Medium] = \"Medium\";\n  PitchCorrectionQuality[PitchCorrectionQuality[\"High\"] = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.High] = \"High\";\n})(PitchCorrectionQuality || (PitchCorrectionQuality = {}));\n\nexport var _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS = 500;\nexport var _DEFAULT_INITIAL_PLAYBACK_STATUS = {\n  positionMillis: 0,\n  progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n  shouldPlay: false,\n  rate: 1.0,\n  shouldCorrectPitch: false,\n  volume: 1.0,\n  isMuted: false,\n  isLooping: false\n};\nexport function getNativeSourceFromSource(source) {\n  var uri = null;\n  var overridingExtension = null;\n  var headers;\n\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      uri: source,\n      overridingExtension,\n      headers\n    };\n  }\n\n  var asset = _getAssetFromPlaybackSource(source);\n\n  if (asset != null) {\n    uri = asset.localUri || asset.uri;\n  } else if (source != null && typeof source !== 'number' && 'uri' in source && typeof source.uri === 'string') {\n    uri = source.uri;\n  }\n\n  if (uri == null) {\n    return null;\n  }\n\n  if (source != null && typeof source !== 'number' && 'overrideFileExtensionAndroid' in source && typeof source.overrideFileExtensionAndroid === 'string') {\n    overridingExtension = source.overrideFileExtensionAndroid;\n  }\n\n  if (source != null && typeof source !== 'number' && 'headers' in source && typeof source.headers === 'object') {\n    headers = source.headers;\n  }\n\n  return {\n    uri,\n    overridingExtension,\n    headers\n  };\n}\n\nfunction _getAssetFromPlaybackSource(source) {\n  if (source == null) {\n    return null;\n  }\n\n  var asset = null;\n\n  if (typeof source === 'number') {\n    asset = Asset.fromModule(source);\n  } else if (source instanceof Asset) {\n    asset = source;\n  }\n\n  return asset;\n}\n\nexport function assertStatusValuesInBounds(status) {\n  if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n    throw new RangeError('Rate value must be between 0.0 and 32.0');\n  }\n\n  if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n    throw new RangeError('Volume value must be between 0.0 and 1.0');\n  }\n}\nexport function getNativeSourceAndFullInitialStatusForLoadAsync(_x, _x2, _x3) {\n  return _getNativeSourceAndFullInitialStatusForLoadAsync.apply(this, arguments);\n}\n\nfunction _getNativeSourceAndFullInitialStatusForLoadAsync() {\n  _getNativeSourceAndFullInitialStatusForLoadAsync = _asyncToGenerator(function* (source, initialStatus, downloadFirst) {\n    var fullInitialStatus = initialStatus == null ? _DEFAULT_INITIAL_PLAYBACK_STATUS : _objectSpread({}, _DEFAULT_INITIAL_PLAYBACK_STATUS, {}, initialStatus);\n    assertStatusValuesInBounds(fullInitialStatus);\n\n    if (typeof source === 'string' && Platform.OS === 'web') {\n      return {\n        nativeSource: {\n          uri: source,\n          overridingExtension: null\n        },\n        fullInitialStatus\n      };\n    }\n\n    var asset = _getAssetFromPlaybackSource(source);\n\n    if (downloadFirst && asset) {\n      yield asset.downloadAsync();\n    }\n\n    var nativeSource = getNativeSourceFromSource(source);\n\n    if (nativeSource === null) {\n      throw new Error(\"Cannot load an AV asset from a null playback source\");\n    }\n\n    return {\n      nativeSource,\n      fullInitialStatus\n    };\n  });\n  return _getNativeSourceAndFullInitialStatusForLoadAsync.apply(this, arguments);\n}\n\nexport function getUnloadedStatus() {\n  var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return _objectSpread({\n    isLoaded: false\n  }, error ? {\n    error\n  } : null);\n}\nexport var PlaybackMixin = {\n  playAsync() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.setStatusAsync({\n        shouldPlay: true\n      });\n    })();\n  },\n\n  playFromPositionAsync(positionMillis) {\n    var _arguments = arguments,\n        _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var tolerances = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n      return _this2.setStatusAsync({\n        positionMillis,\n        shouldPlay: true,\n        seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n        seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n      });\n    })();\n  },\n\n  pauseAsync() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this3.setStatusAsync({\n        shouldPlay: false\n      });\n    })();\n  },\n\n  stopAsync() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this4.setStatusAsync({\n        positionMillis: 0,\n        shouldPlay: false\n      });\n    })();\n  },\n\n  setPositionAsync(positionMillis) {\n    var _arguments2 = arguments,\n        _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      var tolerances = _arguments2.length > 1 && _arguments2[1] !== undefined ? _arguments2[1] : {};\n      return _this5.setStatusAsync({\n        positionMillis,\n        seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n        seekMillisToleranceBefore: tolerances.toleranceMillisBefore\n      });\n    })();\n  },\n\n  setRateAsync(rate) {\n    var _arguments3 = arguments,\n        _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      var shouldCorrectPitch = _arguments3.length > 1 && _arguments3[1] !== undefined ? _arguments3[1] : false;\n      var pitchCorrectionQuality = _arguments3.length > 2 && _arguments3[2] !== undefined ? _arguments3[2] : PitchCorrectionQuality.Low;\n      return _this6.setStatusAsync({\n        rate,\n        shouldCorrectPitch,\n        pitchCorrectionQuality\n      });\n    })();\n  },\n\n  setVolumeAsync(volume) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this7.setStatusAsync({\n        volume\n      });\n    })();\n  },\n\n  setIsMutedAsync(isMuted) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this8.setStatusAsync({\n        isMuted\n      });\n    })();\n  },\n\n  setIsLoopingAsync(isLooping) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this9.setStatusAsync({\n        isLooping\n      });\n    })();\n  },\n\n  setProgressUpdateIntervalAsync(progressUpdateIntervalMillis) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this10.setStatusAsync({\n        progressUpdateIntervalMillis\n      });\n    })();\n  }\n\n};","map":{"version":3,"sources":["../src/AV.ts"],"names":[],"mappings":"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","sourcesContent":["import ExponentAV from './ExponentAV';\nimport { Asset } from 'expo-asset';\nimport { Platform } from '@unimodules/core';\n// TODO add:\n//  disableFocusOnAndroid\n//  audio routes (at least did become noisy on android)\n//  pan\n//  pitch\n//  API to explicitly request audio focus / session\n//  API to select stream type on Android\n//  subtitles API\n\nexport enum PitchCorrectionQuality {\n  Low = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Low,\n  Medium = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.Medium,\n  High = ExponentAV && ExponentAV.Qualities && ExponentAV.Qualities.High,\n}\n\nexport type PlaybackSource =\n  | number\n  | {\n    uri: string;\n    overrideFileExtensionAndroid?: string;\n    headers?: { [fieldName: string]: string };\n  }\n  | Asset;\n\nexport type PlaybackNativeSource = {\n  uri: string;\n  overridingExtension?: string | null;\n  headers?: { [fieldName: string]: string };\n};\n\nexport type PlaybackStatus =\n  | {\n      isLoaded: false;\n      androidImplementation?: string;\n      error?: string; // populated exactly once when an error forces the object to unload\n    }\n  | {\n      isLoaded: true;\n      androidImplementation?: string;\n\n      uri: string;\n\n      progressUpdateIntervalMillis: number;\n      durationMillis?: number;\n      positionMillis: number;\n      playableDurationMillis?: number;\n      seekMillisToleranceBefore?: number;\n      seekMillisToleranceAfter?: number;\n\n      shouldPlay: boolean;\n      isPlaying: boolean;\n      isBuffering: boolean;\n\n      rate: number;\n      shouldCorrectPitch: boolean;\n      volume: number;\n      isMuted: boolean;\n      isLooping: boolean;\n\n      didJustFinish: boolean; // true exactly once when the track plays to finish\n    };\n\nexport type PlaybackStatusToSet = {\n  androidImplementation?: string;\n  progressUpdateIntervalMillis?: number;\n  positionMillis?: number;\n  seekMillisToleranceBefore?: number;\n  seekMillisToleranceAfter?: number;\n  shouldPlay?: boolean;\n  rate?: number;\n  shouldCorrectPitch?: boolean;\n  volume?: number;\n  isMuted?: boolean;\n  isLooping?: boolean;\n  pitchCorrectionQuality?: PitchCorrectionQuality;\n};\n\nexport const _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS: number = 500;\nexport const _DEFAULT_INITIAL_PLAYBACK_STATUS: PlaybackStatusToSet = {\n  positionMillis: 0,\n  progressUpdateIntervalMillis: _DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS,\n  shouldPlay: false,\n  rate: 1.0,\n  shouldCorrectPitch: false,\n  volume: 1.0,\n  isMuted: false,\n  isLooping: false,\n};\n\nexport function getNativeSourceFromSource(\n  source?: PlaybackSource | null\n): PlaybackNativeSource | null {\n  let uri: string | null = null;\n  let overridingExtension: string | null = null;\n  let headers: { [fieldName: string]: string } | undefined;\n\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      uri: source,\n      overridingExtension,\n      headers,\n    };\n  }\n\n  let asset: Asset | null = _getAssetFromPlaybackSource(source);\n  if (asset != null) {\n    uri = asset.localUri || asset.uri;\n  } else if (\n    source != null &&\n    typeof source !== 'number' &&\n    'uri' in source &&\n    typeof source.uri === 'string'\n  ) {\n    uri = source.uri;\n  }\n\n  if (uri == null) {\n    return null;\n  }\n\n  if (\n    source != null &&\n    typeof source !== 'number' &&\n    'overrideFileExtensionAndroid' in source &&\n    typeof source.overrideFileExtensionAndroid === 'string'\n  ) {\n    overridingExtension = source.overrideFileExtensionAndroid;\n  }\n\n  if (\n    source != null &&\n    typeof source !== 'number' &&\n    'headers' in source &&\n    typeof source.headers === 'object'\n  ) {\n    headers = source.headers;\n  }\n  return { uri, overridingExtension, headers };\n}\n\nfunction _getAssetFromPlaybackSource(source?: PlaybackSource | null): Asset | null {\n  if (source == null) {\n    return null;\n  }\n\n  let asset: Asset | null = null;\n  if (typeof source === 'number') {\n    asset = Asset.fromModule(source);\n  } else if (source instanceof Asset) {\n    asset = source;\n  }\n  return asset;\n}\n\nexport function assertStatusValuesInBounds(status: PlaybackStatusToSet): void {\n  if (typeof status.rate === 'number' && (status.rate < 0 || status.rate > 32)) {\n    throw new RangeError('Rate value must be between 0.0 and 32.0');\n  }\n  if (typeof status.volume === 'number' && (status.volume < 0 || status.volume > 1)) {\n    throw new RangeError('Volume value must be between 0.0 and 1.0');\n  }\n}\n\nexport async function getNativeSourceAndFullInitialStatusForLoadAsync(\n  source: PlaybackSource | null,\n  initialStatus: PlaybackStatusToSet | null,\n  downloadFirst: boolean\n): Promise<{\n  nativeSource: PlaybackNativeSource;\n  fullInitialStatus: PlaybackStatusToSet;\n}> {\n  // Get the full initial status\n  const fullInitialStatus: PlaybackStatusToSet =\n    initialStatus == null\n      ? _DEFAULT_INITIAL_PLAYBACK_STATUS\n      : {\n          ..._DEFAULT_INITIAL_PLAYBACK_STATUS,\n          ...initialStatus,\n        };\n  assertStatusValuesInBounds(fullInitialStatus);\n\n  if (typeof source === 'string' && Platform.OS === 'web') {\n    return {\n      nativeSource: {\n        uri: source,\n        overridingExtension: null,\n      },\n      fullInitialStatus,\n    };\n  }\n\n  // Download first if necessary.\n  let asset = _getAssetFromPlaybackSource(source);\n  if (downloadFirst && asset) {\n    // TODO we can download remote uri too once @nikki93 has integrated this into Asset\n    await asset.downloadAsync();\n  }\n\n  // Get the native source\n  const nativeSource: PlaybackNativeSource | null = getNativeSourceFromSource(source);\n\n  if (nativeSource === null) {\n    throw new Error(`Cannot load an AV asset from a null playback source`);\n  }\n\n  return { nativeSource, fullInitialStatus };\n}\n\nexport function getUnloadedStatus(error: string | null = null): PlaybackStatus {\n  return {\n    isLoaded: false,\n    ...(error ? { error } : null),\n  };\n}\n\nexport interface AV {\n  setStatusAsync(status: PlaybackStatusToSet): Promise<PlaybackStatus>;\n}\n\nexport interface Playback extends AV {\n  playAsync(): Promise<PlaybackStatus>;\n  playFromPositionAsync(\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ): Promise<PlaybackStatus>;\n  pauseAsync(): Promise<PlaybackStatus>;\n  stopAsync(): Promise<PlaybackStatus>;\n  setPositionAsync(\n    positionMillis: number,\n    tolerances?: { toleranceMillisBefore?: number; toleranceMillisAfter?: number }\n  ): Promise<PlaybackStatus>;\n  setRateAsync(\n    rate: number,\n    shouldCorrectPitch: boolean,\n    pitchCorrectionQuality?: PitchCorrectionQuality\n  ): Promise<PlaybackStatus>;\n  setVolumeAsync(volume: number): Promise<PlaybackStatus>;\n  setIsMutedAsync(isMuted: boolean): Promise<PlaybackStatus>;\n  setIsLoopingAsync(isLooping: boolean): Promise<PlaybackStatus>;\n  setProgressUpdateIntervalAsync(progressUpdateIntervalMillis: number): Promise<PlaybackStatus>;\n}\n\n/**\n * A mixin that defines common playback methods for A/V classes so they implement the `Playback`\n * interface\n */\nexport const PlaybackMixin = {\n  async playAsync(): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ shouldPlay: true });\n  },\n\n  async playFromPositionAsync(\n    positionMillis: number,\n    tolerances: { toleranceMillisBefore?: number; toleranceMillisAfter?: number } = {}\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({\n      positionMillis,\n      shouldPlay: true,\n      seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n      seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n    });\n  },\n\n  async pauseAsync(): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ shouldPlay: false });\n  },\n\n  async stopAsync(): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ positionMillis: 0, shouldPlay: false });\n  },\n\n  async setPositionAsync(\n    positionMillis: number,\n    tolerances: { toleranceMillisBefore?: number; toleranceMillisAfter?: number } = {}\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({\n      positionMillis,\n      seekMillisToleranceAfter: tolerances.toleranceMillisAfter,\n      seekMillisToleranceBefore: tolerances.toleranceMillisBefore,\n    });\n  },\n\n  async setRateAsync(\n    rate: number,\n    shouldCorrectPitch: boolean = false,\n    pitchCorrectionQuality: PitchCorrectionQuality = PitchCorrectionQuality.Low\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({\n      rate,\n      shouldCorrectPitch,\n      pitchCorrectionQuality,\n    });\n  },\n\n  async setVolumeAsync(volume: number): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ volume });\n  },\n\n  async setIsMutedAsync(isMuted: boolean): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ isMuted });\n  },\n\n  async setIsLoopingAsync(isLooping: boolean): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ isLooping });\n  },\n\n  async setProgressUpdateIntervalAsync(\n    progressUpdateIntervalMillis: number\n  ): Promise<PlaybackStatus> {\n    return ((this as any) as AV).setStatusAsync({ progressUpdateIntervalMillis });\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}