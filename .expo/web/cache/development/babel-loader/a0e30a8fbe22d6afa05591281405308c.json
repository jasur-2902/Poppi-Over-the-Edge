{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { UnavailabilityError } from '@unimodules/core';\nimport ExponentFacebook from \"./ExponentFacebook\";\nexport function logInWithReadPermissionsAsync(_x, _x2) {\n  return _logInWithReadPermissionsAsync.apply(this, arguments);\n}\n\nfunction _logInWithReadPermissionsAsync() {\n  _logInWithReadPermissionsAsync = _asyncToGenerator(function* (appId, options) {\n    if (!ExponentFacebook.logInWithReadPermissionsAsync) {\n      throw new UnavailabilityError('Facebook', 'logInWithReadPermissionsAsync');\n    }\n\n    if (typeof appId !== 'string') {\n      console.warn(\"logInWithReadPermissionsAsync: parameter 'appId' must be a string, was '\".concat(typeof appId, \"''.\"));\n      appId = String(appId);\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {};\n    }\n\n    return ExponentFacebook.logInWithReadPermissionsAsync(appId, options);\n  });\n  return _logInWithReadPermissionsAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/Facebook.ts"],"names":[],"mappings":";;;;AAAA,SAAS,mBAAT,QAAoC,kBAApC;AAEA,OAAO,gBAAP;AAaA,gBAAsB,6BAAtB;AAAA;AAAA;;;qDAAO,WACL,KADK,EAEL,OAFK,EAEoB;AAEzB,QAAI,CAAC,gBAAgB,CAAC,6BAAtB,EAAqD;AACnD,YAAM,IAAI,mBAAJ,CAAwB,UAAxB,EAAoC,+BAApC,CAAN;AACD;;AACD,QAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC7B,MAAA,OAAO,CAAC,IAAR,mFAC6E,OAAO,KADpF;AAGA,MAAA,KAAK,GAAG,MAAM,CAAC,KAAD,CAAd;AACD;;AAED,QAAI,CAAC,OAAD,IAAY,OAAO,OAAP,KAAmB,QAAnC,EAA6C;AAC3C,MAAA,OAAO,GAAG,EAAV;AACD;;AACD,WAAO,gBAAgB,CAAC,6BAAjB,CAA+C,KAA/C,EAAsD,OAAtD,CAAP;AACD,G","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport ExponentFacebook from './ExponentFacebook';\n\ntype FacebookLoginResult = {\n  type: string;\n  token?: string;\n  expires?: number;\n};\n\ntype FacebookOptions = {\n  permissions?: string[];\n  behavior?: 'web' | 'native' | 'browser' | 'system';\n};\n\nexport async function logInWithReadPermissionsAsync(\n  appId: string,\n  options?: FacebookOptions\n): Promise<FacebookLoginResult> {\n  if (!ExponentFacebook.logInWithReadPermissionsAsync) {\n    throw new UnavailabilityError('Facebook', 'logInWithReadPermissionsAsync');\n  }\n  if (typeof appId !== 'string') {\n    console.warn(\n      `logInWithReadPermissionsAsync: parameter 'appId' must be a string, was '${typeof appId}''.`\n    );\n    appId = String(appId);\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {};\n  }\n  return ExponentFacebook.logInWithReadPermissionsAsync(appId, options);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}