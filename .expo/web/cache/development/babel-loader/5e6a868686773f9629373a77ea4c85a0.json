{"ast":null,"code":"import DeviceSensor from \"./DeviceSensor\";\nimport ExponentDeviceMotion from \"./ExponentDeviceMotion\";\n\nclass DeviceMotionSensor extends DeviceSensor {\n  constructor() {\n    super(...arguments);\n    this.Gravity = ExponentDeviceMotion.Gravity;\n  }\n\n}\n\nexport var Gravity = ExponentDeviceMotion.Gravity;\nexport default new DeviceMotionSensor(ExponentDeviceMotion, 'deviceMotionDidUpdate');","map":{"version":3,"sources":["../src/DeviceMotion.ts"],"names":[],"mappings":"AAAA,OAAO,YAAP;AACA,OAAO,oBAAP;;AA0BA,MAAM,kBAAN,SAAiC,YAAjC,CAAsE;AAAtE,EAAA,WAAA,GAAA;;AACE,SAAA,OAAA,GAAU,oBAAoB,CAAC,OAA/B;AACD;;AAFqE;;AAItE,OAAO,IAAM,OAAO,GAAG,oBAAoB,CAAC,OAArC;AAEP,eAAe,IAAI,kBAAJ,CAAuB,oBAAvB,EAA6C,uBAA7C,CAAf","sourcesContent":["import DeviceSensor from './DeviceSensor';\nimport ExponentDeviceMotion from './ExponentDeviceMotion';\n\nexport interface DeviceMotionMeasurement {\n  acceleration: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  accelerationIncludingGravity: {\n    x: number;\n    y: number;\n    z: number;\n  };\n  rotation: {\n    alpha: number;\n    beta: number;\n    gamma: number;\n  };\n  rotationRate: {\n    alpha: number;\n    beta: number;\n    gamma: number;\n  };\n  orientation: number;\n}\n\nclass DeviceMotionSensor extends DeviceSensor<DeviceMotionMeasurement> {\n  Gravity = ExponentDeviceMotion.Gravity;\n}\n\nexport const Gravity = ExponentDeviceMotion.Gravity;\n\nexport default new DeviceMotionSensor(ExponentDeviceMotion, 'deviceMotionDidUpdate');\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}