{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-maps\\\\lib\\\\components\\\\MapOverlay.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport decorateMapComponent, { SUPPORTED, USES_DEFAULT_IMPLEMENTATION } from \"./decorateMapComponent\";\nvar viewConfig = {\n  uiViewClassName: 'AIR<provider>MapOverlay',\n  validAttributes: {\n    image: true\n  }\n};\n\nvar propTypes = _objectSpread(_objectSpread({}, View.propTypes), {}, {\n  image: PropTypes.any.isRequired,\n  bounds: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired\n});\n\nclass MapOverlay extends Component {\n  render() {\n    var image;\n\n    if (this.props.image) {\n      if (typeof this.props.image.startsWith === 'function' && this.props.image.startsWith('http')) {\n        image = this.props.image;\n      } else {\n        image = resolveAssetSource(this.props.image) || {};\n        image = image.uri;\n      }\n    }\n\n    var AIRMapOverlay = this.getAirComponent();\n    return React.createElement(AIRMapOverlay, _extends({}, this.props, {\n      image: image,\n      style: [styles.overlay, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nMapOverlay.propTypes = propTypes;\nMapOverlay.viewConfig = viewConfig;\nvar styles = StyleSheet.create({\n  overlay: {\n    position: 'absolute',\n    backgroundColor: 'transparent'\n  }\n});\nMapOverlay.Animated = Animated.createAnimatedComponent(MapOverlay);\nexport default decorateMapComponent(MapOverlay, {\n  componentType: 'Overlay',\n  providers: {\n    google: {\n      ios: SUPPORTED,\n      android: USES_DEFAULT_IMPLEMENTATION\n    }\n  }\n});","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-maps/lib/components/MapOverlay.js"],"names":["React","Component","PropTypes","resolveAssetSource","decorateMapComponent","SUPPORTED","USES_DEFAULT_IMPLEMENTATION","viewConfig","uiViewClassName","validAttributes","image","propTypes","View","any","isRequired","bounds","arrayOf","array","MapOverlay","render","props","startsWith","uri","AIRMapOverlay","getAirComponent","styles","overlay","style","StyleSheet","create","position","backgroundColor","Animated","createAnimatedComponent","componentType","providers","google","ios","android"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAOA,OAAOC,kBAAP,MAA+B,iDAA/B;AACA,OAAOC,oBAAP,IACEC,SADF,EAEEC,2BAFF;AAKA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,eAAe,EAAE,yBADA;AAEjBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE;AADQ;AAFA,CAAnB;;AAOA,IAAMC,SAAS,mCACVC,IAAI,CAACD,SADK;AAGbD,EAAAA,KAAK,EAAER,SAAS,CAACW,GAAV,CAAcC,UAHR;AAKbC,EAAAA,MAAM,EAAEb,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACe,KAAV,CAAgBH,UAAlC,EAA8CA;AALzC,EAAf;;AAQA,MAAMI,UAAN,SAAyBjB,SAAzB,CAAmC;AAEjCkB,EAAAA,MAAM,GAAG;AACP,QAAIT,KAAJ;;AACA,QAAI,KAAKU,KAAL,CAAWV,KAAf,EAAsB;AACpB,UAAI,OAAO,KAAKU,KAAL,CAAWV,KAAX,CAAiBW,UAAxB,KAAuC,UAAvC,IACC,KAAKD,KAAL,CAAWV,KAAX,CAAiBW,UAAjB,CAA4B,MAA5B,CADL,EAC0C;AACxCX,QAAAA,KAAK,GAAG,KAAKU,KAAL,CAAWV,KAAnB;AACD,OAHD,MAGO;AACLA,QAAAA,KAAK,GAAGP,kBAAkB,CAAC,KAAKiB,KAAL,CAAWV,KAAZ,CAAlB,IAAwC,EAAhD;AACAA,QAAAA,KAAK,GAAGA,KAAK,CAACY,GAAd;AACD;AACF;;AAED,QAAMC,aAAa,GAAG,KAAKC,eAAL,EAAtB;AAEA,WACE,oBAAC,aAAD,eACM,KAAKJ,KADX;AAEE,MAAA,KAAK,EAAEV,KAFT;AAGE,MAAA,KAAK,EAAE,CAACe,MAAM,CAACC,OAAR,EAAiB,KAAKN,KAAL,CAAWO,KAA5B,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAOD;;AAvBgC;;AA0BnCT,UAAU,CAACP,SAAX,GAAuBA,SAAvB;AACAO,UAAU,CAACX,UAAX,GAAwBA,UAAxB;AAEA,IAAMkB,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,OAAO,EAAE;AACPI,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,eAAe,EAAE;AAFV;AADsB,CAAlB,CAAf;AAOAb,UAAU,CAACc,QAAX,GAAsBA,QAAQ,CAACC,uBAAT,CAAiCf,UAAjC,CAAtB;AAEA,eAAed,oBAAoB,CAACc,UAAD,EAAa;AAC9CgB,EAAAA,aAAa,EAAE,SAD+B;AAE9CC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,GAAG,EAAEhC,SADC;AAENiC,MAAAA,OAAO,EAAEhC;AAFH;AADC;AAFmC,CAAb,CAAnC","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Animated,\r\n} from 'react-native';\r\n\r\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\r\nimport decorateMapComponent, {\r\n  SUPPORTED,\r\n  USES_DEFAULT_IMPLEMENTATION,\r\n} from './decorateMapComponent';\r\n\r\nconst viewConfig = {\r\n  uiViewClassName: 'AIR<provider>MapOverlay',\r\n  validAttributes: {\r\n    image: true,\r\n  },\r\n};\r\n\r\nconst propTypes = {\r\n  ...View.propTypes,\r\n  // A custom image to be used as overlay.\r\n  image: PropTypes.any.isRequired,\r\n  // Top left and bottom right coordinates for the overlay\r\n  bounds: PropTypes.arrayOf(PropTypes.array.isRequired).isRequired,\r\n};\r\n\r\nclass MapOverlay extends Component {\r\n\r\n  render() {\r\n    let image;\r\n    if (this.props.image) {\r\n      if (typeof this.props.image.startsWith === 'function'\r\n        && this.props.image.startsWith('http')) {\r\n        image = this.props.image;\r\n      } else {\r\n        image = resolveAssetSource(this.props.image) || {};\r\n        image = image.uri;\r\n      }\r\n    }\r\n\r\n    const AIRMapOverlay = this.getAirComponent();\r\n\r\n    return (\r\n      <AIRMapOverlay\r\n        {...this.props}\r\n        image={image}\r\n        style={[styles.overlay, this.props.style]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nMapOverlay.propTypes = propTypes;\r\nMapOverlay.viewConfig = viewConfig;\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    position: 'absolute',\r\n    backgroundColor: 'transparent',\r\n  },\r\n});\r\n\r\nMapOverlay.Animated = Animated.createAnimatedComponent(MapOverlay);\r\n\r\nexport default decorateMapComponent(MapOverlay, {\r\n  componentType: 'Overlay',\r\n  providers: {\r\n    google: {\r\n      ios: SUPPORTED,\r\n      android: USES_DEFAULT_IMPLEMENTATION,\r\n    },\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}