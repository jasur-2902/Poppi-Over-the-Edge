{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { coalesceExpirations, coalesceStatuses } from \"./CoalescedPermissions\";\nimport Permissions from \"./ExpoPermissions\";\nimport { PermissionStatus } from \"./Permissions.types\";\nexport { PermissionStatus };\nexport var CAMERA = 'camera';\nexport var CAMERA_ROLL = 'cameraRoll';\nexport var AUDIO_RECORDING = 'audioRecording';\nexport var LOCATION = 'location';\nexport var USER_FACING_NOTIFICATIONS = 'userFacingNotifications';\nexport var NOTIFICATIONS = 'notifications';\nexport var CONTACTS = 'contacts';\nexport var CALENDAR = 'calendar';\nexport var REMINDERS = 'reminders';\nexport var SYSTEM_BRIGHTNESS = 'systemBrightness';\nexport function getAsync() {\n  return _getAsync.apply(this, arguments);\n}\n\nfunction _getAsync() {\n  _getAsync = _asyncToGenerator(function* () {\n    for (var _len = arguments.length, types = new Array(_len), _key = 0; _key < _len; _key++) {\n      types[_key] = arguments[_key];\n    }\n\n    return yield _handlePermissionsRequestAsync(types, Permissions.getAsync);\n  });\n  return _getAsync.apply(this, arguments);\n}\n\nexport function askAsync() {\n  return _askAsync.apply(this, arguments);\n}\n\nfunction _askAsync() {\n  _askAsync = _asyncToGenerator(function* () {\n    for (var _len2 = arguments.length, types = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      types[_key2] = arguments[_key2];\n    }\n\n    return yield _handlePermissionsRequestAsync(types, Permissions.askAsync);\n  });\n  return _askAsync.apply(this, arguments);\n}\n\nfunction _handlePermissionsRequestAsync(_x, _x2) {\n  return _handlePermissionsRequestAsync2.apply(this, arguments);\n}\n\nfunction _handlePermissionsRequestAsync2() {\n  _handlePermissionsRequestAsync2 = _asyncToGenerator(function* (types, handlePermissions) {\n    if (!types.length) {\n      throw new Error('At least one permission type must be specified');\n    }\n\n    var permissions = yield handlePermissions(types);\n    return {\n      status: coalesceStatuses(permissions),\n      expires: coalesceExpirations(permissions),\n      permissions\n    };\n  });\n  return _handlePermissionsRequestAsync2.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/Permissions.ts"],"names":[],"mappings":";;;;AAAA,SAAS,mBAAT,EAA8B,gBAA9B;AACA,OAAO,WAAP;AACA,SAIE,gBAJF;AASA,SACE,gBADF;AASA,OAAO,IAAM,MAAM,GAAG,QAAf;AACP,OAAO,IAAM,WAAW,GAAG,YAApB;AACP,OAAO,IAAM,eAAe,GAAG,gBAAxB;AACP,OAAO,IAAM,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAM,yBAAyB,GAAG,yBAAlC;AACP,OAAO,IAAM,aAAa,GAAG,eAAtB;AACP,OAAO,IAAM,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAM,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAM,SAAS,GAAG,WAAlB;AACP,OAAO,IAAM,iBAAiB,GAAG,kBAA1B;AAEP,gBAAsB,QAAtB;AAAA;AAAA;;;gCAAO,aAAkD;AAAA,sCAAvB,KAAuB;AAAvB,MAAA,KAAuB;AAAA;;AACvD,iBAAa,8BAA8B,CAAC,KAAD,EAAQ,WAAW,CAAC,QAApB,CAA3C;AACD,G;;;;AAED,gBAAsB,QAAtB;AAAA;AAAA;;;gCAAO,aAAkD;AAAA,uCAAvB,KAAuB;AAAvB,MAAA,KAAuB;AAAA;;AACvD,iBAAa,8BAA8B,CAAC,KAAD,EAAQ,WAAW,CAAC,QAApB,CAA3C;AACD,G;;;;SAEc,8B;;;;;sDAAf,WACE,KADF,EAEE,iBAFF,EAEwE;AAEtE,QAAI,CAAC,KAAK,CAAC,MAAX,EAAmB;AACjB,YAAM,IAAI,KAAJ,CAAU,gDAAV,CAAN;AACD;;AAED,QAAM,WAAW,SAAS,iBAAiB,CAAC,KAAD,CAA3C;AACA,WAAO;AACL,MAAA,MAAM,EAAE,gBAAgB,CAAC,WAAD,CADnB;AAEL,MAAA,OAAO,EAAE,mBAAmB,CAAC,WAAD,CAFvB;AAGL,MAAA;AAHK,KAAP;AAKD,G","sourcesContent":["import { coalesceExpirations, coalesceStatuses } from './CoalescedPermissions';\nimport Permissions from './ExpoPermissions';\nimport {\n  PermissionResponse,\n  PermissionType,\n  PermissionMap,\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionInfo,\n} from './Permissions.types';\n\nexport {\n  PermissionStatus,\n  PermissionResponse,\n  PermissionExpiration,\n  PermissionMap,\n  PermissionInfo,\n  PermissionType,\n};\n\nexport const CAMERA = 'camera';\nexport const CAMERA_ROLL = 'cameraRoll';\nexport const AUDIO_RECORDING = 'audioRecording';\nexport const LOCATION = 'location';\nexport const USER_FACING_NOTIFICATIONS = 'userFacingNotifications';\nexport const NOTIFICATIONS = 'notifications';\nexport const CONTACTS = 'contacts';\nexport const CALENDAR = 'calendar';\nexport const REMINDERS = 'reminders';\nexport const SYSTEM_BRIGHTNESS = 'systemBrightness';\n\nexport async function getAsync(...types: PermissionType[]): Promise<PermissionResponse> {\n  return await _handlePermissionsRequestAsync(types, Permissions.getAsync);\n}\n\nexport async function askAsync(...types: PermissionType[]): Promise<PermissionResponse> {\n  return await _handlePermissionsRequestAsync(types, Permissions.askAsync);\n}\n\nasync function _handlePermissionsRequestAsync(\n  types: PermissionType[],\n  handlePermissions: (types: PermissionType[]) => Promise<PermissionMap>\n): Promise<PermissionResponse> {\n  if (!types.length) {\n    throw new Error('At least one permission type must be specified');\n  }\n\n  const permissions = await handlePermissions(types);\n  return {\n    status: coalesceStatuses(permissions),\n    expires: coalesceExpirations(permissions),\n    permissions,\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}