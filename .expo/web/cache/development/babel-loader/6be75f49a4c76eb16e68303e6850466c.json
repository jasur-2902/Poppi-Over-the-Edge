{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-elements\\\\src\\\\badge\\\\withBadge.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Badge from \"./Badge\";\n\nvar withBadge = function withBadge(value) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return WrappedComponent => {\n    var WithBadge = props => {\n      var {\n        bottom,\n        hidden = false,\n        left,\n        containerStyle\n      } = options,\n          badgeProps = _objectWithoutProperties(options, [\"bottom\", \"hidden\", \"left\", \"containerStyle\"]);\n\n      var {\n        right = -16,\n        top = -1\n      } = options;\n\n      if (!value) {\n        right = -3;\n        top = 3;\n      }\n\n      var badgeValue = typeof value === 'function' ? value(props) : value;\n      return React.createElement(View, {\n        style: StyleSheet.flatten([styles.container, containerStyle]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, React.createElement(WrappedComponent, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      })), !hidden && React.createElement(Badge, _extends({\n        value: badgeValue,\n        status: \"error\",\n        containerStyle: StyleSheet.flatten([styles.badgeContainer, {\n          bottom,\n          left,\n          right,\n          top\n        }])\n      }, badgeProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      })));\n    };\n\n    WithBadge.displayName = \"WithBadge(\".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component', \")\");\n    return WithBadge;\n  };\n};\n\nvar styles = StyleSheet.create({\n  badgeContainer: {\n    position: 'absolute'\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative'\n  }\n});\nexport default withBadge;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-elements/src/badge/withBadge.js"],"names":["React","Badge","withBadge","value","options","WrappedComponent","WithBadge","props","bottom","hidden","left","containerStyle","badgeProps","right","top","badgeValue","StyleSheet","flatten","styles","container","badgeContainer","displayName","name","create","position","alignItems","justifyContent"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,OAAOC,KAAP;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,MAAQC,OAAR,uEAAkB,EAAlB;AAAA,SAAyBC,gBAAgB,IAAI;AAC7D,QAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,UAAM;AACJC,QAAAA,MADI;AAEJC,QAAAA,MAAM,GAAG,KAFL;AAGJC,QAAAA,IAHI;AAIJC,QAAAA;AAJI,UAMFP,OANJ;AAAA,UAKKQ,UALL,4BAMIR,OANJ;;AAQA,UAAI;AAAES,QAAAA,KAAK,GAAG,CAAC,EAAX;AAAeC,QAAAA,GAAG,GAAG,CAAC;AAAtB,UAA4BV,OAAhC;;AAEA,UAAI,CAACD,KAAL,EAAY;AACVU,QAAAA,KAAK,GAAG,CAAC,CAAT;AACAC,QAAAA,GAAG,GAAG,CAAN;AACD;;AAED,UAAMC,UAAU,GAAG,OAAOZ,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAACI,KAAD,CAAnC,GAA6CJ,KAAhE;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEa,UAAU,CAACC,OAAX,CAAmB,CAACC,MAAM,CAACC,SAAR,EAAmBR,cAAnB,CAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD,eAAsBJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAGG,CAACE,MAAD,IACC,oBAAC,KAAD;AACE,QAAA,KAAK,EAAEM,UADT;AAEE,QAAA,MAAM,EAAC,OAFT;AAGE,QAAA,cAAc,EAAEC,UAAU,CAACC,OAAX,CAAmB,CACjCC,MAAM,CAACE,cAD0B,EAEjC;AAAEZ,UAAAA,MAAF;AAAUE,UAAAA,IAAV;AAAgBG,UAAAA,KAAhB;AAAuBC,UAAAA;AAAvB,SAFiC,CAAnB;AAHlB,SAOMF,UAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CADF;AAiBD,KAnCD;;AAqCAN,IAAAA,SAAS,CAACe,WAAV,uBAAqChB,gBAAgB,CAACgB,WAAjB,IACnChB,gBAAgB,CAACiB,IADkB,IAEnC,WAFF;AAIA,WAAOhB,SAAP;AACD,GA3CiB;AAAA,CAAlB;;AA6CA,IAAMY,MAAM,GAAGF,UAAU,CAACO,MAAX,CAAkB;AAC/BH,EAAAA,cAAc,EAAE;AACdI,IAAAA,QAAQ,EAAE;AADI,GADe;AAI/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTF,IAAAA,QAAQ,EAAE;AAHD;AAJoB,CAAlB,CAAf;AAWA,eAAetB,SAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport Badge from './Badge';\n\nconst withBadge = (value, options = {}) => WrappedComponent => {\n  const WithBadge = props => {\n    const {\n      bottom,\n      hidden = false,\n      left,\n      containerStyle,\n      ...badgeProps\n    } = options;\n\n    let { right = -16, top = -1 } = options;\n\n    if (!value) {\n      right = -3;\n      top = 3;\n    }\n\n    const badgeValue = typeof value === 'function' ? value(props) : value;\n\n    return (\n      <View style={StyleSheet.flatten([styles.container, containerStyle])}>\n        <WrappedComponent {...props} />\n\n        {!hidden && (\n          <Badge\n            value={badgeValue}\n            status=\"error\"\n            containerStyle={StyleSheet.flatten([\n              styles.badgeContainer,\n              { bottom, left, right, top },\n            ])}\n            {...badgeProps}\n          />\n        )}\n      </View>\n    );\n  };\n\n  WithBadge.displayName = `WithBadge(${WrappedComponent.displayName ||\n    WrappedComponent.name ||\n    'Component'})`;\n\n  return WithBadge;\n};\n\nconst styles = StyleSheet.create({\n  badgeContainer: {\n    position: 'absolute',\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n  },\n});\n\nexport default withBadge;\n"]},"metadata":{},"sourceType":"module"}