{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-elements\\\\src\\\\buttons\\\\ButtonGroup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { withTheme } from \"../config\";\nimport { normalizeText, color } from \"../helpers\";\nimport Text from \"../text/Text\";\n\nvar ButtonGroup = props => {\n  var {\n    theme\n  } = props,\n      rest = _objectWithoutProperties(props, [\"theme\"]);\n\n  var {\n    Component,\n    buttons,\n    onPress: _onPress,\n    selectedIndex,\n    selectedIndexes,\n    selectMultiple,\n    containerStyle,\n    innerBorderStyle,\n    buttonStyle,\n    textStyle,\n    selectedTextStyle,\n    selectedButtonStyle,\n    underlayColor = theme.colors.primary,\n    activeOpacity,\n    onHideUnderlay,\n    onShowUnderlay,\n    setOpacityTo,\n    disabled,\n    disabledStyle,\n    disabledTextStyle,\n    disabledSelectedStyle,\n    disabledSelectedTextStyle,\n    vertical\n  } = rest,\n      attributes = _objectWithoutProperties(rest, [\"Component\", \"buttons\", \"onPress\", \"selectedIndex\", \"selectedIndexes\", \"selectMultiple\", \"containerStyle\", \"innerBorderStyle\", \"buttonStyle\", \"textStyle\", \"selectedTextStyle\", \"selectedButtonStyle\", \"underlayColor\", \"activeOpacity\", \"onHideUnderlay\", \"onShowUnderlay\", \"setOpacityTo\", \"disabled\", \"disabledStyle\", \"disabledTextStyle\", \"disabledSelectedStyle\", \"disabledSelectedTextStyle\", \"vertical\"]);\n\n  var innerBorderWidth = 1;\n\n  if (innerBorderStyle && Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return React.createElement(View, _extends({}, attributes, {\n    style: StyleSheet.flatten([styles.container, vertical && styles.verticalContainer, containerStyle && containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), buttons.map((button, i) => {\n    var isSelected = selectedIndex === i || selectedIndexes.includes(i);\n    var isDisabled = disabled === true || Array.isArray(disabled) && disabled.includes(i);\n    return React.createElement(View, {\n      key: i,\n      style: StyleSheet.flatten([styles.button, vertical && styles.verticalComponent, i !== buttons.length - 1 && (vertical ? {\n        borderBottomWidth: innerBorderWidth,\n        borderBottomColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      } : {\n        borderRightWidth: innerBorderWidth,\n        borderRightColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      })]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, React.createElement(Component, {\n      testID: \"buttonGroupItem\",\n      activeOpacity: activeOpacity,\n      setOpacityTo: setOpacityTo,\n      onHideUnderlay: onHideUnderlay,\n      onShowUnderlay: onShowUnderlay,\n      underlayColor: underlayColor,\n      disabled: isDisabled,\n      onPress: () => {\n        if (selectMultiple) {\n          if (selectedIndexes.includes(i)) {\n            _onPress(selectedIndexes.filter(index => index !== i));\n          } else {\n            _onPress([...selectedIndexes, i]);\n          }\n        } else {\n          _onPress(i);\n        }\n      },\n      style: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: StyleSheet.flatten([styles.textContainer, buttonStyle && buttonStyle, isSelected && {\n        backgroundColor: theme.colors.primary\n      }, isSelected && selectedButtonStyle && selectedButtonStyle, isDisabled && styles.disabled, isDisabled && disabledStyle, isDisabled && isSelected && styles.disabledSelected(theme), isDisabled && isSelected && disabledSelectedStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, button.element ? React.createElement(button.element, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }) : React.createElement(Text, {\n      testID: \"buttonGroupItemText\",\n      style: StyleSheet.flatten([styles.buttonText(theme), textStyle && textStyle, isSelected && {\n        color: '#fff'\n      }, isSelected && selectedTextStyle, isDisabled && styles.disabledText(theme), isDisabled && disabledTextStyle, isDisabled && isSelected && disabledSelectedTextStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, button))));\n  }));\n};\n\nvar styles = {\n  button: {\n    flex: 1\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40\n  },\n  verticalContainer: {\n    flexDirection: 'column',\n    height: null\n  },\n  verticalComponent: {\n    height: 40\n  },\n  buttonText: theme => _objectSpread({\n    fontSize: normalizeText(13),\n    color: theme.colors.grey2\n  }, Platform.select({\n    android: {},\n    default: {\n      fontWeight: '500'\n    }\n  })),\n  disabled: {\n    backgroundColor: 'transparent'\n  },\n  disabledText: theme => ({\n    color: color(theme.colors.disabled).darken(0.3).toString()\n  }),\n  disabledSelected: theme => ({\n    backgroundColor: theme.colors.disabled\n  })\n};\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.func,\n  innerBorderStyle: PropTypes.shape({\n    color: PropTypes.string,\n    width: PropTypes.number\n  }),\n  buttonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.number)]),\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledSelectedStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledSelectedTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  vertical: PropTypes.bool\n};\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  selectedIndexes: [],\n  selectMultiple: false,\n  disabled: false,\n  Component: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity\n  }),\n  onPress: () => null,\n  vertical: false\n};\nexport { ButtonGroup };\nexport default withTheme(ButtonGroup, 'ButtonGroup');","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-elements/src/buttons/ButtonGroup.js"],"names":["React","PropTypes","withTheme","normalizeText","color","Text","ButtonGroup","props","theme","rest","Component","buttons","onPress","selectedIndex","selectedIndexes","selectMultiple","containerStyle","innerBorderStyle","buttonStyle","textStyle","selectedTextStyle","selectedButtonStyle","underlayColor","colors","primary","activeOpacity","onHideUnderlay","onShowUnderlay","setOpacityTo","disabled","disabledStyle","disabledTextStyle","disabledSelectedStyle","disabledSelectedTextStyle","vertical","attributes","innerBorderWidth","Object","prototype","hasOwnProperty","call","width","StyleSheet","flatten","styles","container","verticalContainer","map","button","i","isSelected","includes","isDisabled","Array","isArray","verticalComponent","length","borderBottomWidth","borderBottomColor","grey4","borderRightWidth","borderRightColor","filter","index","textContainer","backgroundColor","disabledSelected","element","buttonText","disabledText","flex","justifyContent","alignItems","marginHorizontal","marginVertical","borderColor","borderWidth","flexDirection","borderRadius","overflow","height","fontSize","grey2","Platform","select","android","default","fontWeight","darken","toString","propTypes","object","elementType","func","array","oneOfType","string","number","arrayOf","shape","bool","defaultProps","TouchableNativeFeedback","TouchableOpacity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  StyleSheet,\n} from 'react-native';\n\nimport { withTheme } from '../config';\nimport { normalizeText, color } from '../helpers';\n\nimport Text from '../text/Text';\n\nconst ButtonGroup = props => {\n  const { theme, ...rest } = props;\n\n  const {\n    Component,\n    buttons,\n    onPress,\n    selectedIndex,\n    selectedIndexes,\n    selectMultiple,\n    containerStyle,\n    innerBorderStyle,\n    buttonStyle,\n    textStyle,\n    selectedTextStyle,\n    selectedButtonStyle,\n    underlayColor = theme.colors.primary,\n    activeOpacity,\n    onHideUnderlay,\n    onShowUnderlay,\n    setOpacityTo,\n    disabled,\n    disabledStyle,\n    disabledTextStyle,\n    disabledSelectedStyle,\n    disabledSelectedTextStyle,\n    vertical,\n    ...attributes\n  } = rest;\n\n  let innerBorderWidth = 1;\n\n  if (\n    innerBorderStyle &&\n    Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')\n  ) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return (\n    <View\n      {...attributes}\n      style={StyleSheet.flatten([\n        styles.container,\n        vertical && styles.verticalContainer,\n        containerStyle && containerStyle,\n      ])}\n    >\n      {buttons.map((button, i) => {\n        const isSelected = selectedIndex === i || selectedIndexes.includes(i);\n        const isDisabled =\n          disabled === true ||\n          (Array.isArray(disabled) && disabled.includes(i));\n\n        return (\n          <View\n            key={i}\n            style={StyleSheet.flatten([\n              styles.button,\n              vertical && styles.verticalComponent,\n              i !== buttons.length - 1 &&\n                (vertical\n                  ? {\n                      borderBottomWidth: innerBorderWidth,\n                      borderBottomColor:\n                        (innerBorderStyle && innerBorderStyle.color) ||\n                        theme.colors.grey4,\n                    }\n                  : {\n                      borderRightWidth: innerBorderWidth,\n                      borderRightColor:\n                        (innerBorderStyle && innerBorderStyle.color) ||\n                        theme.colors.grey4,\n                    }),\n            ])}\n          >\n            <Component\n              testID=\"buttonGroupItem\"\n              activeOpacity={activeOpacity}\n              setOpacityTo={setOpacityTo}\n              onHideUnderlay={onHideUnderlay}\n              onShowUnderlay={onShowUnderlay}\n              underlayColor={underlayColor}\n              disabled={isDisabled}\n              onPress={() => {\n                if (selectMultiple) {\n                  if (selectedIndexes.includes(i)) {\n                    onPress(selectedIndexes.filter(index => index !== i));\n                  } else {\n                    onPress([...selectedIndexes, i]);\n                  }\n                } else {\n                  onPress(i);\n                }\n              }}\n              style={styles.button}\n            >\n              <View\n                style={StyleSheet.flatten([\n                  styles.textContainer,\n                  buttonStyle && buttonStyle,\n                  isSelected && {\n                    backgroundColor: theme.colors.primary,\n                  },\n                  isSelected && selectedButtonStyle && selectedButtonStyle,\n                  isDisabled && styles.disabled,\n                  isDisabled && disabledStyle,\n                  isDisabled && isSelected && styles.disabledSelected(theme),\n                  isDisabled && isSelected && disabledSelectedStyle,\n                ])}\n              >\n                {button.element ? (\n                  <button.element />\n                ) : (\n                  <Text\n                    testID=\"buttonGroupItemText\"\n                    style={StyleSheet.flatten([\n                      styles.buttonText(theme),\n                      textStyle && textStyle,\n                      isSelected && { color: '#fff' },\n                      isSelected && selectedTextStyle,\n                      isDisabled && styles.disabledText(theme),\n                      isDisabled && disabledTextStyle,\n                      isDisabled && isSelected && disabledSelectedTextStyle,\n                    ])}\n                  >\n                    {button}\n                  </Text>\n                )}\n              </View>\n            </Component>\n          </View>\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = {\n  button: {\n    flex: 1,\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40,\n  },\n  verticalContainer: {\n    flexDirection: 'column',\n    height: null,\n  },\n  verticalComponent: {\n    height: 40,\n  },\n  buttonText: theme => ({\n    fontSize: normalizeText(13),\n    color: theme.colors.grey2,\n    ...Platform.select({\n      android: {},\n      default: {\n        fontWeight: '500',\n      },\n    }),\n  }),\n  disabled: {\n    backgroundColor: 'transparent',\n  },\n  disabledText: theme => ({\n    color: color(theme.colors.disabled)\n      .darken(0.3)\n      .toString(),\n  }),\n  disabledSelected: theme => ({\n    backgroundColor: theme.colors.disabled,\n  }),\n};\n\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.func,\n  innerBorderStyle: PropTypes.shape({\n    color: PropTypes.string,\n    width: PropTypes.number,\n  }),\n  buttonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n  disabled: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledSelectedStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  disabledSelectedTextStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  vertical: PropTypes.bool,\n};\n\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  selectedIndexes: [],\n  selectMultiple: false,\n  disabled: false,\n  Component: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity,\n  }),\n  onPress: () => null,\n  vertical: false,\n};\n\nexport { ButtonGroup };\nexport default withTheme(ButtonGroup, 'ButtonGroup');\n"]},"metadata":{},"sourceType":"module"}