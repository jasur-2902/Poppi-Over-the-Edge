{"ast":null,"code":"import { UnavailabilityError } from 'expo-errors';\nimport ExponentHaptic from \"./ExponentHaptic\";\nexport var NotificationFeedbackType;\n\n(function (NotificationFeedbackType) {\n  NotificationFeedbackType[\"Success\"] = \"success\";\n  NotificationFeedbackType[\"Warning\"] = \"warning\";\n  NotificationFeedbackType[\"Error\"] = \"error\";\n})(NotificationFeedbackType || (NotificationFeedbackType = {}));\n\nexport var ImpactFeedbackStyle;\n\n(function (ImpactFeedbackStyle) {\n  ImpactFeedbackStyle[\"Light\"] = \"light\";\n  ImpactFeedbackStyle[\"Medium\"] = \"medium\";\n  ImpactFeedbackStyle[\"Heavy\"] = \"heavy\";\n})(ImpactFeedbackStyle || (ImpactFeedbackStyle = {}));\n\nexport function notification() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NotificationFeedbackType.Success;\n\n  if (!ExponentHaptic || ExponentHaptic.notification) {\n    throw new UnavailabilityError('Haptic', 'notification');\n  }\n\n  return ExponentHaptic.notification(type);\n}\nexport function impact() {\n  var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ImpactFeedbackStyle.Medium;\n\n  if (!ExponentHaptic || !ExponentHaptic.impact) {\n    throw new UnavailabilityError('Haptic', 'impact');\n  }\n\n  return ExponentHaptic.impact(style);\n}\nexport function selection() {\n  if (!ExponentHaptic || !ExponentHaptic.selection) {\n    throw new UnavailabilityError('Haptic', 'selection');\n  }\n\n  return ExponentHaptic.selection();\n}","map":{"version":3,"sources":["../../src/Haptic/Haptic.ts"],"names":[],"mappings":"AAAA,SAAS,mBAAT,QAAoC,aAApC;AACA,OAAO,cAAP;AAOA,OAAA,IAAY,wBAAZ;;AAAA,CAAA,UAAY,wBAAZ,EAAoC;AAIlC,EAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AAIA,EAAA,wBAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AAIA,EAAA,wBAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CAbD,EAAY,wBAAwB,KAAxB,wBAAwB,GAAA,EAAA,CAApC;;AAoBA,OAAA,IAAY,mBAAZ;;AAAA,CAAA,UAAY,mBAAZ,EAA+B;AAI7B,EAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AAIA,EAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AAIA,EAAA,mBAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACD,CAbD,EAAY,mBAAmB,KAAnB,mBAAmB,GAAA,EAAA,CAA/B;;AAkBA,OAAM,SAAU,YAAV,GAAwF;AAAA,MAAjE,IAAiE,uEAAhC,wBAAwB,CAAC,OAAO;;AAC5F,MAAI,CAAC,cAAD,IAAmB,cAAc,CAAC,YAAtC,EAAoD;AAClD,UAAM,IAAI,mBAAJ,CAAwB,QAAxB,EAAkC,cAAlC,CAAN;AACD;;AAED,SAAO,cAAc,CAAC,YAAf,CAA4B,IAA5B,CAAP;AACD;AAKD,OAAM,SAAU,MAAV,GAAwE;AAAA,MAAvD,KAAuD,uEAA1B,mBAAmB,CAAC,MAAM;;AAC5E,MAAI,CAAC,cAAD,IAAmB,CAAC,cAAc,CAAC,MAAvC,EAA+C;AAC7C,UAAM,IAAI,mBAAJ,CAAwB,QAAxB,EAAkC,QAAlC,CAAN;AACD;;AAED,SAAO,cAAc,CAAC,MAAf,CAAsB,KAAtB,CAAP;AACD;AAKD,OAAM,SAAU,SAAV,GAAmB;AACvB,MAAI,CAAC,cAAD,IAAmB,CAAC,cAAc,CAAC,SAAvC,EAAkD;AAChD,UAAM,IAAI,mBAAJ,CAAwB,QAAxB,EAAkC,WAAlC,CAAN;AACD;;AAED,SAAO,cAAc,CAAC,SAAf,EAAP;AACD","sourcesContent":["import { UnavailabilityError } from 'expo-errors';\nimport ExponentHaptic from './ExponentHaptic';\n\n/**\n * Notification Feedback Type\n * The type of notification feedback generated by a UINotificationFeedbackGenerator object.\n * https://developer.apple.com/documentation/uikit/uinotificationfeedbacktype\n */\nexport enum NotificationFeedbackType {\n  /**\n   * A notification feedback type indicating that a task has completed successfully\n   */\n  Success = 'success',\n  /**\n   * A notification feedback type indicating that a task has produced a warning\n   */\n  Warning = 'warning',\n  /**\n   * A notification feedback type indicating that a task has failed\n   */\n  Error = 'error',\n}\n\n/**\n * Impact Feedback Style\n * The mass of the objects in the collision simulated by a UIImpactFeedbackGenerator object.\n * https://developer.apple.com/documentation/uikit/uiimpactfeedbackstyle\n */\nexport enum ImpactFeedbackStyle {\n  /**\n   * A collision between small, light user interface elements\n   */\n  Light = 'light',\n  /**\n   * A collision between moderately sized user interface elements\n   */\n  Medium = 'medium',\n  /**\n   * A collision between large, heavy user interface elements\n   */\n  Heavy = 'heavy',\n}\n\n/**\n * Triggers notification feedback.\n */\nexport function notification(type: NotificationFeedbackType = NotificationFeedbackType.Success) {\n  if (!ExponentHaptic || ExponentHaptic.notification) {\n    throw new UnavailabilityError('Haptic', 'notification');\n  }\n\n  return ExponentHaptic.notification(type);\n}\n\n/**\n * Triggers impact feedback.\n */\nexport function impact(style: ImpactFeedbackStyle = ImpactFeedbackStyle.Medium) {\n  if (!ExponentHaptic || !ExponentHaptic.impact) {\n    throw new UnavailabilityError('Haptic', 'impact');\n  }\n\n  return ExponentHaptic.impact(style);\n}\n\n/**\n * Triggers selection feedback.\n */\nexport function selection() {\n  if (!ExponentHaptic || !ExponentHaptic.selection) {\n    throw new UnavailabilityError('Haptic', 'selection');\n  }\n\n  return ExponentHaptic.selection();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}