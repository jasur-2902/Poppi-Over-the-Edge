{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\expo\\\\build\\\\effects\\\\BlurView.web.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nexport default class BlurView extends React.Component {\n  render() {\n    var _this$props = this.props,\n        {\n      tint,\n      style = {}\n    } = _this$props,\n        props = _objectWithoutProperties(_this$props, [\"tint\", \"style\"]);\n\n    var backgroundColor = 'rgba(255,255,255,0.4)';\n\n    if (tint === 'dark') {\n      backgroundColor = 'rgba(0,0,0,0.5)';\n    } else if (tint === 'light') {\n      backgroundColor = 'rgba(255,255,255,0.7)';\n    }\n\n    return React.createElement(View, _extends({}, props, {\n      style: StyleSheet.flatten([style, {\n        backgroundColor\n      }]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}\nBlurView.propTypes = _objectSpread({\n  tint: PropTypes.oneOf(['light', 'default', 'dark'])\n}, ViewPropTypes);","map":{"version":3,"sources":["../../src/effects/BlurView.web.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;;;AAQA,eAAc,MAAO,QAAP,SAAwB,KAAK,CAAC,SAA9B,CAA8C;AAM1D,EAAA,MAAM,GAAA;AACJ,sBAAqC,KAAK,KAA1C;AAAA,QAAI;AAAE,MAAA,IAAF;AAAQ,MAAA,KAAK,GAAG;AAAhB,KAAJ;AAAA,QAA2B,KAA3B;;AAEA,QAAI,eAAe,GAAG,uBAAtB;;AACA,QAAI,IAAI,KAAK,MAAb,EAAqB;AACnB,MAAA,eAAe,GAAG,iBAAlB;AACD,KAFD,MAEO,IAAI,IAAI,KAAK,OAAb,EAAsB;AAC3B,MAAA,eAAe,GAAG,uBAAlB;AACD;;AAED,WAAO,oBAAC,IAAD,eAAU,KAAV;AAAiB,MAAA,KAAK,EAAE,UAAU,CAAC,OAAX,CAAmB,CAAC,KAAD,EAAQ;AAAE,QAAA;AAAF,OAAR,CAAnB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAjByD;AACnD,QAAA,CAAA,SAAA;AACL,EAAA,IAAI,EAAE,SAAS,CAAC,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,CAAhB;AADD,GAEF,aAFE","sourcesContent":["import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { View, StyleSheet, ViewPropTypes } from 'react-native';\n\ntype Props = {\n  tint: BlurTint;\n} & React.ComponentProps<typeof View>;\ntype BlurTint = 'light' | 'dark' | 'default';\n\nexport default class BlurView extends React.Component<Props> {\n  static propTypes = {\n    tint: PropTypes.oneOf(['light', 'default', 'dark']),\n    ...ViewPropTypes,\n  };\n\n  render() {\n    let { tint, style = {}, ...props } = this.props;\n\n    let backgroundColor = 'rgba(255,255,255,0.4)';\n    if (tint === 'dark') {\n      backgroundColor = 'rgba(0,0,0,0.5)';\n    } else if (tint === 'light') {\n      backgroundColor = 'rgba(255,255,255,0.7)';\n    }\n\n    return <View {...props} style={StyleSheet.flatten([style, { backgroundColor }])} />;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}