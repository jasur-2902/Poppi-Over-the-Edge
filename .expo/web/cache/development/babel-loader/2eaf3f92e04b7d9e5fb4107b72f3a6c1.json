{"ast":null,"code":"export default class CodedError extends Error {\n  constructor(code, message) {\n    super(message);\n    this.code = code;\n  }\n\n}","map":{"version":3,"sources":["../src/CodedError.ts"],"names":[],"mappings":"AAKA,eAAc,MAAO,UAAP,SAA0B,KAA1B,CAA+B;AAI3C,EAAA,WAAA,CAAY,IAAZ,EAA0B,OAA1B,EAAyC;AACvC,UAAM,OAAN;AACA,SAAK,IAAL,GAAY,IAAZ;AACD;;AAP0C","sourcesContent":["/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport default class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}