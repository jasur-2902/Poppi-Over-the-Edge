{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport resolveAsync from \"./resolveAsync\";\n\nfunction uriAsync(_x, _x2) {\n  return _uriAsync.apply(this, arguments);\n}\n\nfunction _uriAsync() {\n  _uriAsync = _asyncToGenerator(function* (fileReference, options) {\n    var asset = yield resolveAsync(fileReference, options);\n\n    if (!asset) {\n      throw new Error(\"expo-asset-utils: uriAsync(): failed to resolve asset: \".concat(fileReference));\n    }\n\n    return asset.localUri;\n  });\n  return _uriAsync.apply(this, arguments);\n}\n\nexport default uriAsync;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/expo-asset-utils/src/uriAsync.js"],"names":["resolveAsync","uriAsync","fileReference","options","asset","Error","localUri"],"mappings":";;;;AAGA,OAAOA,YAAP;;SAEeC,Q;;;;;gCAAf,WAAwBC,aAAxB,EAAiDC,OAAjD,EAA4E;AAC1E,QAAMC,KAAK,SAASJ,YAAY,CAACE,aAAD,EAAgBC,OAAhB,CAAhC;;AACA,QAAI,CAACC,KAAL,EAAY;AACV,YAAM,IAAIC,KAAJ,kEAAoEH,aAApE,EAAN;AACD;;AACD,WAAOE,KAAK,CAACE,QAAb;AACD,G;;;;AAED,eAAeL,QAAf","sourcesContent":["// @flow\n\nimport type { WildCard } from './resolveAsync';\nimport resolveAsync from './resolveAsync';\n\nasync function uriAsync(fileReference: WildCard, options): Promise<?string> {\n  const asset = await resolveAsync(fileReference, options);\n  if (!asset) {\n    throw new Error(`expo-asset-utils: uriAsync(): failed to resolve asset: ${fileReference}`);\n  }\n  return asset.localUri;\n}\n\nexport default uriAsync;\n"]},"metadata":{},"sourceType":"module"}