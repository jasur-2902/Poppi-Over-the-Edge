{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-elements\\\\src\\\\icons\\\\Icon.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Color from 'color';\nimport getIconType from \"../helpers/getIconType\";\nimport { withTheme } from \"../config\";\n\nvar Icon = props => {\n  var {\n    type,\n    name,\n    size,\n    color,\n    iconStyle,\n    underlayColor,\n    reverse,\n    raised,\n    containerStyle,\n    reverseColor,\n    disabled,\n    disabledStyle,\n    onPress,\n    Component = onPress ? Platform.select({\n      android: TouchableNativeFeedback,\n      default: TouchableHighlight\n    }) : View,\n    solid,\n    brand\n  } = props,\n      attributes = _objectWithoutProperties(props, [\"type\", \"name\", \"size\", \"color\", \"iconStyle\", \"underlayColor\", \"reverse\", \"raised\", \"containerStyle\", \"reverseColor\", \"disabled\", \"disabledStyle\", \"onPress\", \"Component\", \"solid\", \"brand\"]);\n\n  var IconComponent = getIconType(type);\n\n  var getBackgroundColor = () => {\n    if (reverse) {\n      return color;\n    }\n\n    return raised ? 'white' : 'transparent';\n  };\n\n  var buttonStyles = {\n    borderRadius: size + 4,\n    height: size * 2 + 4,\n    width: size * 2 + 4\n  };\n\n  if (Platform.OS === 'android' && !attributes.background) {\n    if (Platform.Version >= 21) {\n      attributes.background = TouchableNativeFeedback.Ripple(Color(color).alpha(0.2).rgb().string(), true);\n    }\n  }\n\n  return React.createElement(View, {\n    style: StyleSheet.flatten([styles.container, (reverse || raised) && styles.button, (reverse || raised) && buttonStyles, raised && styles.raised, iconStyle && iconStyle.borderRadius ? {\n      borderRadius: iconStyle.borderRadius\n    } : {}, containerStyle && containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Component, _extends({}, attributes, onPress && {\n    onPress,\n    disabled,\n    underlayColor: reverse ? color : underlayColor,\n    activeOpacity: 0.3\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: StyleSheet.flatten([(reverse || raised) && buttonStyles, {\n      backgroundColor: getBackgroundColor(),\n      alignItems: 'center',\n      justifyContent: 'center'\n    }, disabled && styles.disabled, disabled && disabledStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, React.createElement(IconComponent, {\n    testID: \"iconIcon\",\n    style: StyleSheet.flatten([{\n      backgroundColor: 'transparent'\n    }, iconStyle && iconStyle]),\n    size: size,\n    name: name,\n    color: reverse ? reverseColor : color,\n    solid: solid,\n    brand: brand,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))));\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  Component: PropTypes.elementType,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n  disabled: PropTypes.bool,\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  solid: PropTypes.bool,\n  brand: PropTypes.bool\n};\nIcon.defaultProps = {\n  underlayColor: 'transparent',\n  reverse: false,\n  raised: false,\n  size: 24,\n  color: 'black',\n  reverseColor: 'white',\n  disabled: false,\n  type: 'material',\n  solid: false,\n  brand: false\n};\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  },\n  button: {\n    margin: 7\n  },\n  raised: _objectSpread({}, Platform.select({\n    android: {\n      elevation: 2\n    },\n    default: {\n      shadowColor: 'rgba(0,0,0, .4)',\n      shadowOffset: {\n        height: 1,\n        width: 1\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1\n    }\n  })),\n  disabled: {\n    backgroundColor: '#D1D5D8'\n  }\n});\nexport { Icon };\nexport default withTheme(Icon, 'Icon');","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-elements/src/icons/Icon.js"],"names":["React","PropTypes","Color","getIconType","withTheme","Icon","props","type","name","size","color","iconStyle","underlayColor","reverse","raised","containerStyle","reverseColor","disabled","disabledStyle","onPress","Component","Platform","select","android","TouchableNativeFeedback","default","TouchableHighlight","View","solid","brand","attributes","IconComponent","getBackgroundColor","buttonStyles","borderRadius","height","width","OS","background","Version","Ripple","alpha","rgb","string","StyleSheet","flatten","styles","container","button","activeOpacity","backgroundColor","alignItems","justifyContent","propTypes","number","elementType","bool","oneOfType","object","array","func","defaultProps","create","overflow","margin","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  TouchableHighlight,\n  View,\n  StyleSheet,\n  TouchableNativeFeedback,\n} from 'react-native';\nimport Color from 'color';\n\nimport getIconType from '../helpers/getIconType';\nimport { withTheme } from '../config';\n\nconst Icon = props => {\n  const {\n    type,\n    name,\n    size,\n    color,\n    iconStyle,\n    underlayColor,\n    reverse,\n    raised,\n    containerStyle,\n    reverseColor,\n    disabled,\n    disabledStyle,\n    onPress,\n    Component = onPress\n      ? Platform.select({\n          android: TouchableNativeFeedback,\n          default: TouchableHighlight,\n        })\n      : View,\n    solid,\n    brand,\n    ...attributes\n  } = props;\n\n  const IconComponent = getIconType(type);\n  const getBackgroundColor = () => {\n    if (reverse) {\n      return color;\n    }\n\n    return raised ? 'white' : 'transparent';\n  };\n\n  const buttonStyles = {\n    borderRadius: size + 4,\n    height: size * 2 + 4,\n    width: size * 2 + 4,\n  };\n\n  if (Platform.OS === 'android' && !attributes.background) {\n    if (Platform.Version >= 21) {\n      attributes.background = TouchableNativeFeedback.Ripple(\n        Color(color)\n          .alpha(0.2)\n          .rgb()\n          .string(),\n        true\n      );\n    }\n  }\n\n  return (\n    <View\n      style={StyleSheet.flatten([\n        styles.container,\n        (reverse || raised) && styles.button,\n        (reverse || raised) && buttonStyles,\n        raised && styles.raised,\n        iconStyle && iconStyle.borderRadius\n          ? {\n              borderRadius: iconStyle.borderRadius,\n            }\n          : {},\n        containerStyle && containerStyle,\n      ])}\n    >\n      <Component\n        {...attributes}\n        {...onPress && {\n          onPress,\n          disabled,\n          underlayColor: reverse ? color : underlayColor,\n          activeOpacity: 0.3,\n        }}\n      >\n        <View\n          style={StyleSheet.flatten([\n            (reverse || raised) && buttonStyles,\n            {\n              backgroundColor: getBackgroundColor(),\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n            disabled && styles.disabled,\n            disabled && disabledStyle,\n          ])}\n        >\n          <IconComponent\n            testID=\"iconIcon\"\n            style={StyleSheet.flatten([\n              { backgroundColor: 'transparent' },\n              iconStyle && iconStyle,\n            ])}\n            size={size}\n            name={name}\n            color={reverse ? reverseColor : color}\n            solid={solid}\n            brand={brand}\n          />\n        </View>\n      </Component>\n    </View>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  Component: PropTypes.elementType,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n  disabled: PropTypes.bool,\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  solid: PropTypes.bool,\n  brand: PropTypes.bool,\n};\n\nIcon.defaultProps = {\n  underlayColor: 'transparent',\n  reverse: false,\n  raised: false,\n  size: 24,\n  color: 'black',\n  reverseColor: 'white',\n  disabled: false,\n  type: 'material',\n  solid: false,\n  brand: false,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  button: {\n    margin: 7,\n  },\n  raised: {\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: { height: 1, width: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n    }),\n  },\n  disabled: {\n    backgroundColor: '#D1D5D8',\n  },\n});\n\nexport { Icon };\nexport default withTheme(Icon, 'Icon');\n"]},"metadata":{},"sourceType":"module"}