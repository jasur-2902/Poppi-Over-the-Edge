{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { UnavailabilityError } from 'expo-errors';\nimport ExponentImagePicker from \"./ExponentImagePicker\";\nvar MEDIA_TYPE_OPTIONS = {\n  All: 'All',\n  Videos: 'Videos',\n  Images: 'Images'\n};\nexport function launchImageLibraryAsync() {\n  return _launchImageLibraryAsync.apply(this, arguments);\n}\n\nfunction _launchImageLibraryAsync() {\n  _launchImageLibraryAsync = _asyncToGenerator(function* () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!ExponentImagePicker.launchImageLibraryAsync) {\n      throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n    }\n\n    return ExponentImagePicker.launchImageLibraryAsync(options);\n  });\n  return _launchImageLibraryAsync.apply(this, arguments);\n}\n\nexport function launchCameraAsync() {\n  return _launchCameraAsync.apply(this, arguments);\n}\n\nfunction _launchCameraAsync() {\n  _launchCameraAsync = _asyncToGenerator(function* () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!ExponentImagePicker.launchCameraAsync) {\n      throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n    }\n\n    return ExponentImagePicker.launchCameraAsync(options);\n  });\n  return _launchCameraAsync.apply(this, arguments);\n}\n\nexport var MediaTypeOptions = MEDIA_TYPE_OPTIONS;","map":{"version":3,"sources":["../../src/ImagePicker/ImagePicker.ts"],"names":[],"mappings":";;;;AAAA,SAAS,mBAAT,QAAoC,aAApC;AACA,OAAO,mBAAP;AAEA,IAAM,kBAAkB,GAAG;AACzB,EAAA,GAAG,EAAE,KADoB;AAEzB,EAAA,MAAM,EAAE,QAFiB;AAGzB,EAAA,MAAM,EAAE;AAHiB,CAA3B;AAqBA,gBAAsB,uBAAtB;AAAA;AAAA;;;+CAAO,aAC4B;AAAA,QAAjC,OAAiC,uEAAF,EAAE;;AAEjC,QAAI,CAAC,mBAAmB,CAAC,uBAAzB,EAAkD;AAChD,YAAM,IAAI,mBAAJ,CAAwB,aAAxB,EAAuC,yBAAvC,CAAN;AACD;;AACD,WAAO,mBAAmB,CAAC,uBAApB,CAA4C,OAA5C,CAAP;AACD,G;;;;AAQD,gBAAsB,iBAAtB;AAAA;AAAA;;;yCAAO,aAA4D;AAAA,QAA3B,OAA2B,uEAAF,EAAE;;AACjE,QAAI,CAAC,mBAAmB,CAAC,iBAAzB,EAA4C;AAC1C,YAAM,IAAI,mBAAJ,CAAwB,aAAxB,EAAuC,mBAAvC,CAAN;AACD;;AACD,WAAO,mBAAmB,CAAC,iBAApB,CAAsC,OAAtC,CAAP;AACD,G;;;;AAED,OAAO,IAAM,gBAAgB,GAAG,kBAAzB","sourcesContent":["import { UnavailabilityError } from 'expo-errors';\nimport ExponentImagePicker from './ExponentImagePicker';\n\nconst MEDIA_TYPE_OPTIONS = {\n  All: 'All',\n  Videos: 'Videos',\n  Images: 'Images',\n};\n\ntype ImageInfo = {\n  uri: string;\n  width: number;\n  height: number;\n};\n\ntype ImageResult = { cancelled: true } | ({ cancelled: false } & ImageInfo);\n\ntype ImageLibraryOptions = {\n  allowsEditing?: boolean;\n  aspect?: [number, number];\n  quality?: number;\n  mediaTypes?: keyof (typeof MEDIA_TYPE_OPTIONS);\n};\n\nexport async function launchImageLibraryAsync(\n  options: ImageLibraryOptions = {}\n): Promise<ImageResult> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  return ExponentImagePicker.launchImageLibraryAsync(options);\n}\n\ntype CameraOptions = {\n  allowsEditing?: boolean;\n  aspect?: [number, number];\n  quality?: number;\n};\n\nexport async function launchCameraAsync(options: CameraOptions = {}): Promise<ImageResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  return ExponentImagePicker.launchCameraAsync(options);\n}\n\nexport const MediaTypeOptions = MEDIA_TYPE_OPTIONS;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}