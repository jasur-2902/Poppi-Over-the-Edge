{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-elements\\\\src\\\\searchbar\\\\SearchBar-android.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { nodeType, renderNode } from \"../helpers\";\nimport Input from \"../input/Input\";\nimport Icon from \"../icons/Icon\";\nvar ANDROID_GRAY = 'rgba(0, 0, 0, 0.54)';\nvar defaultSearchIcon = {\n  type: 'material',\n  size: 25,\n  color: ANDROID_GRAY,\n  name: 'search'\n};\nvar defaultCancelIcon = {\n  type: 'material',\n  size: 25,\n  color: ANDROID_GRAY,\n  name: 'arrow-back'\n};\nvar defaultClearIcon = {\n  type: 'material',\n  size: 25,\n  color: ANDROID_GRAY,\n  name: 'clear'\n};\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.focus = () => {\n      this.input.focus();\n    };\n\n    this.blur = () => {\n      this.input.blur();\n    };\n\n    this.clear = () => {\n      this.input.clear();\n      this.onChangeText('');\n      this.props.onClear();\n    };\n\n    this.cancel = () => {\n      this.blur();\n      this.props.onCancel();\n    };\n\n    this.onFocus = event => {\n      this.props.onFocus(event);\n      this.setState({\n        hasFocus: true,\n        isEmpty: this.props.value === ''\n      });\n    };\n\n    this.onBlur = event => {\n      this.props.onBlur(event);\n      this.setState({\n        hasFocus: false\n      });\n    };\n\n    this.onChangeText = text => {\n      this.props.onChangeText(text);\n      this.setState({\n        isEmpty: text === ''\n      });\n    };\n\n    var {\n      value\n    } = props;\n    this.state = {\n      hasFocus: false,\n      isEmpty: value ? value === '' : true\n    };\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      clearIcon,\n      containerStyle,\n      leftIconContainerStyle,\n      rightIconContainerStyle,\n      inputContainerStyle,\n      inputStyle,\n      searchIcon,\n      cancelIcon,\n      showLoading,\n      loadingProps\n    } = _this$props,\n        attributes = _objectWithoutProperties(_this$props, [\"clearIcon\", \"containerStyle\", \"leftIconContainerStyle\", \"rightIconContainerStyle\", \"inputContainerStyle\", \"inputStyle\", \"searchIcon\", \"cancelIcon\", \"showLoading\", \"loadingProps\"]);\n\n    var {\n      hasFocus,\n      isEmpty\n    } = this.state;\n\n    var {\n      style: loadingStyle\n    } = loadingProps,\n        otherLoadingProps = _objectWithoutProperties(loadingProps, [\"style\"]);\n\n    return React.createElement(View, {\n      style: StyleSheet.flatten([styles.container, containerStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, React.createElement(Input, _extends({\n      testID: \"searchInput\",\n      renderErrorMessage: false\n    }, attributes, {\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      onChangeText: this.onChangeText,\n      ref: input => {\n        this.input = input;\n      },\n      containerStyle: {\n        paddingHorizontal: 0\n      },\n      inputStyle: StyleSheet.flatten([styles.input, inputStyle]),\n      inputContainerStyle: StyleSheet.flatten([styles.inputContainer, inputContainerStyle]),\n      leftIcon: hasFocus ? renderNode(Icon, cancelIcon, _objectSpread(_objectSpread({}, defaultCancelIcon), {}, {\n        onPress: this.cancel\n      })) : renderNode(Icon, searchIcon, defaultSearchIcon),\n      leftIconContainerStyle: StyleSheet.flatten([styles.leftIconContainerStyle, leftIconContainerStyle]),\n      rightIcon: React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, showLoading && React.createElement(ActivityIndicator, _extends({\n        key: \"loading\",\n        style: StyleSheet.flatten([{\n          marginRight: 5\n        }, loadingStyle])\n      }, otherLoadingProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      })), !isEmpty && renderNode(Icon, clearIcon, _objectSpread(_objectSpread({}, defaultClearIcon), {}, {\n        key: 'cancel',\n        onPress: this.clear\n      }))),\n      rightIconContainerStyle: StyleSheet.flatten([styles.rightIconContainerStyle, rightIconContainerStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nSearchBar.propTypes = {\n  value: PropTypes.string,\n  clearIcon: nodeType,\n  searchIcon: nodeType,\n  cancelIcon: nodeType,\n  loadingProps: PropTypes.object,\n  showLoading: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  leftIconContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  rightIconContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  inputContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  inputStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onClear: PropTypes.func,\n  onCancel: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func\n};\nSearchBar.defaultProps = {\n  value: '',\n  loadingProps: {},\n  showLoading: false,\n  onClear: () => null,\n  onCancel: () => null,\n  onFocus: () => null,\n  onBlur: () => null,\n  onChangeText: () => null,\n  searchIcon: defaultSearchIcon,\n  clearIcon: defaultClearIcon,\n  cancelIcon: defaultCancelIcon\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    paddingTop: 8,\n    paddingBottom: 8\n  },\n  input: {\n    marginLeft: 24,\n    marginRight: 8\n  },\n  inputContainer: {\n    borderBottomWidth: 0,\n    width: '100%'\n  },\n  rightIconContainerStyle: {\n    marginRight: 8\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8\n  }\n});\nexport default SearchBar;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-elements/src/searchbar/SearchBar-android.js"],"names":["PropTypes","React","Component","nodeType","renderNode","Input","Icon","ANDROID_GRAY","defaultSearchIcon","type","size","color","name","defaultCancelIcon","defaultClearIcon","SearchBar","constructor","props","focus","input","blur","clear","onChangeText","onClear","cancel","onCancel","onFocus","event","setState","hasFocus","isEmpty","value","onBlur","text","state","render","clearIcon","containerStyle","leftIconContainerStyle","rightIconContainerStyle","inputContainerStyle","inputStyle","searchIcon","cancelIcon","showLoading","loadingProps","attributes","style","loadingStyle","otherLoadingProps","StyleSheet","flatten","styles","container","paddingHorizontal","inputContainer","onPress","flexDirection","marginRight","key","propTypes","string","object","bool","oneOfType","array","func","defaultProps","create","backgroundColor","paddingTop","paddingBottom","marginLeft","borderBottomWidth","width"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { StyleSheet, View, ActivityIndicator } from 'react-native';\n\nimport { nodeType, renderNode } from '../helpers';\n\nimport Input from '../input/Input';\nimport Icon from '../icons/Icon';\n\nconst ANDROID_GRAY = 'rgba(0, 0, 0, 0.54)';\n\nconst defaultSearchIcon = {\n  type: 'material',\n  size: 25,\n  color: ANDROID_GRAY,\n  name: 'search',\n};\n\nconst defaultCancelIcon = {\n  type: 'material',\n  size: 25,\n  color: ANDROID_GRAY,\n  name: 'arrow-back',\n};\n\nconst defaultClearIcon = {\n  type: 'material',\n  size: 25,\n  color: ANDROID_GRAY,\n  name: 'clear',\n};\n\nclass SearchBar extends Component {\n  focus = () => {\n    this.input.focus();\n  };\n\n  blur = () => {\n    this.input.blur();\n  };\n\n  clear = () => {\n    this.input.clear();\n    this.onChangeText('');\n    this.props.onClear();\n  };\n\n  cancel = () => {\n    this.blur();\n    this.props.onCancel();\n  };\n\n  onFocus = event => {\n    this.props.onFocus(event);\n    this.setState({\n      hasFocus: true,\n      isEmpty: this.props.value === '',\n    });\n  };\n\n  onBlur = event => {\n    this.props.onBlur(event);\n    this.setState({ hasFocus: false });\n  };\n\n  onChangeText = text => {\n    this.props.onChangeText(text);\n    this.setState({ isEmpty: text === '' });\n  };\n\n  constructor(props) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      hasFocus: false,\n      isEmpty: value ? value === '' : true,\n    };\n  }\n\n  render() {\n    const {\n      clearIcon,\n      containerStyle,\n      leftIconContainerStyle,\n      rightIconContainerStyle,\n      inputContainerStyle,\n      inputStyle,\n      searchIcon,\n      cancelIcon,\n      showLoading,\n      loadingProps,\n      ...attributes\n    } = this.props;\n    const { hasFocus, isEmpty } = this.state;\n    const { style: loadingStyle, ...otherLoadingProps } = loadingProps;\n\n    return (\n      <View style={StyleSheet.flatten([styles.container, containerStyle])}>\n        <Input\n          testID=\"searchInput\"\n          renderErrorMessage={false}\n          {...attributes}\n          onFocus={this.onFocus}\n          onBlur={this.onBlur}\n          onChangeText={this.onChangeText}\n          ref={input => {\n            this.input = input;\n          }}\n          containerStyle={{ paddingHorizontal: 0 }}\n          inputStyle={StyleSheet.flatten([styles.input, inputStyle])}\n          inputContainerStyle={StyleSheet.flatten([\n            styles.inputContainer,\n            inputContainerStyle,\n          ])}\n          leftIcon={\n            hasFocus\n              ? renderNode(Icon, cancelIcon, {\n                  ...defaultCancelIcon,\n                  onPress: this.cancel,\n                })\n              : renderNode(Icon, searchIcon, defaultSearchIcon)\n          }\n          leftIconContainerStyle={StyleSheet.flatten([\n            styles.leftIconContainerStyle,\n            leftIconContainerStyle,\n          ])}\n          rightIcon={\n            <View style={{ flexDirection: 'row' }}>\n              {showLoading && (\n                <ActivityIndicator\n                  key=\"loading\"\n                  style={StyleSheet.flatten([{ marginRight: 5 }, loadingStyle])}\n                  {...otherLoadingProps}\n                />\n              )}\n              {!isEmpty &&\n                renderNode(Icon, clearIcon, {\n                  ...defaultClearIcon,\n                  key: 'cancel',\n                  onPress: this.clear,\n                })}\n            </View>\n          }\n          rightIconContainerStyle={StyleSheet.flatten([\n            styles.rightIconContainerStyle,\n            rightIconContainerStyle,\n          ])}\n        />\n      </View>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  value: PropTypes.string,\n  clearIcon: nodeType,\n  searchIcon: nodeType,\n  cancelIcon: nodeType,\n  loadingProps: PropTypes.object,\n  showLoading: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  leftIconContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  rightIconContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  inputContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  inputStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onClear: PropTypes.func,\n  onCancel: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func,\n};\n\nSearchBar.defaultProps = {\n  value: '',\n  loadingProps: {},\n  showLoading: false,\n  onClear: () => null,\n  onCancel: () => null,\n  onFocus: () => null,\n  onBlur: () => null,\n  onChangeText: () => null,\n  searchIcon: defaultSearchIcon,\n  clearIcon: defaultClearIcon,\n  cancelIcon: defaultCancelIcon,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  input: {\n    marginLeft: 24,\n    marginRight: 8,\n  },\n  inputContainer: {\n    borderBottomWidth: 0,\n    width: '100%',\n  },\n  rightIconContainerStyle: {\n    marginRight: 8,\n  },\n  leftIconContainerStyle: {\n    marginLeft: 8,\n  },\n});\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}