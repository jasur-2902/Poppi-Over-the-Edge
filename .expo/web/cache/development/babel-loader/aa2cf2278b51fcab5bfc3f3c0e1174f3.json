{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\expo-camera\\\\build\\\\Camera.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport mapValues from 'lodash.mapvalues';\nimport { NativeModulesProxy, requireNativeViewManager } from 'expo-core';\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar CameraManager = NativeModulesProxy.ExponentCameraManager || NativeModulesProxy.ExponentCameraModule;\nvar EventThrottleMs = 500;\nvar _PICTURE_SAVED_CALLBACKS = {};\nvar _GLOBAL_PICTURE_ID = 1;\nexport default class Camera extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onCameraReady = () => {\n      if (this.props.onCameraReady) {\n        this.props.onCameraReady();\n      }\n    };\n\n    this._onMountError = (_ref) => {\n      var {\n        nativeEvent\n      } = _ref;\n\n      if (this.props.onMountError) {\n        this.props.onMountError(nativeEvent);\n      }\n    };\n\n    this._onPictureSaved = (_ref2) => {\n      var {\n        nativeEvent\n      } = _ref2;\n      var callback = _PICTURE_SAVED_CALLBACKS[nativeEvent.id];\n\n      if (callback) {\n        callback(nativeEvent.data);\n        delete _PICTURE_SAVED_CALLBACKS[nativeEvent.id];\n      }\n    };\n\n    this._onObjectDetected = callback => (_ref3) => {\n      var {\n        nativeEvent\n      } = _ref3;\n      var {\n        type\n      } = nativeEvent;\n\n      if (this._lastEvents[type] && this._lastEventsTimes[type] && JSON.stringify(nativeEvent) === this._lastEvents[type] && new Date().getTime() - this._lastEventsTimes[type].getTime() < EventThrottleMs) {\n        return;\n      }\n\n      if (callback) {\n        callback(nativeEvent);\n        this._lastEventsTimes[type] = new Date();\n        this._lastEvents[type] = JSON.stringify(nativeEvent);\n      }\n    };\n\n    this._setReference = ref => {\n      if (ref) {\n        this._cameraRef = ref;\n        this._cameraHandle = findNodeHandle(ref);\n      } else {\n        this._cameraRef = null;\n        this._cameraHandle = null;\n      }\n    };\n\n    this._lastEvents = {};\n    this._lastEventsTimes = {};\n  }\n\n  takePictureAsync(options) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!options) {\n        options = {};\n      }\n\n      if (!options.quality) {\n        options.quality = 1;\n      }\n\n      if (options.onPictureSaved) {\n        var id = _GLOBAL_PICTURE_ID++;\n        _PICTURE_SAVED_CALLBACKS[id] = options.onPictureSaved;\n        options.id = id;\n        options.fastMode = true;\n      }\n\n      return yield CameraManager.takePicture(options, _this._cameraHandle);\n    })();\n  }\n\n  getSupportedRatiosAsync() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (Platform.OS === 'android') {\n        return yield CameraManager.getSupportedRatios(_this2._cameraHandle);\n      } else {\n        throw new Error('Ratio is not supported on iOS');\n      }\n    })();\n  }\n\n  getAvailablePictureSizesAsync(ratio) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield CameraManager.getAvailablePictureSizes(ratio, _this3._cameraHandle);\n    })();\n  }\n\n  recordAsync(options) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!options || typeof options !== 'object') {\n        options = {};\n      } else if (typeof options.quality === 'string') {\n        options.quality = Camera.Constants.VideoQuality[options.quality];\n      }\n\n      return yield CameraManager.record(options, _this4._cameraHandle);\n    })();\n  }\n\n  stopRecording() {\n    CameraManager.stopRecording(this._cameraHandle);\n  }\n\n  pausePreview() {\n    CameraManager.pausePreview(this._cameraHandle);\n  }\n\n  resumePreview() {\n    CameraManager.resumePreview(this._cameraHandle);\n  }\n\n  render() {\n    var nativeProps = this._convertNativeProps(this.props);\n\n    return React.createElement(ExponentCamera, _extends({}, nativeProps, {\n      ref: this._setReference,\n      onCameraReady: this._onCameraReady,\n      onMountError: this._onMountError,\n      onPictureSaved: this._onPictureSaved,\n      onBarCodeScanned: this._onObjectDetected(this.props.onBarCodeScanned),\n      onFacesDetected: this._onObjectDetected(this.props.onFacesDetected),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  _convertNativeProps(props) {\n    var newProps = mapValues(props, convertProp);\n    var propsKeys = Object.keys(newProps);\n\n    if (!propsKeys.includes('barCodeScannerSettings') && propsKeys.includes('barCodeTypes')) {\n      newProps.barCodeScannerSettings = {\n        barCodeTypes: newProps.barCodeTypes\n      };\n    }\n\n    if (props.onBarCodeScanned) {\n      newProps.barCodeScannerEnabled = true;\n    }\n\n    if (props.onFacesDetected) {\n      newProps.faceDetectorEnabled = true;\n    }\n\n    if (Platform.OS === 'ios') {\n      delete newProps.ratio;\n      delete newProps.useCamera2Api;\n    }\n\n    return newProps;\n  }\n\n}\nCamera.Constants = {\n  Type: CameraManager.Type,\n  FlashMode: CameraManager.FlashMode,\n  AutoFocus: CameraManager.AutoFocus,\n  WhiteBalance: CameraManager.WhiteBalance,\n  VideoQuality: CameraManager.VideoQuality,\n  VideoStabilization: CameraManager.VideoStabilization || {}\n};\nCamera.ConversionTables = {\n  type: CameraManager.Type,\n  flashMode: CameraManager.FlashMode,\n  autoFocus: CameraManager.AutoFocus,\n  whiteBalance: CameraManager.WhiteBalance\n};\nCamera.propTypes = _objectSpread(_objectSpread({}, ViewPropTypes), {}, {\n  zoom: PropTypes.number,\n  ratio: PropTypes.string,\n  focusDepth: PropTypes.number,\n  onMountError: PropTypes.func,\n  pictureSize: PropTypes.string,\n  onCameraReady: PropTypes.func,\n  useCamera2Api: PropTypes.bool,\n  onBarCodeScanned: PropTypes.func,\n  barCodeScannerSettings: PropTypes.object,\n  onFacesDetected: PropTypes.func,\n  faceDetectorSettings: PropTypes.object,\n  type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  flashMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  videoStabilizationMode: PropTypes.number,\n  whiteBalance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  autoFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool])\n});\nCamera.defaultProps = {\n  zoom: 0,\n  ratio: '4:3',\n  focusDepth: 0,\n  faceDetectorSettings: {},\n  type: CameraManager.Type.back,\n  autoFocus: CameraManager.AutoFocus.on,\n  flashMode: CameraManager.FlashMode.off,\n  whiteBalance: CameraManager.WhiteBalance.auto\n};\n\nvar convertProp = (value, key) => {\n  if (typeof value === 'string' && Camera.ConversionTables[key]) {\n    return Camera.ConversionTables[key][value];\n  }\n\n  return value;\n};\n\nexport var Constants = Camera.Constants;\nvar ExponentCamera = requireNativeViewManager('ExponentCamera');","map":{"version":3,"sources":["../src/Camera.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport PropTypes from 'prop-types';\nimport mapValues from 'lodash.mapvalues';\nimport { NativeModulesProxy, requireNativeViewManager } from 'expo-core';\nimport { findNodeHandle, ViewPropTypes, Platform } from 'react-native';\n\ntype PictureOptions = {\n  quality?: number;\n  base64?: boolean;\n  exif?: boolean;\n  skipProcessing?: boolean;\n  onPictureSaved?: Function;\n  // internal\n  id?: number;\n  fastMode?: boolean;\n};\n\ntype RecordingOptions = {\n  maxDuration?: number;\n  maxFileSize?: number;\n  quality?: number | string;\n};\n\ntype CapturedPicture = {\n  width: number;\n  height: number;\n  uri: string;\n  base64?: string;\n  exif?: any;\n};\n\ntype PropsType = React.ComponentProps<typeof View> & {\n  zoom?: number;\n  ratio?: string;\n  focusDepth?: number;\n  type?: number | string;\n  onCameraReady?: Function;\n  useCamera2Api?: boolean;\n  flashMode?: number | string;\n  whiteBalance?: number | string;\n  autoFocus?: string | boolean | number;\n  pictureSize?: string;\n  videoStabilizationMode?: number;\n  onMountError?: (event: { message: string }) => void;\n  barCodeScannerSettings?: {};\n  onBarCodeScanned?: (scanningResult: { type: string; data: string }) => void;\n  faceDetectorSettings?: {};\n  onFacesDetected?: (faces: { faces: any[] }) => void;\n};\n\nconst CameraManager: any =\n  NativeModulesProxy.ExponentCameraManager || NativeModulesProxy.ExponentCameraModule;\n\nconst EventThrottleMs = 500;\n\nconst _PICTURE_SAVED_CALLBACKS = {};\nlet _GLOBAL_PICTURE_ID = 1;\n\nexport default class Camera extends React.Component<PropsType> {\n  static Constants = {\n    Type: CameraManager.Type,\n    FlashMode: CameraManager.FlashMode,\n    AutoFocus: CameraManager.AutoFocus,\n    WhiteBalance: CameraManager.WhiteBalance,\n    VideoQuality: CameraManager.VideoQuality,\n    VideoStabilization: CameraManager.VideoStabilization || {},\n  };\n\n  // Values under keys from this object will be transformed to native options\n  static ConversionTables = {\n    type: CameraManager.Type,\n    flashMode: CameraManager.FlashMode,\n    autoFocus: CameraManager.AutoFocus,\n    whiteBalance: CameraManager.WhiteBalance,\n  };\n\n  static propTypes = {\n    ...ViewPropTypes,\n    zoom: PropTypes.number,\n    ratio: PropTypes.string,\n    focusDepth: PropTypes.number,\n    onMountError: PropTypes.func,\n    pictureSize: PropTypes.string,\n    onCameraReady: PropTypes.func,\n    useCamera2Api: PropTypes.bool,\n    onBarCodeScanned: PropTypes.func,\n    barCodeScannerSettings: PropTypes.object,\n    onFacesDetected: PropTypes.func,\n    faceDetectorSettings: PropTypes.object,\n    type: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    flashMode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    videoStabilizationMode: PropTypes.number,\n    whiteBalance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    autoFocus: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  };\n\n  static defaultProps: PropsType = {\n    zoom: 0,\n    ratio: '4:3',\n    focusDepth: 0,\n    faceDetectorSettings: {},\n    type: CameraManager.Type.back,\n    autoFocus: CameraManager.AutoFocus.on,\n    flashMode: CameraManager.FlashMode.off,\n    whiteBalance: CameraManager.WhiteBalance.auto,\n  };\n\n  _cameraHandle?: number | null;\n  _cameraRef?: React.Component | null;\n  _lastEvents: { [eventName: string]: string };\n  _lastEventsTimes: { [eventName: string]: Date };\n\n  constructor(props: PropsType) {\n    super(props);\n    this._lastEvents = {};\n    this._lastEventsTimes = {};\n  }\n\n  async takePictureAsync(options?: PictureOptions): Promise<CapturedPicture> {\n    if (!options) {\n      options = {};\n    }\n    if (!options.quality) {\n      options.quality = 1;\n    }\n    if (options.onPictureSaved) {\n      const id = _GLOBAL_PICTURE_ID++;\n      _PICTURE_SAVED_CALLBACKS[id] = options.onPictureSaved;\n      options.id = id;\n      options.fastMode = true;\n    }\n    return await CameraManager.takePicture(options, this._cameraHandle);\n  }\n\n  async getSupportedRatiosAsync(): Promise<Array<string>> {\n    if (Platform.OS === 'android') {\n      return await CameraManager.getSupportedRatios(this._cameraHandle);\n    } else {\n      throw new Error('Ratio is not supported on iOS');\n    }\n  }\n\n  async getAvailablePictureSizesAsync(ratio?: string): Promise<Array<string>> {\n    return await CameraManager.getAvailablePictureSizes(ratio, this._cameraHandle);\n  }\n\n  async recordAsync(options?: RecordingOptions): Promise<{ uri: string }> {\n    if (!options || typeof options !== 'object') {\n      options = {};\n    } else if (typeof options.quality === 'string') {\n      options.quality = Camera.Constants.VideoQuality[options.quality];\n    }\n    return await CameraManager.record(options, this._cameraHandle);\n  }\n\n  stopRecording() {\n    CameraManager.stopRecording(this._cameraHandle);\n  }\n\n  pausePreview() {\n    CameraManager.pausePreview(this._cameraHandle);\n  }\n\n  resumePreview() {\n    CameraManager.resumePreview(this._cameraHandle);\n  }\n\n  _onCameraReady = () => {\n    if (this.props.onCameraReady) {\n      this.props.onCameraReady();\n    }\n  };\n\n  _onMountError = ({ nativeEvent }: { nativeEvent: { message: string } }) => {\n    if (this.props.onMountError) {\n      this.props.onMountError(nativeEvent);\n    }\n  };\n\n  _onPictureSaved = ({ nativeEvent }: { nativeEvent: { data: CapturedPicture; id: number } }) => {\n    const callback = _PICTURE_SAVED_CALLBACKS[nativeEvent.id];\n    if (callback) {\n      callback(nativeEvent.data);\n      delete _PICTURE_SAVED_CALLBACKS[nativeEvent.id];\n    }\n  };\n\n  _onObjectDetected = (callback?: Function) => ({ nativeEvent }: { nativeEvent: any }) => {\n    const { type } = nativeEvent;\n    if (\n      this._lastEvents[type] &&\n      this._lastEventsTimes[type] &&\n      JSON.stringify(nativeEvent) === this._lastEvents[type] &&\n      new Date().getTime() - this._lastEventsTimes[type].getTime() < EventThrottleMs\n    ) {\n      return;\n    }\n\n    if (callback) {\n      callback(nativeEvent);\n      this._lastEventsTimes[type] = new Date();\n      this._lastEvents[type] = JSON.stringify(nativeEvent);\n    }\n  };\n\n  _setReference = (ref?: React.Component) => {\n    if (ref) {\n      this._cameraRef = ref;\n      this._cameraHandle = findNodeHandle(ref);\n    } else {\n      this._cameraRef = null;\n      this._cameraHandle = null;\n    }\n  };\n\n  render() {\n    const nativeProps = this._convertNativeProps(this.props);\n\n    return (\n      <ExponentCamera\n        {...nativeProps}\n        ref={this._setReference}\n        onCameraReady={this._onCameraReady}\n        onMountError={this._onMountError}\n        onPictureSaved={this._onPictureSaved}\n        onBarCodeScanned={this._onObjectDetected(this.props.onBarCodeScanned)}\n        onFacesDetected={this._onObjectDetected(this.props.onFacesDetected)}\n      />\n    );\n  }\n\n  _convertNativeProps(props: PropsType) {\n    const newProps = mapValues(props, convertProp);\n\n    const propsKeys = Object.keys(newProps);\n    // barCodeTypes is deprecated\n    if (!propsKeys.includes('barCodeScannerSettings') && propsKeys.includes('barCodeTypes')) {\n      newProps.barCodeScannerSettings = {\n        barCodeTypes: newProps.barCodeTypes,\n      };\n    }\n\n    if (props.onBarCodeScanned) {\n      newProps.barCodeScannerEnabled = true;\n    }\n\n    if (props.onFacesDetected) {\n      newProps.faceDetectorEnabled = true;\n    }\n\n    if (Platform.OS === 'ios') {\n      delete newProps.ratio;\n      delete newProps.useCamera2Api;\n    }\n\n    return newProps;\n  }\n}\n\nconst convertProp = (value: any, key: string): any => {\n  if (typeof value === 'string' && Camera.ConversionTables[key]) {\n    return Camera.ConversionTables[key][value];\n  }\n\n  return value;\n}\n\nexport const Constants = Camera.Constants;\n\nconst ExponentCamera = requireNativeViewManager('ExponentCamera');\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}