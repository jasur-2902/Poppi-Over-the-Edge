{"ast":null,"code":"import Constants from 'expo-constants';\nimport Logs from \"../logs/Logs\";\nimport RemoteLogging from \"../logs/RemoteLogging\";\n\nif (Constants.manifest && Constants.manifest.logUrl) {\n  if (!navigator.hasOwnProperty('userAgent')) {\n    Logs.enableExpoCliLogging();\n  } else {\n    RemoteLogging.enqueueRemoteLogAsync('info', {}, ['You are now debugging remotely; check your browser console for your application logs.']);\n  }\n}\n\nvar originalWarn = console.warn;\n\nconsole.warn = function warn() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length > 0 && typeof args[0] === 'string' && /^Require cycle: .*node_modules/.test(args[0])) {\n    return;\n  }\n\n  originalWarn.apply(console, args);\n};","map":{"version":3,"sources":["../../src/environment/logging.ts"],"names":[],"mappings":"AAAA,OAAO,SAAP,MAAsB,gBAAtB;AAEA,OAAO,IAAP;AACA,OAAO,aAAP;;AAEA,IAAI,SAAS,CAAC,QAAV,IAAsB,SAAS,CAAC,QAAV,CAAmB,MAA7C,EAAqD;AAGnD,MAAI,CAAC,SAAS,CAAC,cAAV,CAAyB,WAAzB,CAAL,EAA4C;AAC1C,IAAA,IAAI,CAAC,oBAAL;AACD,GAFD,MAEO;AACL,IAAA,aAAa,CAAC,qBAAd,CAAoC,MAApC,EAA4C,EAA5C,EAAgD,CAC9C,uFAD8C,CAAhD;AAGD;AACF;;AAID,IAAM,YAAY,GAAG,OAAO,CAAC,IAA7B;;AACA,OAAO,CAAC,IAAR,GAAe,SAAS,IAAT,GAAqB;AAAA,oCAAJ,IAAI;AAAJ,IAAA,IAAI;AAAA;;AAClC,MACE,IAAI,CAAC,MAAL,GAAc,CAAd,IACA,OAAO,IAAI,CAAC,CAAD,CAAX,KAAmB,QADnB,IAEA,iCAAiC,IAAjC,CAAsC,IAAI,CAAC,CAAD,CAA1C,CAHF,EAIE;AACA;AACD;;AACD,EAAA,YAAY,CAAC,KAAb,CAAmB,OAAnB,EAA4B,IAA5B;AACD,CATD","sourcesContent":["import Constants from 'expo-constants';\n\nimport Logs from '../logs/Logs';\nimport RemoteLogging from '../logs/RemoteLogging';\n\nif (Constants.manifest && Constants.manifest.logUrl) {\n  // Enable logging to the Expo dev tools only if this JS is not running in a web browser (ex: the\n  // remote debugger)\n  if (!navigator.hasOwnProperty('userAgent')) {\n    Logs.enableExpoCliLogging();\n  } else {\n    RemoteLogging.enqueueRemoteLogAsync('info', {}, [\n      'You are now debugging remotely; check your browser console for your application logs.',\n    ]);\n  }\n}\n\n// NOTE(2018-10-29): temporarily filter out cyclic dependency warnings here since they are noisy and\n// each warning symbolicates a stack trace, which is slow when there are many warnings\nconst originalWarn = console.warn;\nconsole.warn = function warn(...args) {\n  if (\n    args.length > 0 &&\n    typeof args[0] === 'string' &&\n    /^Require cycle: .*node_modules/.test(args[0])\n  ) {\n    return;\n  }\n  originalWarn.apply(console, args);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}