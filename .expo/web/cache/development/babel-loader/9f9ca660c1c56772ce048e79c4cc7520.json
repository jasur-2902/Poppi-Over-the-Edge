{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { PermissionType, SimpleResponse } from \"./Permissions.types\";\n\nfunction _getUserMedia(constraints) {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || function () {\n    var err = new Error('Permission unimplemented');\n    err.code = 0;\n    err.name = 'NotAllowedError';\n    throw err;\n  };\n\n  return new Promise(function (resolve, reject) {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nvar Status = {\n  undetermined: 'undetermined',\n  granted: 'granted',\n  denied: 'denied'\n};\n\nfunction askForMediaPermissionAsync(_x) {\n  return _askForMediaPermissionAsync.apply(this, arguments);\n}\n\nfunction _askForMediaPermissionAsync() {\n  _askForMediaPermissionAsync = _asyncToGenerator(function* (options) {\n    try {\n      yield _getUserMedia(options);\n      return {\n        status: Status.granted\n      };\n    } catch ({\n      message\n    }) {\n      if (message === 'Permission dismissed') {\n        return {\n          status: Status.undetermined\n        };\n      } else {\n        return {\n          status: Status.denied\n        };\n      }\n    }\n  });\n  return _askForMediaPermissionAsync.apply(this, arguments);\n}\n\nfunction askForMicrophonePermissionAsync() {\n  return _askForMicrophonePermissionAsync.apply(this, arguments);\n}\n\nfunction _askForMicrophonePermissionAsync() {\n  _askForMicrophonePermissionAsync = _asyncToGenerator(function* () {\n    return yield askForMediaPermissionAsync({\n      audio: true\n    });\n  });\n  return _askForMicrophonePermissionAsync.apply(this, arguments);\n}\n\nfunction askForCameraPermissionAsync() {\n  return _askForCameraPermissionAsync.apply(this, arguments);\n}\n\nfunction _askForCameraPermissionAsync() {\n  _askForCameraPermissionAsync = _asyncToGenerator(function* () {\n    return yield askForMediaPermissionAsync({\n      video: true\n    });\n  });\n  return _askForCameraPermissionAsync.apply(this, arguments);\n}\n\nfunction askForLocationPermissionAsync() {\n  return _askForLocationPermissionAsync.apply(this, arguments);\n}\n\nfunction _askForLocationPermissionAsync() {\n  _askForLocationPermissionAsync = _asyncToGenerator(function* () {\n    return new Promise(resolve => {\n      navigator.geolocation.getCurrentPosition(() => resolve({\n        status: Status.granted\n      }), (_ref) => {\n        var {\n          code\n        } = _ref;\n\n        if (code === 1) {\n          resolve({\n            status: Status.denied\n          });\n        } else {\n          resolve({\n            status: Status.undetermined\n          });\n        }\n      });\n    });\n  });\n  return _askForLocationPermissionAsync.apply(this, arguments);\n}\n\nfunction getPermissionAsync(_x2, _x3) {\n  return _getPermissionAsync.apply(this, arguments);\n}\n\nfunction _getPermissionAsync() {\n  _getPermissionAsync = _asyncToGenerator(function* (permission, shouldAsk) {\n    switch (permission) {\n      case 'userFacingNotifications':\n      case 'notifications':\n        {\n          var {\n            Notification = {}\n          } = global;\n\n          if (Notification.requestPermission) {\n            var status = Notification.permission;\n\n            if (shouldAsk) {\n              status = yield Notification.requestPermission();\n            }\n\n            if (!status || status === 'default') {\n              return {\n                status: Status.undetermined\n              };\n            }\n\n            return {\n              status\n            };\n          }\n        }\n        break;\n\n      case 'location':\n        {\n          var {\n            navigator: _navigator = {}\n          } = global;\n\n          if (_navigator.permissions) {\n            var {\n              state\n            } = yield _navigator.permissions.query({\n              name: 'geolocation'\n            });\n\n            if (state !== Status.granted && state !== Status.denied) {\n              if (shouldAsk) {\n                return yield askForLocationPermissionAsync();\n              }\n\n              return {\n                status: Status.undetermined\n              };\n            }\n\n            return {\n              status: state\n            };\n          } else if (shouldAsk) {\n            return yield askForLocationPermissionAsync();\n          }\n        }\n        break;\n\n      case 'audioRecording':\n        if (shouldAsk) {\n          return yield askForMicrophonePermissionAsync();\n        } else {}\n\n        break;\n\n      case 'camera':\n        if (shouldAsk) {\n          return yield askForCameraPermissionAsync();\n        } else {}\n\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      status: Status.undetermined\n    };\n  });\n  return _getPermissionAsync.apply(this, arguments);\n}\n\nexport default {\n  get name() {\n    return 'ExpoPermissions';\n  },\n\n  getAsync(permissionsTypes) {\n    return _asyncToGenerator(function* () {\n      var permissions = [...new Set(permissionsTypes)];\n      var permissionResults = [];\n\n      for (var permission of permissions) {\n        var result = yield getPermissionAsync(permission, false);\n        permissionResults.push(result);\n      }\n\n      return permissionResults;\n    })();\n  },\n\n  askAsync(permissionsTypes) {\n    return _asyncToGenerator(function* () {\n      var permissions = [...new Set(permissionsTypes)];\n      var permissionResults = [];\n\n      for (var permission of permissions) {\n        var result = yield getPermissionAsync(permission, true);\n        permissionResults.push(result);\n      }\n\n      return permissionResults;\n    })();\n  }\n\n};","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/expo-permissions/src/ExpoPermissions.web.js"],"names":["PermissionType","SimpleResponse","_getUserMedia","constraints","navigator","mediaDevices","getUserMedia","webkitGetUserMedia","mozGetUserMedia","err","Error","code","name","Promise","resolve","reject","call","Status","undetermined","granted","denied","askForMediaPermissionAsync","options","status","message","askForMicrophonePermissionAsync","audio","askForCameraPermissionAsync","video","askForLocationPermissionAsync","geolocation","getCurrentPosition","getPermissionAsync","permission","shouldAsk","Notification","global","requestPermission","permissions","state","query","getAsync","permissionsTypes","Set","permissionResults","result","push","askAsync"],"mappings":";;;;AACA,SAASA,cAAT,EAAyBC,cAAzB;;AAUA,SAASC,aAAT,CAAuBC,WAAvB,EAA4D;AAC1D,MAAIC,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,YAArD,EAAmE;AACjE,WAAOF,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoCH,WAApC,CAAP;AACD;;AAOD,MAAMG,YAAY,GAChBF,SAAS,CAACE,YAAV,IACAF,SAAS,CAACG,kBADV,IAEAH,SAAS,CAACI,eAFV,IAGA,YAAW;AACT,QAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAU,0BAAV,CAAZ;AACAD,IAAAA,GAAG,CAACE,IAAJ,GAAW,CAAX;AACAF,IAAAA,GAAG,CAACG,IAAJ,GAAW,iBAAX;AACA,UAAMH,GAAN;AACD,GATH;;AAWA,SAAO,IAAII,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3CT,IAAAA,YAAY,CAACU,IAAb,CAAkBZ,SAAlB,EAA6BD,WAA7B,EAA0CW,OAA1C,EAAmDC,MAAnD;AACD,GAFM,CAAP;AAGD;;AAED,IAAME,MAAM,GAAG;AACbC,EAAAA,YAAY,EAAE,cADD;AAEbC,EAAAA,OAAO,EAAE,SAFI;AAGbC,EAAAA,MAAM,EAAE;AAHK,CAAf;;SAMeC,0B;;;;;kDAAf,WAA0CC,OAA1C,EAAoG;AAClG,QAAI;AACF,YAAMpB,aAAa,CAACoB,OAAD,CAAnB;AACA,aAAO;AAAEC,QAAAA,MAAM,EAAEN,MAAM,CAACE;AAAjB,OAAP;AACD,KAHD,CAGE,OAAO;AAAEK,MAAAA;AAAF,KAAP,EAAoB;AAGpB,UAAIA,OAAO,KAAK,sBAAhB,EAAwC;AAEtC,eAAO;AAAED,UAAAA,MAAM,EAAEN,MAAM,CAACC;AAAjB,SAAP;AACD,OAHD,MAGO;AAIL,eAAO;AAAEK,UAAAA,MAAM,EAAEN,MAAM,CAACG;AAAjB,SAAP;AACD;AACF;AACF,G;;;;SAEcK,+B;;;;;uDAAf,aAA0E;AACxE,iBAAaJ,0BAA0B,CAAC;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAvC;AACD,G;;;;SAEcC,2B;;;;;mDAAf,aAAsE;AACpE,iBAAaN,0BAA0B,CAAC;AAAEO,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAvC;AACD,G;;;;SAEcC,6B;;;;;qDAAf,aAAwE;AACtE,WAAO,IAAIhB,OAAJ,CAAYC,OAAO,IAAI;AAC5BV,MAAAA,SAAS,CAAC0B,WAAV,CAAsBC,kBAAtB,CACE,MAAMjB,OAAO,CAAC;AAAES,QAAAA,MAAM,EAAEN,MAAM,CAACE;AAAjB,OAAD,CADf,EAEE,UAA6B;AAAA,YAA5B;AAAER,UAAAA;AAAF,SAA4B;;AAE3B,YAAIA,IAAI,KAAK,CAAb,EAAgB;AACdG,UAAAA,OAAO,CAAC;AAAES,YAAAA,MAAM,EAAEN,MAAM,CAACG;AAAjB,WAAD,CAAP;AACD,SAFD,MAEO;AACLN,UAAAA,OAAO,CAAC;AAAES,YAAAA,MAAM,EAAEN,MAAM,CAACC;AAAjB,WAAD,CAAP;AACD;AACF,OATH;AAWD,KAZM,CAAP;AAaD,G;;;;SAEcc,kB;;;;;0CAAf,WAAkCC,UAAlC,EAA8DC,SAA9D,EAA2G;AACzG,YAAQD,UAAR;AACE,WAAK,yBAAL;AACA,WAAK,eAAL;AACE;AACE,cAAM;AAAEE,YAAAA,YAAY,GAAG;AAAjB,cAAwBC,MAA9B;;AACA,cAAID,YAAY,CAACE,iBAAjB,EAAoC;AAClC,gBAAId,MAAM,GAAGY,YAAY,CAACF,UAA1B;;AACA,gBAAIC,SAAJ,EAAe;AACbX,cAAAA,MAAM,SAASY,YAAY,CAACE,iBAAb,EAAf;AACD;;AACD,gBAAI,CAACd,MAAD,IAAWA,MAAM,KAAK,SAA1B,EAAqC;AACnC,qBAAO;AAAEA,gBAAAA,MAAM,EAAEN,MAAM,CAACC;AAAjB,eAAP;AACD;;AACD,mBAAO;AAAEK,cAAAA;AAAF,aAAP;AACD;AACF;AACD;;AACF,WAAK,UAAL;AACE;AACE,cAAM;AAAEnB,YAAAA,SAAS,EAATA,UAAS,GAAG;AAAd,cAAqBgC,MAA3B;;AACA,cAAIhC,UAAS,CAACkC,WAAd,EAA2B;AACzB,gBAAM;AAAEC,cAAAA;AAAF,sBAAkBnC,UAAS,CAACkC,WAAV,CAAsBE,KAAtB,CAA4B;AAAE5B,cAAAA,IAAI,EAAE;AAAR,aAA5B,CAAxB;;AACA,gBAAI2B,KAAK,KAAKtB,MAAM,CAACE,OAAjB,IAA4BoB,KAAK,KAAKtB,MAAM,CAACG,MAAjD,EAAyD;AACvD,kBAAIc,SAAJ,EAAe;AACb,6BAAaL,6BAA6B,EAA1C;AACD;;AACD,qBAAO;AAAEN,gBAAAA,MAAM,EAAEN,MAAM,CAACC;AAAjB,eAAP;AACD;;AAED,mBAAO;AAAEK,cAAAA,MAAM,EAAEgB;AAAV,aAAP;AACD,WAVD,MAUO,IAAIL,SAAJ,EAAe;AAEpB,yBAAaL,6BAA6B,EAA1C;AACD;AACF;AACD;;AACF,WAAK,gBAAL;AACE,YAAIK,SAAJ,EAAe;AACb,uBAAaT,+BAA+B,EAA5C;AACD,SAFD,MAEO,CAEN;;AACD;;AACF,WAAK,QAAL;AACE,YAAIS,SAAJ,EAAe;AACb,uBAAaP,2BAA2B,EAAxC;AACD,SAFD,MAEO,CAEN;;AACD;;AACF;AACE;AAnDJ;;AAqDA,WAAO;AAAEJ,MAAAA,MAAM,EAAEN,MAAM,CAACC;AAAjB,KAAP;AACD,G;;;;AAED,eAAe;AACb,MAAIN,IAAJ,GAAmB;AACjB,WAAO,iBAAP;AACD,GAHY;;AAIP6B,EAAAA,QAAN,CAAeC,gBAAf,EAAgF;AAAA;AAC9E,UAAMJ,WAAW,GAAG,CAAC,GAAG,IAAIK,GAAJ,CAAQD,gBAAR,CAAJ,CAApB;AACA,UAAIE,iBAAwC,GAAG,EAA/C;;AACA,WAAK,IAAIX,UAAT,IAAuBK,WAAvB,EAAoC;AAClC,YAAMO,MAAM,SAASb,kBAAkB,CAACC,UAAD,EAAa,KAAb,CAAvC;AACAW,QAAAA,iBAAiB,CAACE,IAAlB,CAAuBD,MAAvB;AACD;;AACD,aAAOD,iBAAP;AAP8E;AAQ/E,GAZY;;AAaPG,EAAAA,QAAN,CAAeL,gBAAf,EAAgF;AAAA;AAC9E,UAAMJ,WAAW,GAAG,CAAC,GAAG,IAAIK,GAAJ,CAAQD,gBAAR,CAAJ,CAApB;AACA,UAAIE,iBAAwC,GAAG,EAA/C;;AACA,WAAK,IAAIX,UAAT,IAAuBK,WAAvB,EAAoC;AAClC,YAAMO,MAAM,SAASb,kBAAkB,CAACC,UAAD,EAAa,IAAb,CAAvC;AACAW,QAAAA,iBAAiB,CAACE,IAAlB,CAAuBD,MAAvB;AACD;;AACD,aAAOD,iBAAP;AAP8E;AAQ/E;;AArBY,CAAf","sourcesContent":["// @flow\nimport { PermissionType, SimpleResponse } from './Permissions.types';\n\n\n/*\n * TODO: Bacon: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Permissions\n * Add messages to manifest like we do with iOS info.plist\n */\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Using_the_new_API_in_older_browsers\n// Older browsers might not implement mediaDevices at all, so we set an empty object first\nfunction _getUserMedia(constraints: MediaStreamConstraints) {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n\n  // First get ahold of the legacy getUserMedia, if present\n  const getUserMedia =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    function() {\n      const err = new Error('Permission unimplemented');\n      err.code = 0;\n      err.name = 'NotAllowedError';\n      throw err;\n    };\n\n  return new Promise(function(resolve, reject) {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nconst Status = {\n  undetermined: 'undetermined',\n  granted: 'granted',\n  denied: 'denied',\n};\n\nasync function askForMediaPermissionAsync(options: MediaStreamConstraints): Promise<SimpleResponse> {\n  try {\n    await _getUserMedia(options);\n    return { status: Status.granted };\n  } catch ({ message }) {\n    // name: NotAllowedError\n    // code: 0\n    if (message === 'Permission dismissed') {\n      // message: Permission dismissed\n      return { status: Status.undetermined };\n    } else {\n      // TODO: Bacon: [OSX] The system could deny access to chrome.\n      // TODO: Bacon: add: { status: 'unimplemented' }\n      // message: Permission denied\n      return { status: Status.denied };\n    }\n  }\n}\n\nasync function askForMicrophonePermissionAsync(): Promise<SimpleResponse> {\n  return await askForMediaPermissionAsync({ audio: true });\n}\n\nasync function askForCameraPermissionAsync(): Promise<SimpleResponse> {\n  return await askForMediaPermissionAsync({ video: true });\n}\n\nasync function askForLocationPermissionAsync(): Promise<SimpleResponse> {\n  return new Promise(resolve => {\n    navigator.geolocation.getCurrentPosition(\n      () => resolve({ status: Status.granted }),\n      ({ code }: PositionError) => {\n        // https://developer.mozilla.org/en-US/docs/Web/API/PositionError/code\n        if (code === 1) {\n          resolve({ status: Status.denied });\n        } else {\n          resolve({ status: Status.undetermined });\n        }\n      }\n    );\n  });\n}\n\nasync function getPermissionAsync(permission: PermissionType, shouldAsk: boolean): Promise<SimpleResponse> {\n  switch (permission) {\n    case 'userFacingNotifications':\n    case 'notifications':\n      {\n        const { Notification = {} } = global;\n        if (Notification.requestPermission) {\n          let status = Notification.permission;\n          if (shouldAsk) {\n            status = await Notification.requestPermission();\n          }\n          if (!status || status === 'default') {\n            return { status: Status.undetermined };\n          }\n          return { status };\n        }\n      }\n      break;\n    case 'location':\n      {\n        const { navigator = {} } = global;\n        if (navigator.permissions) {\n          const { state } = await navigator.permissions.query({ name: 'geolocation' });\n          if (state !== Status.granted && state !== Status.denied) {\n            if (shouldAsk) {\n              return await askForLocationPermissionAsync();\n            }\n            return { status: Status.undetermined };\n          }\n\n          return { status: state };\n        } else if (shouldAsk) {\n          // TODO: Bacon: should this function as ask async when not in chrome?\n          return await askForLocationPermissionAsync();\n        }\n      }\n      break;\n    case 'audioRecording':\n      if (shouldAsk) {\n        return await askForMicrophonePermissionAsync();\n      } else {\n        //TODO: Bacon: Is it possible to get this permission?\n      }\n      break;\n    case 'camera':\n      if (shouldAsk) {\n        return await askForCameraPermissionAsync();\n      } else {\n        //TODO: Bacon: Is it possible to get this permission?\n      }\n      break;\n    default:\n      break;\n  }\n  return { status: Status.undetermined };\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoPermissions';\n  },\n  async getAsync(permissionsTypes: Array<string>): Promise<Array<SimpleResponse>> {\n    const permissions = [...new Set(permissionsTypes)];\n    let permissionResults: Array<SimpleResponse> = [];\n    for (let permission of permissions) {\n      const result = await getPermissionAsync(permission, false);\n      permissionResults.push(result);\n    }\n    return permissionResults;\n  },\n  async askAsync(permissionsTypes: Array<string>): Promise<Array<SimpleResponse>> {\n    const permissions = [...new Set(permissionsTypes)];\n    let permissionResults: Array<SimpleResponse> = [];\n    for (let permission of permissions) {\n      const result = await getPermissionAsync(permission, true);\n      permissionResults.push(result);\n    }\n    return permissionResults;\n  },\n};\n"]},"metadata":{},"sourceType":"module"}