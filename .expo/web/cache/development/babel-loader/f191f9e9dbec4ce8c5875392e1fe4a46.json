{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nexport function getDocumentAsync() {\n  return _getDocumentAsync.apply(this, arguments);\n}\n\nfunction _getDocumentAsync() {\n  _getDocumentAsync = _asyncToGenerator(function* () {\n    var {\n      type = '*/*'\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return yield NativeModules.ExponentDocumentPicker.getDocumentAsync({\n      type\n    });\n  });\n  return _getDocumentAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/DocumentPicker.ts"],"names":[],"mappings":";;;;;AAMA,gBAAsB,gBAAtB;AAAA;AAAA;;;wCAAO,aAAyE;AAAA,QAAzC;AAAE,MAAA,IAAI,GAAG;AAAT,KAAyC,uEAAF,EAAE;AAC9E,iBAAa,aAAa,CAAC,sBAAd,CAAqC,gBAArC,CAAsD;AAAE,MAAA;AAAF,KAAtD,CAAb;AACD,G","sourcesContent":["import { NativeModules } from 'react-native';\n\ntype GetDocumentOptions = {\n  type?: string,\n};\n\nexport async function getDocumentAsync({ type = '*/*' }: GetDocumentOptions = {}) {\n  return await NativeModules.ExponentDocumentPicker.getDocumentAsync({ type });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}