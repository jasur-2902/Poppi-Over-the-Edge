{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport invariant from 'invariant';\nimport { CameraType, ImageType } from \"./CameraModule.types\";\nimport * as Utils from \"./CameraUtils\";\nimport { FacingModeToCameraType, PictureSizes } from \"./constants\";\nimport * as CapabilityUtils from \"./CapabilityUtils\";\nexport { ImageType, CameraType };\n\nclass CameraModule {\n  constructor(videoElement) {\n    this.stream = null;\n    this.settings = null;\n\n    this.onCameraReady = () => {};\n\n    this.onMountError = () => {};\n\n    this._isStartingCamera = false;\n    this._autoFocus = 'continuous';\n    this._flashMode = 'off';\n    this._whiteBalance = 'continuous';\n    this._cameraType = CameraType.front;\n    this._zoom = 1;\n\n    this.getAvailablePictureSizes = function () {\n      var _ref = _asyncToGenerator(function* (ratio) {\n        return PictureSizes;\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.unmount = () => {\n      this.settings = null;\n      this.stream = null;\n    };\n\n    this.videoElement = videoElement;\n\n    if (this.videoElement) {\n      this.videoElement.addEventListener('loadedmetadata', () => {\n        this._syncTrackCapabilities();\n      });\n    }\n  }\n\n  get autoFocus() {\n    return this._autoFocus;\n  }\n\n  setAutoFocusAsync(value) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (value === _this.autoFocus) {\n        return;\n      }\n\n      _this._autoFocus = value;\n      yield _this._syncTrackCapabilities();\n    })();\n  }\n\n  get flashMode() {\n    return this._flashMode;\n  }\n\n  setFlashModeAsync(value) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (value === _this2.flashMode) {\n        return;\n      }\n\n      _this2._flashMode = value;\n      yield _this2._syncTrackCapabilities();\n    })();\n  }\n\n  get whiteBalance() {\n    return this._whiteBalance;\n  }\n\n  setWhiteBalanceAsync(value) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (value === _this3.whiteBalance) {\n        return;\n      }\n\n      _this3._whiteBalance = value;\n      yield _this3._syncTrackCapabilities();\n    })();\n  }\n\n  get type() {\n    return this._cameraType;\n  }\n\n  setTypeAsync(value) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (value === _this4._cameraType) {\n        return;\n      }\n\n      _this4._cameraType = value;\n      yield _this4.resumePreview();\n    })();\n  }\n\n  get zoom() {\n    return this._zoom;\n  }\n\n  setZoomAsync(value) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      if (value === _this5.zoom) {\n        return;\n      }\n\n      _this5._zoom = value;\n      yield _this5._syncTrackCapabilities();\n    })();\n  }\n\n  setPictureSize(value) {\n    if (value === this._pictureSize) {\n      return;\n    }\n\n    invariant(PictureSizes.includes(value), \"expo-camera: CameraModule.setPictureSize(): invalid size supplied \".concat(value, \", expected one of: \").concat(PictureSizes.join(', ')));\n    var [width, height] = value.split('x');\n    var aspectRatio = parseFloat(width) / parseFloat(height);\n    this._pictureSize = value;\n  }\n\n  onCapabilitiesReady(track) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      var capabilities = track.getCapabilities();\n      var constraints = {};\n\n      if (capabilities.zoom) {\n        var {\n          min,\n          max\n        } = capabilities.zoom;\n        constraints.zoom = Math.min(max, Math.max(min, _this6._zoom));\n      }\n\n      if (capabilities.focusMode) {\n        constraints.focusMode = CapabilityUtils.convertAutoFocusJSONToNative(_this6.autoFocus);\n      }\n\n      if (capabilities.torch) {\n        constraints.torch = CapabilityUtils.convertFlashModeJSONToNative(_this6.flashMode);\n      }\n\n      if (capabilities.whiteBalance) {\n        constraints.whiteBalance = _this6.whiteBalance;\n      }\n\n      yield track.applyConstraints({\n        advanced: [constraints]\n      });\n    })();\n  }\n\n  _syncTrackCapabilities() {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this7.stream) {\n        yield Promise.all(_this7.stream.getTracks().map(track => _this7.onCapabilitiesReady(track)));\n      }\n    })();\n  }\n\n  setVideoSource(stream) {\n    if ('srcObject' in this.videoElement) {\n      this.videoElement.srcObject = stream;\n    } else {\n      this.videoElement['src'] = window.URL.createObjectURL(stream);\n    }\n  }\n\n  setSettings(stream) {\n    this.settings = null;\n\n    if (stream && this.stream) {\n      this.settings = this.stream.getTracks()[0].getSettings();\n    }\n  }\n\n  setStream(stream) {\n    this.stream = stream;\n    this.setSettings(stream);\n    this.setVideoSource(stream);\n  }\n\n  getActualCameraType() {\n    if (this.settings) {\n      var {\n        facingMode = 'user'\n      } = this.settings;\n      return FacingModeToCameraType[facingMode];\n    }\n\n    return null;\n  }\n\n  ensureCameraIsRunningAsync() {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this8.stream) {\n        yield _this8.resumePreview();\n      }\n    })();\n  }\n\n  resumePreview() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this9._isStartingCamera) {\n        return null;\n      }\n\n      _this9._isStartingCamera = true;\n\n      try {\n        _this9.pausePreview();\n\n        var stream = yield Utils.getStreamDevice(_this9.type);\n\n        _this9.setStream(stream);\n\n        _this9._isStartingCamera = false;\n\n        _this9.onCameraReady();\n\n        return stream;\n      } catch (error) {\n        _this9._isStartingCamera = false;\n\n        _this9.onMountError({\n          nativeEvent: error\n        });\n      }\n\n      return null;\n    })();\n  }\n\n  takePicture(config) {\n    var base64 = Utils.captureImage(this.videoElement, config);\n    var capturedPicture = {\n      uri: base64,\n      base64,\n      width: 0,\n      height: 0\n    };\n\n    if (this.settings) {\n      var {\n        width = 0,\n        height = 0\n      } = this.settings;\n      capturedPicture.width = width;\n      capturedPicture.height = height;\n      capturedPicture.exif = this.settings;\n    }\n\n    if (config.onPictureSaved) {\n      config.onPictureSaved({\n        nativeEvent: {\n          data: capturedPicture,\n          id: config.id\n        }\n      });\n    }\n\n    return capturedPicture;\n  }\n\n  pausePreview() {\n    if (!this.stream) {\n      return;\n    }\n\n    this.stream.getTracks().forEach(track => track.stop());\n    this.setStream(null);\n  }\n\n}\n\nexport default CameraModule;","map":{"version":3,"sources":["../../src/CameraModule/CameraModule.ts"],"names":[],"mappings":"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","sourcesContent":["import invariant from 'invariant';\n\nimport { PictureOptions } from '../Camera.types';\nimport { CameraType, CapturedPicture, CaptureOptions, ImageType } from './CameraModule.types';\nimport * as Utils from './CameraUtils';\nimport { FacingModeToCameraType, PictureSizes } from './constants';\nimport * as CapabilityUtils from './CapabilityUtils';\n\nexport { ImageType, CameraType, CaptureOptions };\n\n/*\n * TODO: Bacon: Add more props for Android\n *\n * aspectRatio: { min (0.00033), max (4032) }\n * colorTemperature: MediaSettingsRange  (max: 7000, min: 2850, step: 50)\n * exposureCompensation: MediaSettingsRange (max: 2, min: -2, step: 0.1666666716337204)\n * exposureMode: 'continuous' | 'manual'\n * frameRate: { min: (1), max: (60) }\n * iso: MediaSettingsRange (max: 3200, min: 50, step: 1)\n * width: { min: 1, max}\n * height: { min: 1, max}\n */\n\ntype OnCameraReadyListener = () => void;\ntype OnMountErrorListener = ({ nativeEvent: Error }) => void;\n\nclass CameraModule {\n  videoElement: HTMLVideoElement;\n  stream: MediaStream | null = null;\n  settings: MediaTrackSettings | null = null;\n  onCameraReady: OnCameraReadyListener = () => {};\n  onMountError: OnMountErrorListener = () => {};\n  _pictureSize?: string;\n  _isStartingCamera = false;\n\n  _autoFocus: string = 'continuous';\n  get autoFocus(): string {\n    return this._autoFocus;\n  }\n  async setAutoFocusAsync(value: string): Promise<void> {\n    if (value === this.autoFocus) {\n      return;\n    }\n    this._autoFocus = value;\n    await this._syncTrackCapabilities();\n  }\n\n  _flashMode: string = 'off';\n  get flashMode(): string {\n    return this._flashMode;\n  }\n  async setFlashModeAsync(value: string): Promise<void> {\n    if (value === this.flashMode) {\n      return;\n    }\n    this._flashMode = value;\n    await this._syncTrackCapabilities();\n  }\n\n  _whiteBalance: string = 'continuous';\n\n  get whiteBalance(): string {\n    return this._whiteBalance;\n  }\n\n  async setWhiteBalanceAsync(value: string): Promise<void> {\n    if (value === this.whiteBalance) {\n      return;\n    }\n    this._whiteBalance = value;\n    await this._syncTrackCapabilities();\n  }\n\n  _cameraType: CameraType = CameraType.front;\n\n  get type(): CameraType {\n    return this._cameraType;\n  }\n\n  async setTypeAsync(value: CameraType) {\n    if (value === this._cameraType) {\n      return;\n    }\n    this._cameraType = value;\n    await this.resumePreview();\n  }\n\n  _zoom: number = 1;\n\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  async setZoomAsync(value: number): Promise<void> {\n    if (value === this.zoom) {\n      return;\n    }\n    //TODO: Bacon: IMP on non-android devices\n    this._zoom = value;\n    await this._syncTrackCapabilities();\n  }\n\n  setPictureSize(value: string) {\n    if (value === this._pictureSize) {\n      return;\n    }\n    invariant(\n      PictureSizes.includes(value),\n      `expo-camera: CameraModule.setPictureSize(): invalid size supplied ${value}, expected one of: ${PictureSizes.join(\n        ', '\n      )}`\n    );\n\n    const [width, height] = value.split('x');\n    //TODO: Bacon: IMP\n    const aspectRatio = parseFloat(width) / parseFloat(height);\n\n    this._pictureSize = value;\n  }\n\n  constructor(videoElement: HTMLVideoElement) {\n    this.videoElement = videoElement;\n    if (this.videoElement) {\n      this.videoElement.addEventListener('loadedmetadata', () => {\n        this._syncTrackCapabilities();\n      });\n    }\n  }\n\n  async onCapabilitiesReady(track: MediaStreamTrack): Promise<void> {\n    const capabilities = track.getCapabilities() as any;\n\n    // Create an empty object because if you set a constraint that isn't available an error will be thrown.\n    const constraints: {\n      zoom?: number;\n      torch?: boolean;\n      whiteBalance?: string;\n      focusMode?: string;\n    } = {};\n\n    if (capabilities.zoom) {\n      // TODO: Bacon: We should have some async method for getting the (min, max, step) externally\n      const { min, max } = capabilities.zoom;\n      constraints.zoom = Math.min(max, Math.max(min, this._zoom));\n    }\n    if (capabilities.focusMode) {\n      constraints.focusMode = CapabilityUtils.convertAutoFocusJSONToNative(this.autoFocus);\n    }\n    if (capabilities.torch) {\n      constraints.torch = CapabilityUtils.convertFlashModeJSONToNative(this.flashMode);\n    }\n    if (capabilities.whiteBalance) {\n      constraints.whiteBalance = this.whiteBalance;\n    }\n\n    await track.applyConstraints({ advanced: [constraints] as any });\n  }\n\n  async _syncTrackCapabilities(): Promise<void> {\n    if (this.stream) {\n      await Promise.all(this.stream.getTracks().map(track => this.onCapabilitiesReady(track)));\n    }\n  }\n\n  setVideoSource(stream: MediaStream | MediaSource | Blob | null): void {\n    if ('srcObject' in this.videoElement) {\n      this.videoElement.srcObject = stream;\n    } else {\n      // TODO: Bacon: Check if needed\n      (this.videoElement['src'] as any) = window.URL.createObjectURL(stream);\n    }\n  }\n\n  setSettings(stream: MediaStream | null): void {\n    this.settings = null;\n    if (stream && this.stream) {\n      this.settings = this.stream.getTracks()[0].getSettings();\n    }\n  }\n\n  setStream(stream: MediaStream | null): void {\n    this.stream = stream;\n    this.setSettings(stream);\n    this.setVideoSource(stream);\n  }\n\n  getActualCameraType(): CameraType | null {\n    if (this.settings) {\n      // On desktop no value will be returned, in this case we should assume the cameraType is 'front'\n      const { facingMode = 'user' } = this.settings;\n      return FacingModeToCameraType[facingMode];\n    }\n    return null;\n  }\n\n  async ensureCameraIsRunningAsync(): Promise<void> {\n    if (!this.stream) {\n      await this.resumePreview();\n    }\n  }\n\n  async resumePreview(): Promise<MediaStream | null> {\n    if (this._isStartingCamera) {\n      return null;\n    }\n    this._isStartingCamera = true;\n    try {\n      this.pausePreview();\n      const stream = await Utils.getStreamDevice(this.type);\n      this.setStream(stream);\n      this._isStartingCamera = false;\n      this.onCameraReady();\n      return stream;\n    } catch (error) {\n      this._isStartingCamera = false;\n      this.onMountError({ nativeEvent: error });\n    }\n    return null;\n  }\n\n  takePicture(config: PictureOptions): CapturedPicture {\n    const base64 = Utils.captureImage(this.videoElement, config);\n\n    const capturedPicture: CapturedPicture = {\n      uri: base64,\n      base64,\n      width: 0,\n      height: 0,\n    };\n\n    if (this.settings) {\n      const { width = 0, height = 0 } = this.settings;\n      capturedPicture.width = width;\n      capturedPicture.height = height;\n      // TODO: Bacon: verify/enforce exif shape.\n      capturedPicture.exif = this.settings;\n    }\n\n    if (config.onPictureSaved) {\n      config.onPictureSaved({ nativeEvent: { data: capturedPicture, id: config.id } });\n    }\n    return capturedPicture;\n  }\n\n  pausePreview(): void {\n    if (!this.stream) {\n      return;\n    }\n    this.stream.getTracks().forEach(track => track.stop());\n    this.setStream(null);\n  }\n\n  // TODO: Bacon: we don't even use ratio in native...\n  getAvailablePictureSizes = async (ratio: string): Promise<string[]> => {\n    return PictureSizes;\n  };\n\n  unmount = () => {\n    this.settings = null;\n    this.stream = null;\n  };\n}\n\nexport default CameraModule;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}