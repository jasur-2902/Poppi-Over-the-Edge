{"ast":null,"code":"import { EventEmitter } from 'fbemitter';\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\n\nvar _emitter;\n\nfunction _getEmitter() {\n  if (!_emitter) {\n    _emitter = new EventEmitter();\n    DeviceEventEmitter.addListener('Exponent.nativeUpdatesEvent', _emitNewVersionAvailable);\n  }\n\n  return _emitter;\n}\n\nfunction _emitNewVersionAvailable(newVersionEvent) {\n  if (typeof newVersionEvent === 'string') {\n    newVersionEvent = JSON.parse(newVersionEvent);\n  }\n\n  if (newVersionEvent.type === 'downloadFinished') {\n    if (newVersionEvent.manifestString && typeof newVersionEvent.manifestString === 'string') {\n      newVersionEvent.manifest = JSON.parse(newVersionEvent.manifestString);\n      delete newVersionEvent.manifestString;\n    }\n\n    delete newVersionEvent.type;\n\n    if (!_emitter) {\n      throw new Error(\"EventEmitter must be initialized to use from its listener\");\n    }\n\n    _emitter.emit('newVersionAvailable', newVersionEvent);\n  }\n}\n\nexport function addNewVersionListenerExperimental(listener) {\n  console.warn('Util.addNewVersionListenerExperimental is deprecated and will be removed in SDK 31, use Updates.addListener instead');\n\n  var emitter = _getEmitter();\n\n  return emitter.addListener('newVersionAvailable', listener);\n}","map":{"version":3,"sources":["../src/Util.ts"],"names":[],"mappings":"AAAA,SAAS,YAAT,QAAgD,WAAhD;;;AAGA,IAAI,QAAJ;;AAEA,SAAS,WAAT,GAAoB;AAClB,MAAI,CAAC,QAAL,EAAe;AACb,IAAA,QAAQ,GAAG,IAAI,YAAJ,EAAX;AACA,IAAA,kBAAkB,CAAC,WAAnB,CAA+B,6BAA/B,EAA8D,wBAA9D;AACD;;AACD,SAAO,QAAP;AACD;;AAED,SAAS,wBAAT,CAAkC,eAAlC,EAAiD;AAC/C,MAAI,OAAO,eAAP,KAA2B,QAA/B,EAAyC;AACvC,IAAA,eAAe,GAAG,IAAI,CAAC,KAAL,CAAW,eAAX,CAAlB;AACD;;AAGD,MAAI,eAAe,CAAC,IAAhB,KAAyB,kBAA7B,EAAiD;AAC/C,QAAI,eAAe,CAAC,cAAhB,IAAkC,OAAO,eAAe,CAAC,cAAvB,KAA0C,QAAhF,EAA0F;AACxF,MAAA,eAAe,CAAC,QAAhB,GAA2B,IAAI,CAAC,KAAL,CAAW,eAAe,CAAC,cAA3B,CAA3B;AACA,aAAO,eAAe,CAAC,cAAvB;AACD;;AACD,WAAO,eAAe,CAAC,IAAvB;;AAEA,QAAI,CAAC,QAAL,EAAe;AACb,YAAM,IAAI,KAAJ,6DAAN;AACD;;AACD,IAAA,QAAQ,CAAC,IAAT,CAAc,qBAAd,EAAqC,eAArC;AACD;AACF;;AAED,OAAM,SAAU,iCAAV,CAA4C,QAA5C,EAA8D;AAClE,EAAA,OAAO,CAAC,IAAR,CACE,qHADF;;AAGA,MAAI,OAAO,GAAG,WAAW,EAAzB;;AACA,SAAO,OAAO,CAAC,WAAR,CAAoB,qBAApB,EAA2C,QAA3C,CAAP;AACD","sourcesContent":["import { EventEmitter, EventSubscription } from 'fbemitter';\nimport { DeviceEventEmitter } from 'react-native';\n\nlet _emitter: EventEmitter | null;\n\nfunction _getEmitter(): EventEmitter {\n  if (!_emitter) {\n    _emitter = new EventEmitter();\n    DeviceEventEmitter.addListener('Exponent.nativeUpdatesEvent', _emitNewVersionAvailable);\n  }\n  return _emitter;\n}\n\nfunction _emitNewVersionAvailable(newVersionEvent): void {\n  if (typeof newVersionEvent === 'string') {\n    newVersionEvent = JSON.parse(newVersionEvent);\n  }\n\n  // events with type === 'downloadFinished' match the events that were previously emitted\n  if (newVersionEvent.type === 'downloadFinished') {\n    if (newVersionEvent.manifestString && typeof newVersionEvent.manifestString === 'string') {\n      newVersionEvent.manifest = JSON.parse(newVersionEvent.manifestString);\n      delete newVersionEvent.manifestString;\n    }\n    delete newVersionEvent.type;\n\n    if (!_emitter) {\n      throw new Error(`EventEmitter must be initialized to use from its listener`);\n    }\n    _emitter.emit('newVersionAvailable', newVersionEvent);\n  }\n}\n\nexport function addNewVersionListenerExperimental(listener: Function): EventSubscription {\n  console.warn(\n    'Util.addNewVersionListenerExperimental is deprecated and will be removed in SDK 31, use Updates.addListener instead'\n  );\n  let emitter = _getEmitter();\n  return emitter.addListener('newVersionAvailable', listener);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}