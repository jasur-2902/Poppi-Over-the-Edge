{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-elements\\\\src\\\\buttons\\\\Button.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Color from 'color';\nimport { withTheme } from \"../config\";\nimport { renderNode, nodeType, conditionalStyle, color } from \"../helpers\";\nimport Icon from \"../icons/Icon\";\n\nvar defaultLoadingProps = (type, theme) => ({\n  color: type === 'solid' ? 'white' : theme.colors.primary,\n  size: 'small'\n});\n\nclass Button extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleOnPress = () => {\n      var {\n        loading,\n        onPress\n      } = this.props;\n\n      if (!loading) {\n        onPress();\n      }\n    };\n  }\n\n  componentDidMount() {\n    var {\n      linearGradientProps,\n      ViewComponent\n    } = this.props;\n\n    if (linearGradientProps && !global.Expo && !ViewComponent) {\n      console.error(\"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\");\n    }\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      TouchableComponent,\n      containerStyle,\n      onPress,\n      buttonStyle,\n      type,\n      loading,\n      loadingStyle,\n      loadingProps: passedLoadingProps,\n      title,\n      titleProps,\n      titleStyle: passedTitleStyle,\n      icon,\n      iconContainerStyle,\n      iconRight,\n      disabled,\n      disabledStyle,\n      disabledTitleStyle,\n      raised,\n      linearGradientProps,\n      ViewComponent = !disabled && linearGradientProps && global.Expo ? global.Expo.LinearGradient : View,\n      theme\n    } = _this$props,\n        attributes = _objectWithoutProperties(_this$props, [\"TouchableComponent\", \"containerStyle\", \"onPress\", \"buttonStyle\", \"type\", \"loading\", \"loadingStyle\", \"loadingProps\", \"title\", \"titleProps\", \"titleStyle\", \"icon\", \"iconContainerStyle\", \"iconRight\", \"disabled\", \"disabledStyle\", \"disabledTitleStyle\", \"raised\", \"linearGradientProps\", \"ViewComponent\", \"theme\"]);\n\n    var titleStyle = StyleSheet.flatten([styles.title(type, theme), passedTitleStyle, disabled && styles.disabledTitle(theme), disabled && disabledTitleStyle]);\n    var background = Platform.OS === 'android' && Platform.Version >= 21 ? TouchableNativeFeedback.Ripple(Color(titleStyle.color).alpha(0.32).rgb().string(), false) : undefined;\n\n    var loadingProps = _objectSpread(_objectSpread({}, defaultLoadingProps(type, theme)), passedLoadingProps);\n\n    var accessibilityState = {\n      disabled: !!disabled,\n      busy: !!loading\n    };\n    return React.createElement(View, {\n      style: StyleSheet.flatten([styles.container, {\n        borderRadius: buttonStyle.borderRadius || styles.container.borderRadius\n      }, containerStyle, raised && !disabled && styles.raised(type)]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, React.createElement(TouchableComponent, _extends({\n      onPress: this.handleOnPress,\n      delayPressIn: 0,\n      activeOpacity: 0.3,\n      accessibilityRole: \"button\",\n      accessibilityState: accessibilityState,\n      disabled: disabled,\n      background: background\n    }, attributes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }), React.createElement(ViewComponent, _extends({}, linearGradientProps, {\n      style: StyleSheet.flatten([styles.button(type, theme), buttonStyle, disabled && styles.disabled(type, theme), disabled && disabledStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }), loading && React.createElement(ActivityIndicator, _extends({\n      style: StyleSheet.flatten([styles.loading, loadingStyle]),\n      color: loadingProps.color,\n      size: loadingProps.size\n    }, loadingProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    })), !loading && icon && !iconRight && renderNode(Icon, icon, {\n      containerStyle: StyleSheet.flatten([styles.iconContainer, iconContainerStyle])\n    }), !loading && !!title && React.createElement(Text, _extends({\n      style: titleStyle\n    }, titleProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }), title), !loading && icon && iconRight && renderNode(Icon, icon, {\n      containerStyle: StyleSheet.flatten([styles.iconContainer, iconContainerStyle])\n    }))));\n  }\n\n}\n\nButton.propTypes = {\n  title: PropTypes.string,\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  titleProps: PropTypes.object,\n  buttonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  type: PropTypes.oneOf(['solid', 'clear', 'outline']),\n  loading: PropTypes.bool,\n  loadingStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  loadingProps: PropTypes.object,\n  onPress: PropTypes.func,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  icon: nodeType,\n  iconContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  iconRight: PropTypes.bool,\n  linearGradientProps: PropTypes.object,\n  TouchableComponent: PropTypes.elementType,\n  ViewComponent: PropTypes.elementType,\n  disabled: PropTypes.bool,\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledTitleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  raised: PropTypes.bool,\n  theme: PropTypes.object\n};\nButton.defaultProps = {\n  title: '',\n  iconRight: false,\n  TouchableComponent: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity\n  }),\n  onPress: () => console.log('Please attach a method to this component'),\n  type: 'solid',\n  buttonStyle: {\n    borderRadius: 3\n  },\n  disabled: false,\n  raised: false,\n  loading: false\n};\nvar styles = {\n  button: (type, theme) => ({\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3,\n    backgroundColor: type === 'solid' ? theme.colors.primary : 'transparent',\n    padding: 8,\n    borderWidth: type === 'outline' ? StyleSheet.hairlineWidth : 0,\n    borderColor: theme.colors.primary\n  }),\n  container: {\n    overflow: 'hidden',\n    borderRadius: 3\n  },\n  disabled: (type, theme) => _objectSpread(_objectSpread({}, conditionalStyle(type === 'solid', {\n    backgroundColor: theme.colors.disabled\n  })), conditionalStyle(type === 'outline', {\n    borderColor: color(theme.colors.disabled).darken(0.3)\n  })),\n  disabledTitle: theme => ({\n    color: color(theme.colors.disabled).darken(0.3)\n  }),\n  title: (type, theme) => _objectSpread({\n    color: type === 'solid' ? 'white' : theme.colors.primary,\n    fontSize: 16,\n    textAlign: 'center',\n    paddingTop: 2,\n    paddingBottom: 1\n  }, Platform.select({\n    android: {\n      fontFamily: 'sans-serif-medium'\n    },\n    default: {\n      fontSize: 18\n    }\n  })),\n  iconContainer: {\n    marginHorizontal: 5\n  },\n  raised: type => type !== 'clear' && _objectSpread({\n    backgroundColor: '#fff'\n  }, Platform.select({\n    android: {\n      elevation: 4\n    },\n    default: {\n      shadowColor: 'rgba(0,0,0, .4)',\n      shadowOffset: {\n        height: 1,\n        width: 1\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1\n    }\n  })),\n  loading: {\n    marginVertical: 2\n  }\n};\nexport { Button };\nexport default withTheme(Button, 'Button');","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-elements/src/buttons/Button.js"],"names":["PropTypes","React","Component","Color","withTheme","renderNode","nodeType","conditionalStyle","color","Icon","defaultLoadingProps","type","theme","colors","primary","size","Button","handleOnPress","loading","onPress","props","componentDidMount","linearGradientProps","ViewComponent","global","Expo","console","error","render","TouchableComponent","containerStyle","buttonStyle","loadingStyle","loadingProps","passedLoadingProps","title","titleProps","titleStyle","passedTitleStyle","icon","iconContainerStyle","iconRight","disabled","disabledStyle","disabledTitleStyle","raised","LinearGradient","View","attributes","StyleSheet","flatten","styles","disabledTitle","background","Platform","OS","Version","TouchableNativeFeedback","Ripple","alpha","rgb","string","undefined","accessibilityState","busy","container","borderRadius","button","iconContainer","propTypes","oneOfType","object","array","oneOf","bool","func","elementType","defaultProps","select","android","default","TouchableOpacity","log","flexDirection","justifyContent","alignItems","backgroundColor","padding","borderWidth","hairlineWidth","borderColor","overflow","darken","fontSize","textAlign","paddingTop","paddingBottom","fontFamily","marginHorizontal","elevation","shadowColor","shadowOffset","height","width","shadowOpacity","shadowRadius","marginVertical"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n  View,\n  Text,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  ActivityIndicator,\n  Platform,\n  StyleSheet,\n} from 'react-native';\nimport Color from 'color';\n\nimport { withTheme } from '../config';\nimport { renderNode, nodeType, conditionalStyle, color } from '../helpers';\nimport Icon from '../icons/Icon';\n\nconst defaultLoadingProps = (type, theme) => ({\n  color: type === 'solid' ? 'white' : theme.colors.primary,\n  size: 'small',\n});\n\nclass Button extends Component {\n  componentDidMount() {\n    const { linearGradientProps, ViewComponent } = this.props;\n    if (linearGradientProps && !global.Expo && !ViewComponent) {\n      console.error(\n        \"You need to pass a ViewComponent to use linearGradientProps !\\nExample: ViewComponent={require('react-native-linear-gradient')}\"\n      );\n    }\n  }\n\n  handleOnPress = () => {\n    const { loading, onPress } = this.props;\n\n    if (!loading) {\n      onPress();\n    }\n  };\n\n  render() {\n    const {\n      TouchableComponent,\n      containerStyle,\n      onPress,\n      buttonStyle,\n      type,\n      loading,\n      loadingStyle,\n      loadingProps: passedLoadingProps,\n      title,\n      titleProps,\n      titleStyle: passedTitleStyle,\n      icon,\n      iconContainerStyle,\n      iconRight,\n      disabled,\n      disabledStyle,\n      disabledTitleStyle,\n      raised,\n      linearGradientProps,\n      ViewComponent = !disabled && linearGradientProps && global.Expo\n        ? global.Expo.LinearGradient\n        : View,\n      theme,\n      ...attributes\n    } = this.props;\n\n    const titleStyle = StyleSheet.flatten([\n      styles.title(type, theme),\n      passedTitleStyle,\n      disabled && styles.disabledTitle(theme),\n      disabled && disabledTitleStyle,\n    ]);\n\n    const background =\n      Platform.OS === 'android' && Platform.Version >= 21\n        ? TouchableNativeFeedback.Ripple(\n            Color(titleStyle.color)\n              .alpha(0.32)\n              .rgb()\n              .string(),\n            false\n          )\n        : undefined;\n\n    const loadingProps = {\n      ...defaultLoadingProps(type, theme),\n      ...passedLoadingProps,\n    };\n\n    const accessibilityState = {\n      disabled: !!disabled,\n      busy: !!loading,\n    };\n\n    return (\n      <View\n        style={StyleSheet.flatten([\n          styles.container,\n          {\n            borderRadius:\n              buttonStyle.borderRadius || styles.container.borderRadius,\n          },\n          containerStyle,\n          raised && !disabled && styles.raised(type),\n        ])}\n      >\n        <TouchableComponent\n          onPress={this.handleOnPress}\n          delayPressIn={0}\n          activeOpacity={0.3}\n          accessibilityRole=\"button\"\n          accessibilityState={accessibilityState}\n          disabled={disabled}\n          background={background}\n          {...attributes}\n        >\n          <ViewComponent\n            {...linearGradientProps}\n            style={StyleSheet.flatten([\n              styles.button(type, theme),\n              buttonStyle,\n              disabled && styles.disabled(type, theme),\n              disabled && disabledStyle,\n            ])}\n          >\n            {loading && (\n              <ActivityIndicator\n                style={StyleSheet.flatten([styles.loading, loadingStyle])}\n                color={loadingProps.color}\n                size={loadingProps.size}\n                {...loadingProps}\n              />\n            )}\n\n            {!loading &&\n              icon &&\n              !iconRight &&\n              renderNode(Icon, icon, {\n                containerStyle: StyleSheet.flatten([\n                  styles.iconContainer,\n                  iconContainerStyle,\n                ]),\n              })}\n\n            {!loading && !!title && (\n              <Text style={titleStyle} {...titleProps}>\n                {title}\n              </Text>\n            )}\n\n            {!loading &&\n              icon &&\n              iconRight &&\n              renderNode(Icon, icon, {\n                containerStyle: StyleSheet.flatten([\n                  styles.iconContainer,\n                  iconContainerStyle,\n                ]),\n              })}\n          </ViewComponent>\n        </TouchableComponent>\n      </View>\n    );\n  }\n}\n\nButton.propTypes = {\n  title: PropTypes.string,\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  titleProps: PropTypes.object,\n  buttonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  type: PropTypes.oneOf(['solid', 'clear', 'outline']),\n  loading: PropTypes.bool,\n  loadingStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  loadingProps: PropTypes.object,\n  onPress: PropTypes.func,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  icon: nodeType,\n  iconContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  iconRight: PropTypes.bool,\n  linearGradientProps: PropTypes.object,\n  TouchableComponent: PropTypes.elementType,\n  ViewComponent: PropTypes.elementType,\n  disabled: PropTypes.bool,\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledTitleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  raised: PropTypes.bool,\n  theme: PropTypes.object,\n};\n\nButton.defaultProps = {\n  title: '',\n  iconRight: false,\n  TouchableComponent: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity,\n  }),\n  onPress: () => console.log('Please attach a method to this component'),\n  type: 'solid',\n  buttonStyle: {\n    borderRadius: 3,\n  },\n  disabled: false,\n  raised: false,\n  loading: false,\n};\n\nconst styles = {\n  button: (type, theme) => ({\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3,\n    backgroundColor: type === 'solid' ? theme.colors.primary : 'transparent',\n    padding: 8,\n    borderWidth: type === 'outline' ? StyleSheet.hairlineWidth : 0,\n    borderColor: theme.colors.primary,\n  }),\n  container: {\n    overflow: 'hidden',\n    borderRadius: 3,\n  },\n  disabled: (type, theme) => ({\n    ...conditionalStyle(type === 'solid', {\n      backgroundColor: theme.colors.disabled,\n    }),\n    ...conditionalStyle(type === 'outline', {\n      borderColor: color(theme.colors.disabled).darken(0.3),\n    }),\n  }),\n  disabledTitle: theme => ({\n    color: color(theme.colors.disabled).darken(0.3),\n  }),\n  title: (type, theme) => ({\n    color: type === 'solid' ? 'white' : theme.colors.primary,\n    fontSize: 16,\n    textAlign: 'center',\n    paddingTop: 2,\n    paddingBottom: 1,\n    ...Platform.select({\n      android: {\n        fontFamily: 'sans-serif-medium',\n      },\n      default: {\n        fontSize: 18,\n      },\n    }),\n  }),\n  iconContainer: {\n    marginHorizontal: 5,\n  },\n  raised: type =>\n    type !== 'clear' && {\n      backgroundColor: '#fff',\n      ...Platform.select({\n        android: {\n          elevation: 4,\n        },\n        default: {\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 1,\n        },\n      }),\n    },\n  loading: {\n    marginVertical: 2,\n  },\n};\n\nexport { Button };\nexport default withTheme(Button, 'Button');\n"]},"metadata":{},"sourceType":"module"}