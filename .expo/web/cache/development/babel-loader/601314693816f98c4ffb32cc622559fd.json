{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport { UnavailabilityError } from 'expo-errors';\nimport ExponentSpeech from \"./ExponentSpeech\";\nvar SpeechEventEmitter = new NativeEventEmitter(ExponentSpeech);\nvar _CALLBACKS = {};\nvar _nextCallbackId = 1;\nvar _didSetListeners = false;\n\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\n\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', (_ref) => {\n    var {\n      id\n    } = _ref;\n    var options = _CALLBACKS[id];\n\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', (_ref2) => {\n    var {\n      id\n    } = _ref2;\n    var options = _CALLBACKS[id];\n\n    if (options && options.onDone) {\n      options.onDone();\n    }\n\n    delete _CALLBACKS[id];\n\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', (_ref3) => {\n    var {\n      id\n    } = _ref3;\n    var options = _CALLBACKS[id];\n\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n\n    delete _CALLBACKS[id];\n\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', (_ref4) => {\n    var {\n      id,\n      error\n    } = _ref4;\n    var options = _CALLBACKS[id];\n\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n\n    delete _CALLBACKS[id];\n\n    _unregisterListenersIfNeeded();\n  });\n}\n\nexport function speak(text) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n\n  _registerListenersIfNeeded();\n\n  ExponentSpeech.speak(String(id), text, options);\n}\nexport function isSpeakingAsync() {\n  return _isSpeakingAsync.apply(this, arguments);\n}\n\nfunction _isSpeakingAsync() {\n  _isSpeakingAsync = _asyncToGenerator(function* () {\n    return ExponentSpeech.isSpeaking();\n  });\n  return _isSpeakingAsync.apply(this, arguments);\n}\n\nexport function stop() {\n  return ExponentSpeech.stop();\n}\nexport function pause() {\n  if (!ExponentSpeech.pause) {\n    throw new UnavailabilityError('Speech', 'pause');\n  }\n\n  return ExponentSpeech.pause();\n}\nexport function resume() {\n  if (!ExponentSpeech.resume) {\n    throw new UnavailabilityError('Speech', 'resume');\n  }\n\n  return ExponentSpeech.resume();\n}\n\nfunction setSpeakingListener(eventName, callback) {\n  if (SpeechEventEmitter.listeners(eventName).length > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n\n  SpeechEventEmitter.addListener(eventName, callback);\n}\n\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}","map":{"version":3,"sources":["../../src/Speech/Speech.ts"],"names":[],"mappings":"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","sourcesContent":["import { NativeEventEmitter, Platform } from 'react-native';\nimport { UnavailabilityError } from 'expo-errors';\nimport ExponentSpeech from './ExponentSpeech';\n\nimport { SpeechOptions } from './Speech.types';\n\nconst SpeechEventEmitter = new NativeEventEmitter(ExponentSpeech);\n\nconst _CALLBACKS = {};\nlet _nextCallbackId = 1;\nlet _didSetListeners = false;\n\nfunction _unregisterListenersIfNeeded() {\n  if (Object.keys(_CALLBACKS).length === 0) {\n    removeSpeakingListener('Exponent.speakingStarted');\n    removeSpeakingListener('Exponent.speakingDone');\n    removeSpeakingListener('Exponent.speakingStopped');\n    removeSpeakingListener('Exponent.speakingError');\n    _didSetListeners = false;\n  }\n}\n\nfunction _registerListenersIfNeeded() {\n  if (_didSetListeners) return;\n  _didSetListeners = true;\n  setSpeakingListener('Exponent.speakingStarted', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStart) {\n      options.onStart();\n    }\n  });\n  setSpeakingListener('Exponent.speakingDone', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onDone) {\n      options.onDone();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingStopped', ({ id }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onStopped) {\n      options.onStopped();\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n  setSpeakingListener('Exponent.speakingError', ({ id, error }) => {\n    const options = _CALLBACKS[id];\n    if (options && options.onError) {\n      options.onError(new Error(error));\n    }\n    delete _CALLBACKS[id];\n    _unregisterListenersIfNeeded();\n  });\n}\n\nexport function speak(text: string, options: SpeechOptions = {}) {\n  const id = _nextCallbackId++;\n  _CALLBACKS[id] = options;\n  _registerListenersIfNeeded();\n  ExponentSpeech.speak(String(id), text, options);\n}\n\nexport async function isSpeakingAsync(): Promise<boolean> {\n  return ExponentSpeech.isSpeaking();\n}\n\nexport function stop(): Promise<void> {\n  return ExponentSpeech.stop();\n}\n\nexport function pause(): Promise<void> {\n  if (!ExponentSpeech.pause) {\n    throw new UnavailabilityError('Speech', 'pause');\n  }\n\n  return ExponentSpeech.pause();\n}\n\nexport function resume(): Promise<void> {\n  if (!ExponentSpeech.resume) {\n    throw new UnavailabilityError('Speech', 'resume');\n  }\n\n  return ExponentSpeech.resume();\n}\n\nfunction setSpeakingListener(eventName, callback) {\n  if (SpeechEventEmitter.listeners(eventName).length > 0) {\n    SpeechEventEmitter.removeAllListeners(eventName);\n  }\n  SpeechEventEmitter.addListener(eventName, callback);\n}\n\nfunction removeSpeakingListener(eventName) {\n  SpeechEventEmitter.removeAllListeners(eventName);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}