{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-ratings\\\\src\\\\SwipeRating.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport times from 'lodash/times';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\n\nvar STAR_IMAGE = require(\"./images/star.png\");\n\nvar HEART_IMAGE = require(\"./images/heart.png\");\n\nvar ROCKET_IMAGE = require(\"./images/rocket.png\");\n\nvar BELL_IMAGE = require(\"./images/bell.png\");\n\nvar TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\nexport default class SwipeRating extends Component {\n  constructor(props) {\n    super(props);\n    var {\n      onStartRating,\n      onFinishRating,\n      fractions\n    } = this.props;\n    var position = new Animated.ValueXY();\n    var panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        if (typeof onStartRating === 'function') {\n          onStartRating();\n        }\n      },\n      onPanResponderMove: (event, gesture) => {\n        var newPosition = new Animated.ValueXY();\n        newPosition.setValue({\n          x: gesture.dx,\n          y: 0\n        });\n\n        if (this.state.isComponentMounted) {\n          this.setState({\n            position: newPosition,\n            value: gesture.dx\n          });\n        }\n      },\n      onPanResponderRelease: event => {\n        var rating = this.getCurrentRating(this.state.value);\n\n        if (rating >= this.props.minValue) {\n          if (!fractions) {\n            this.setCurrentRating(rating);\n          }\n\n          if (typeof onFinishRating === 'function') onFinishRating(rating);\n        }\n      }\n    });\n    this.state = {\n      panResponder,\n      position,\n      display: false,\n      isComponentMounted: false\n    };\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        var _STAR_IMAGE = yield require(\"./images/star.png\");\n\n        var _HEART_IMAGE = yield require(\"./images/heart.png\");\n\n        var _ROCKET_IMAGE = yield require(\"./images/rocket.png\");\n\n        var _BELL_IMAGE = yield require(\"./images/bell.png\");\n\n        _this.setState({\n          display: true,\n          isComponentMounted: true\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      _this.setCurrentRating(_this.props.startingValue);\n    })();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.startingValue !== prevProps.startingValue) {\n      this.setCurrentRating(this.props.startingValue);\n    }\n  }\n\n  getPrimaryViewStyle() {\n    var {\n      position\n    } = this.state;\n    var {\n      imageSize,\n      ratingCount,\n      type\n    } = this.props;\n    var color = TYPES[type].color;\n    var width = position.x.interpolate({\n      inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n      outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n      extrapolate: 'clamp'\n    }, {\n      useNativeDriver: true\n    });\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  getSecondaryViewStyle() {\n    var {\n      position\n    } = this.state;\n    var {\n      imageSize,\n      ratingCount,\n      type\n    } = this.props;\n    var backgroundColor = TYPES[type].backgroundColor;\n    var width = position.x.interpolate({\n      inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n      outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n      extrapolate: 'clamp'\n    }, {\n      useNativeDriver: true\n    });\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  renderRatings() {\n    var {\n      imageSize,\n      ratingCount,\n      type,\n      tintColor\n    } = this.props;\n    var source = TYPES[type].source;\n    return times(ratingCount, index => React.createElement(View, {\n      key: index,\n      style: styles.starContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      source: source,\n      style: {\n        width: imageSize,\n        height: imageSize,\n        tintColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  getCurrentRating(value) {\n    var {\n      fractions,\n      imageSize,\n      ratingCount\n    } = this.props;\n    var startingValue = ratingCount / 2;\n    var currentRating = this.props.minValue ? this.props.minValue : 0;\n\n    if (value > ratingCount * imageSize / 2) {\n      currentRating = ratingCount;\n    } else if (value < -ratingCount * imageSize / 2) {\n      currentRating = this.props.minValue ? this.props.minValue : 0;\n    } else if (value <= imageSize || value > imageSize) {\n      currentRating = startingValue + value / imageSize;\n      currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n    } else {\n      currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n    }\n\n    return currentRating;\n  }\n\n  setCurrentRating(rating) {\n    var {\n      imageSize,\n      ratingCount\n    } = this.props;\n    var initialRating = ratingCount / 2;\n    var value = null;\n\n    if (rating > ratingCount) {\n      value = ratingCount * imageSize / 2;\n    } else if (rating < 0) {\n      value = -ratingCount * imageSize / 2;\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n      value = (rating - initialRating) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    var newPosition = new Animated.ValueXY();\n    newPosition.setValue({\n      x: value,\n      y: 0\n    });\n\n    if (this.state.isComponentMounted) {\n      this.setState({\n        position: newPosition,\n        value\n      });\n    }\n  }\n\n  displayCurrentRating() {\n    var {\n      ratingCount,\n      type,\n      readonly,\n      showReadOnlyText,\n      ratingTextColor\n    } = this.props;\n    var color = ratingTextColor || TYPES[type].color;\n    return React.createElement(View, {\n      style: styles.showRatingView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.ratingView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: [styles.ratingText, {\n        color\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, \"Rating:\", ' '), React.createElement(Text, {\n      style: [styles.currentRatingText, {\n        color\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, this.getCurrentRating(this.state.value)), React.createElement(Text, {\n      style: [styles.maxRatingText, {\n        color\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }, \"/\", ratingCount)), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }\n    }, readonly && showReadOnlyText && React.createElement(Text, {\n      style: [styles.readonlyLabel, {\n        color\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 48\n      }\n    }, \"(readonly)\")));\n  }\n\n  render() {\n    var {\n      readonly,\n      type,\n      ratingImage,\n      ratingColor,\n      ratingBackgroundColor,\n      style,\n      showRating\n    } = this.props;\n\n    if (type === 'custom') {\n      var custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor\n      };\n      TYPES.custom = custom;\n    }\n\n    return this.state.display ? React.createElement(View, {\n      pointerEvents: readonly ? 'none' : 'auto',\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, showRating && this.displayCurrentRating(), React.createElement(View, _extends({\n      style: styles.starsWrapper\n    }, this.state.panResponder.panHandlers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles.starsInsideWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, React.createElement(Animated.View, {\n      style: this.getPrimaryViewStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }), React.createElement(Animated.View, {\n      style: this.getSecondaryViewStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    })), this.renderRatings())) : null;\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      isComponentMounted: false\n    });\n  }\n\n}\nSwipeRating.defaultProps = {\n  type: 'star',\n  ratingImage: require(\"./images/star.png\"),\n  ratingColor: '#f1c40f',\n  ratingBackgroundColor: 'white',\n  ratingCount: 5,\n  showReadOnlyText: true,\n  imageSize: 40,\n  minValue: 0\n};\nvar styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nvar fractionsType = (props, propName, componentName) => {\n  if (props[propName]) {\n    var value = props[propName];\n\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20 ? null : new Error(\"`\".concat(propName, \"` in `\").concat(componentName, \"` must be between 0 and 20\"));\n    }\n\n    return new Error(\"`\".concat(propName, \"` in `\").concat(componentName, \"` must be a number\"));\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: PropTypes.node,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: PropTypes.object,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-ratings/src/SwipeRating.js"],"names":["times","React","Component","PropTypes","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","SwipeRating","constructor","props","onStartRating","onFinishRating","fractions","position","Animated","ValueXY","panResponder","PanResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","event","gesture","newPosition","setValue","x","dx","y","state","isComponentMounted","setState","value","onPanResponderRelease","rating","getCurrentRating","minValue","setCurrentRating","display","componentDidMount","err","console","log","startingValue","componentDidUpdate","prevProps","getPrimaryViewStyle","imageSize","ratingCount","type","width","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","height","getSecondaryViewStyle","renderRatings","tintColor","index","styles","starContainer","currentRating","Math","ceil","toFixed","initialRating","displayCurrentRating","readonly","showReadOnlyText","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","render","ratingImage","ratingColor","ratingBackgroundColor","style","showRating","custom","starsWrapper","panHandlers","starsInsideWrapper","componentWillUnmount","defaultProps","StyleSheet","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","Platform","OS","fractionsType","propName","componentName","Error","propTypes","string","node","number","func","bool","object"],"mappings":"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","sourcesContent":["import times from 'lodash/times';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  View, Text, Animated, PanResponder, Image,\n  StyleSheet, Platform\n} from 'react-native';\n\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require('./images/star.png');\nconst HEART_IMAGE = require('./images/heart.png');\nconst ROCKET_IMAGE = require('./images/rocket.png');\nconst BELL_IMAGE = require('./images/bell.png');\n\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: '#f1c40f',\n    backgroundColor: 'white'\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: '#e74c3c',\n    backgroundColor: 'white'\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: '#2ecc71',\n    backgroundColor: 'white'\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: '#f39c12',\n    backgroundColor: 'white'\n  }\n};\n\nexport default class SwipeRating extends Component {\n  static defaultProps = {\n    type: 'star',\n    ratingImage: require('./images/star.png'),\n    ratingColor: '#f1c40f',\n    ratingBackgroundColor: 'white',\n    ratingCount: 5,\n    showReadOnlyText: true,\n    imageSize: 40,\n    minValue: 0\n  };\n\n  constructor(props) {\n    super(props);\n    const { onStartRating, onFinishRating, fractions } = this.props;\n    const position = new Animated.ValueXY();\n\n    const panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: () => {\n        if (typeof onStartRating === 'function') {\n          onStartRating();\n        }\n      },\n      onPanResponderMove: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: gesture.dx, y: 0 });\n        if (this.state.isComponentMounted) {\n          this.setState({position: newPosition, value: gesture.dx});\n        }\n      },\n      onPanResponderRelease: event => {\n        const rating = this.getCurrentRating(this.state.value);\n        if (rating >= this.props.minValue) {\n          if (!fractions) {\n            // 'round up' to the nearest rating image\n            this.setCurrentRating(rating);\n          }\n          if (typeof onFinishRating === 'function') onFinishRating(rating);\n        }\n      }\n    });\n\n    this.state = { panResponder, position, display: false, isComponentMounted: false };\n  }\n\n  async componentDidMount() {\n    try {\n      const STAR_IMAGE = await require('./images/star.png');\n      const HEART_IMAGE = await require('./images/heart.png');\n      const ROCKET_IMAGE = await require('./images/rocket.png');\n      const BELL_IMAGE = await require('./images/bell.png');\n\n      this.setState({ display: true, isComponentMounted: true });\n    } catch(err) {\n      console.log(err)\n    }\n\n    this.setCurrentRating(this.props.startingValue);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.startingValue !== prevProps.startingValue) {\n      this.setCurrentRating(this.props.startingValue);\n    }\n  }\n\n  getPrimaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const color = TYPES[type].color;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [0, (ratingCount * imageSize) / 2, ratingCount * imageSize],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  getSecondaryViewStyle() {\n    const { position } = this.state;\n    const { imageSize, ratingCount, type } = this.props;\n\n    const backgroundColor = TYPES[type].backgroundColor;\n\n    const width = position.x.interpolate(\n      {\n        inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n        outputRange: [ratingCount * imageSize, (ratingCount * imageSize) / 2, 0],\n        extrapolate: 'clamp'\n      },\n      {\n        useNativeDriver: true\n      }\n    );\n\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n\n  renderRatings() {\n    const { imageSize, ratingCount, type, tintColor } = this.props;\n    const source = TYPES[type].source;\n\n    return times(ratingCount, index => (\n      <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }} />\n      </View>\n    ));\n  }\n\n  getCurrentRating(value) {\n    // const { value } = this.state;\n    const { fractions, imageSize, ratingCount } = this.props;\n\n    const startingValue = ratingCount / 2;\n    let currentRating = (this.props.minValue) ? this.props.minValue : 0;\n\n    if (value > (ratingCount * imageSize) / 2) {\n      currentRating = ratingCount;\n    } else if (value < (-ratingCount * imageSize) / 2) {\n      currentRating = (this.props.minValue) ? this.props.minValue : 0;\n    } else if (value <= imageSize || value > imageSize) {\n      currentRating = startingValue + value / imageSize;\n      currentRating = !fractions ? Math.ceil(currentRating) : +currentRating.toFixed(fractions);\n    } else {\n      currentRating = !fractions ? Math.ceil(startingValue) : +startingValue.toFixed(fractions);\n    }\n\n    return currentRating;\n  }\n\n  setCurrentRating(rating) {\n    const { imageSize, ratingCount } = this.props;\n\n    // `initialRating` corresponds to `startingValue` in the getter. Naming it\n    // differently here avoids confusion with `value` below.\n    const initialRating = ratingCount / 2;\n    let value = null;\n\n    if (rating > ratingCount) {\n      value = (ratingCount * imageSize) / 2;\n    } else if (rating < 0) {\n      value = (-ratingCount * imageSize) / 2;\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n      value = (rating - initialRating) * imageSize;\n    } else {\n      value = 0;\n    }\n\n    const newPosition = new Animated.ValueXY();\n    newPosition.setValue({ x: value, y: 0 });\n    if (this.state.isComponentMounted) {\n      this.setState({position: newPosition, value});\n    }\n  }\n\n  displayCurrentRating() {\n    const { ratingCount, type, readonly, showReadOnlyText, ratingTextColor } = this.props;\n    const color = ratingTextColor || TYPES[type].color;\n\n    return (\n      <View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating:{' '}</Text>\n          <Text style={[styles.currentRatingText, { color }]}>{this.getCurrentRating(this.state.value)}</Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>{readonly && showReadOnlyText && <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}</View>\n      </View>\n    );\n  }\n\n  render() {\n    const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n\n    if (type === 'custom') {\n      let custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor\n      };\n      TYPES.custom = custom;\n    }\n\n    return (\n      this.state.display ?\n      <View pointerEvents={readonly ? 'none' : 'auto'} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n          <View style={styles.starsInsideWrapper}>\n            <Animated.View style={this.getPrimaryViewStyle()} />\n            <Animated.View style={this.getSecondaryViewStyle()} />\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n      null\n    );\n  }\n\n  componentWillUnmount() {\n    this.setState({ isComponentMounted: false });\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  starsInsideWrapper: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  showRatingView: {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  },\n  readonlyLabel: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontSize: 12,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495a'\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: 'center',\n    fontFamily: Platform.OS === 'ios' ? 'Trebuchet MS' : null,\n    color: '#34495e'\n  }\n});\n\nconst fractionsType = (props, propName, componentName) => {\n  if (props[propName]) {\n    const value = props[propName];\n    if (typeof value === 'number') {\n      return value >= 0 && value <= 20\n        ? null\n        : new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n    }\n\n    return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n  }\n};\n\nSwipeRating.propTypes = {\n  type: PropTypes.string,\n  ratingImage: PropTypes.node,\n  ratingColor: PropTypes.string,\n  ratingBackgroundColor: PropTypes.string,\n  ratingCount: PropTypes.number,\n  ratingTextColor: PropTypes.string,\n  imageSize: PropTypes.number,\n  onStartRating: PropTypes.func,\n  onFinishRating: PropTypes.func,\n  showRating: PropTypes.bool,\n  style: PropTypes.object,\n  readonly: PropTypes.bool,\n  showReadOnlyText: PropTypes.bool,\n  startingValue: PropTypes.number,\n  fractions: fractionsType,\n  minValue: PropTypes.number\n};\n"]},"metadata":{},"sourceType":"module"}