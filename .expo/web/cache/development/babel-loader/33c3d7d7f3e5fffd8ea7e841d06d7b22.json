{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-gesture-handler\\\\GestureHandler.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ToolbarAndroid from \"react-native-web/dist/exports/ToolbarAndroid\";\nimport DrawerLayoutAndroid from \"react-native-web/dist/exports/DrawerLayoutAndroid\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport PropTypes from 'prop-types';\nimport createHandler from \"./createHandler\";\nimport GestureHandlerButton from \"./GestureHandlerButton\";\nimport gestureHandlerRootHOC from \"./gestureHandlerRootHOC\";\nimport Directions from \"./Directions\";\nimport State from \"./State\";\nimport PlatformConstants from \"./PlatformConstants\";\nvar GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object]))]),\n  simultaneousHandlers: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object]))]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    left: PropTypes.number,\n    top: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number,\n    vertical: PropTypes.number,\n    horizontal: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number\n  })]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func\n};\nvar NativeViewGestureHandler = createHandler('NativeViewGestureHandler', _objectSpread({}, GestureHandlerPropTypes, {\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool\n}));\nvar TapGestureHandler = createHandler('TapGestureHandler', _objectSpread({}, GestureHandlerPropTypes, {\n  maxDurationMs: PropTypes.number,\n  maxDelayMs: PropTypes.number,\n  numberOfTaps: PropTypes.number,\n  maxDeltaX: PropTypes.number,\n  maxDeltaY: PropTypes.number,\n  maxDist: PropTypes.number,\n  minPointers: PropTypes.number\n}), {});\nvar FlingGestureHandler = createHandler('FlingGestureHandler', _objectSpread({}, GestureHandlerPropTypes, {\n  numberOfPointers: PropTypes.number,\n  direction: PropTypes.number\n}), {});\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn('ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase');\n  }\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nvar ForceTouchGestureHandler = PlatformConstants && PlatformConstants.forceTouchAvailable ? createHandler('ForceTouchGestureHandler', _objectSpread({}, GestureHandlerPropTypes, {\n  minForce: PropTypes.number,\n  maxForce: PropTypes.number,\n  feedbackOnActivation: PropTypes.bool\n}), {}) : ForceTouchFallback;\nForceTouchGestureHandler.forceTouchAvailable = PlatformConstants && PlatformConstants.forceTouchAvailable || false;\nvar LongPressGestureHandler = createHandler('LongPressGestureHandler', _objectSpread({}, GestureHandlerPropTypes, {\n  minDurationMs: PropTypes.number,\n  maxDist: PropTypes.number\n}), {});\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd\");\n  }\n\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\"It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd\");\n  }\n\n  if (Array.isArray(props.activeOffsetX) && (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)) {\n    throw new Error(\"First element of activeOffsetX should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.activeOffsetY) && (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)) {\n    throw new Error(\"First element of activeOffsetY should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.failOffsetX) && (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)) {\n    throw new Error(\"First element of failOffsetX should be negative, a the second one should be positive\");\n  }\n\n  if (Array.isArray(props.failOffsetY) && (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)) {\n    throw new Error(\"First element of failOffsetY should be negative, a the second one should be positive\");\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  var res = _objectSpread({}, props);\n\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n\n  return transformPanGestureHandlerProps(props);\n}\n\nvar PanGestureHandler = createHandler('PanGestureHandler', _objectSpread({}, GestureHandlerPropTypes, {\n  activeOffsetY: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  activeOffsetX: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  failOffsetY: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  failOffsetX: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.number)]),\n  minDist: PropTypes.number,\n  minVelocity: PropTypes.number,\n  minVelocityX: PropTypes.number,\n  minVelocityY: PropTypes.number,\n  minPointers: PropTypes.number,\n  maxPointers: PropTypes.number,\n  avgTouches: PropTypes.bool\n}), {}, managePanProps, {\n  activeOffsetYStart: true,\n  activeOffsetYEnd: true,\n  activeOffsetXStart: true,\n  activeOffsetXEnd: true,\n  failOffsetYStart: true,\n  failOffsetYEnd: true,\n  failOffsetXStart: true,\n  failOffsetXEnd: true\n});\nvar PinchGestureHandler = createHandler('PinchGestureHandler', GestureHandlerPropTypes, {});\nvar RotationGestureHandler = createHandler('RotationGestureHandler', GestureHandlerPropTypes, {});\nvar NATIVE_WRAPPER_BIND_BLACKLIST = new Set(['replaceState', 'isMounted']);\n\nvar NATIVE_WRAPPER_PROPS_FILTER = _objectSpread({}, NativeViewGestureHandler.propTypes, {\n  onGestureHandlerEvent: PropTypes.func,\n  onGestureHandlerStateChange: PropTypes.func\n});\n\nfunction createNativeWrapper(Component) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  class ComponentWrapper extends React.Component {\n    constructor() {\n      super(...arguments);\n\n      this._refHandler = node => {\n        var source = node;\n\n        while (source != null) {\n          for (var methodName of Object.getOwnPropertyNames(source)) {\n            if (!methodName.startsWith('_') && !methodName.startsWith('component') && !NATIVE_WRAPPER_BIND_BLACKLIST.has(methodName) && typeof source[methodName] === 'function' && this[methodName] === undefined) {\n              if (source[methodName].prototype) {\n                this[methodName] = source[methodName].bind(node);\n              } else {\n                this[methodName] = source[methodName];\n              }\n            }\n          }\n\n          source = Object.getPrototypeOf(source);\n        }\n      };\n    }\n\n    render() {\n      var gestureHandlerProps = Object.keys(this.props).reduce((props, key) => {\n        if (key in NATIVE_WRAPPER_PROPS_FILTER) {\n          props[key] = this.props[key];\n        }\n\n        return props;\n      }, _objectSpread({}, config));\n      return React.createElement(NativeViewGestureHandler, _extends({}, gestureHandlerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 9\n        }\n      }), React.createElement(Component, _extends({}, this.props, {\n        ref: this._refHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }\n      })));\n    }\n\n  }\n\n  ComponentWrapper.propTypes = _objectSpread({}, Component.propTypes);\n  ComponentWrapper.displayName = Component.displayName || \"ComponentWrapper\";\n  return ComponentWrapper;\n}\n\nvar WrappedScrollView = createNativeWrapper(ScrollView, {\n  disallowInterruption: true\n});\nvar WrappedSwitch = createNativeWrapper(Switch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true\n});\nvar WrappedTextInput = createNativeWrapper(TextInput);\nvar WrappedToolbarAndroid = createNativeWrapper(ToolbarAndroid);\nvar WrappedDrawerLayoutAndroid = createNativeWrapper(DrawerLayoutAndroid, {\n  disallowInterruption: true\n});\nWrappedDrawerLayoutAndroid.positions = DrawerLayoutAndroid.positions;\n\nState.print = state => {\n  var keys = Object.keys(State);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (state === State[keys[i]]) {\n      return keys[i];\n    }\n  }\n};\n\nvar RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false\n});\n\nclass BaseButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleEvent = (_ref) => {\n      var {\n        nativeEvent\n      } = _ref;\n      var {\n        state,\n        oldState,\n        pointerInside\n      } = nativeEvent;\n      var active = pointerInside && state === State.ACTIVE;\n\n      if (active !== this._lastActive && this.props.onActiveStateChange) {\n        this.props.onActiveStateChange(active);\n      }\n\n      if (oldState === State.ACTIVE && state !== State.CANCELLED && this._lastActive && this.props.onPress) {\n        this.props.onPress(active);\n      }\n\n      this._lastActive = active;\n    };\n\n    this._onHandlerStateChange = e => {\n      this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n\n      this._handleEvent(e);\n    };\n\n    this._onGestureEvent = e => {\n      this.props.onGestureEvent && this.props.onGestureEvent(e);\n\n      this._handleEvent(e);\n    };\n\n    this._lastActive = false;\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      style,\n      rippleColor\n    } = _this$props,\n        rest = _objectWithoutProperties(_this$props, [\"style\", \"rippleColor\"]);\n\n    return React.createElement(RawButton, _extends({\n      style: [{\n        overflow: 'hidden'\n      }, style],\n      rippleColor: processColor(rippleColor)\n    }, rest, {\n      onGestureEvent: this._onGestureEvent,\n      onHandlerStateChange: this._onHandlerStateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nBaseButton.propTypes = _objectSpread({}, RawButton.propTypes, {\n  onPress: PropTypes.func,\n  onActiveStateChange: PropTypes.func\n});\nvar AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\nvar btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\n\nclass RectButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onActiveStateChange = active => {\n      if (Platform.OS !== 'android') {\n        this._opacity.setValue(active ? this.props.activeOpacity : 0);\n      }\n\n      this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n    };\n\n    this._opacity = new Animated.Value(0);\n  }\n\n  render() {\n    var _this$props2 = this.props,\n        {\n      children\n    } = _this$props2,\n        rest = _objectWithoutProperties(_this$props2, [\"children\"]);\n\n    return React.createElement(BaseButton, _extends({}, rest, {\n      onActiveStateChange: this._onActiveStateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 7\n      }\n    }), React.createElement(Animated.View, {\n      style: [btnStyles.underlay, {\n        opacity: this._opacity\n      }, {\n        backgroundColor: this.props.underlayColor\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }\n    }), children);\n  }\n\n}\n\nRectButton.propTypes = BaseButton.propTypes;\nRectButton.defaultProps = {\n  activeOpacity: 0.105,\n  underlayColor: 'black'\n};\n\nclass BorderlessButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._onActiveStateChange = active => {\n      if (Platform.OS !== 'android') {\n        this._opacity.setValue(active ? this.props.activeOpacity : 1);\n      }\n\n      this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n    };\n\n    this._opacity = new Animated.Value(1);\n  }\n\n  render() {\n    var _this$props3 = this.props,\n        {\n      children,\n      style\n    } = _this$props3,\n        rest = _objectWithoutProperties(_this$props3, [\"children\", \"style\"]);\n\n    return React.createElement(AnimatedBaseButton, _extends({}, rest, {\n      onActiveStateChange: this._onActiveStateChange,\n      style: [style, Platform.OS === 'ios' && {\n        opacity: this._opacity\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n}\n\nBorderlessButton.propTypes = _objectSpread({}, BaseButton.propTypes, {\n  borderless: PropTypes.bool\n});\nBorderlessButton.defaultProps = {\n  activeOpacity: 0.3,\n  borderless: true\n};\nvar FlatListWithGHScroll = React.forwardRef((props, ref) => React.createElement(FlatList, _extends({\n  ref: ref\n}, props, {\n  renderScrollComponent: scrollProps => React.createElement(WrappedScrollView, _extends({}, scrollProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 43\n    }\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 589,\n    columnNumber: 3\n  }\n})));\nexport { WrappedScrollView as ScrollView, WrappedSwitch as Switch, WrappedTextInput as TextInput, WrappedToolbarAndroid as ToolbarAndroid, WrappedDrawerLayoutAndroid as DrawerLayoutAndroid, NativeViewGestureHandler, TapGestureHandler, FlingGestureHandler, ForceTouchGestureHandler, LongPressGestureHandler, PanGestureHandler, PinchGestureHandler, RotationGestureHandler, State, RawButton, BaseButton, RectButton, BorderlessButton, FlatListWithGHScroll as FlatList, gestureHandlerRootHOC, GestureHandlerButton as PureNativeButton, Directions, createNativeWrapper };","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-gesture-handler/GestureHandler.js"],"names":["React","PropTypes","createHandler","GestureHandlerButton","gestureHandlerRootHOC","Directions","State","PlatformConstants","GestureHandlerPropTypes","id","string","minPointers","number","enabled","bool","waitFor","oneOfType","object","arrayOf","simultaneousHandlers","shouldCancelWhenOutside","hitSlop","shape","left","top","right","bottom","vertical","horizontal","width","height","onGestureEvent","func","onHandlerStateChange","onBegan","onFailed","onCancelled","onActivated","onEnded","NativeViewGestureHandler","shouldActivateOnStart","disallowInterruption","TapGestureHandler","maxDurationMs","maxDelayMs","numberOfTaps","maxDeltaX","maxDeltaY","maxDist","FlingGestureHandler","numberOfPointers","direction","ForceTouchFallback","Component","componentDidMount","console","warn","render","props","children","ForceTouchGestureHandler","forceTouchAvailable","minForce","maxForce","feedbackOnActivation","LongPressGestureHandler","minDurationMs","validatePanGestureHandlerProps","minDeltaX","activeOffsetX","Error","failOffsetX","minDeltaY","activeOffsetY","failOffsetY","Array","isArray","transformPanGestureHandlerProps","res","undefined","activeOffsetXStart","activeOffsetXEnd","failOffsetXStart","failOffsetXEnd","minOffsetX","activeOffsetYStart","activeOffsetYEnd","failOffsetYStart","failOffsetYEnd","minOffsetY","managePanProps","__DEV__","PanGestureHandler","minDist","minVelocity","minVelocityX","minVelocityY","maxPointers","avgTouches","PinchGestureHandler","RotationGestureHandler","NATIVE_WRAPPER_BIND_BLACKLIST","Set","NATIVE_WRAPPER_PROPS_FILTER","propTypes","onGestureHandlerEvent","onGestureHandlerStateChange","createNativeWrapper","config","ComponentWrapper","_refHandler","node","source","methodName","Object","getOwnPropertyNames","startsWith","has","prototype","bind","getPrototypeOf","gestureHandlerProps","keys","reduce","key","displayName","WrappedScrollView","ScrollView","WrappedSwitch","Switch","WrappedTextInput","TextInput","WrappedToolbarAndroid","ToolbarAndroid","WrappedDrawerLayoutAndroid","DrawerLayoutAndroid","positions","print","state","i","length","RawButton","BaseButton","constructor","_handleEvent","nativeEvent","oldState","pointerInside","active","ACTIVE","_lastActive","onActiveStateChange","CANCELLED","onPress","_onHandlerStateChange","e","_onGestureEvent","style","rippleColor","rest","overflow","processColor","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","RectButton","_onActiveStateChange","Platform","OS","_opacity","setValue","activeOpacity","Value","opacity","backgroundColor","underlayColor","defaultProps","BorderlessButton","borderless","FlatListWithGHScroll","forwardRef","ref","scrollProps","FlatList","PureNativeButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Animated,\n  ScrollView,\n  Switch,\n  TextInput,\n  ToolbarAndroid,\n  DrawerLayoutAndroid,\n  StyleSheet,\n  FlatList,\n  Platform,\n  processColor,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport createHandler from './createHandler';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport gestureHandlerRootHOC from './gestureHandlerRootHOC';\n\nimport Directions from './Directions';\nimport State from './State';\nimport PlatformConstants from './PlatformConstants';\n\nconst GestureHandlerPropTypes = {\n  id: PropTypes.string,\n  minPointers: PropTypes.number,\n  enabled: PropTypes.bool,\n  waitFor: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  simultaneousHandlers: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    ),\n  ]),\n  shouldCancelWhenOutside: PropTypes.bool,\n  hitSlop: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.shape({\n      left: PropTypes.number,\n      top: PropTypes.number,\n      right: PropTypes.number,\n      bottom: PropTypes.number,\n      vertical: PropTypes.number,\n      horizontal: PropTypes.number,\n      width: PropTypes.number,\n      height: PropTypes.number,\n    }),\n  ]),\n  onGestureEvent: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onHandlerStateChange: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n  onBegan: PropTypes.func,\n  onFailed: PropTypes.func,\n  onCancelled: PropTypes.func,\n  onActivated: PropTypes.func,\n  onEnded: PropTypes.func,\n};\n\nconst NativeViewGestureHandler = createHandler('NativeViewGestureHandler', {\n  ...GestureHandlerPropTypes,\n  shouldActivateOnStart: PropTypes.bool,\n  disallowInterruption: PropTypes.bool,\n});\nconst TapGestureHandler = createHandler(\n  'TapGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    maxDurationMs: PropTypes.number,\n    maxDelayMs: PropTypes.number,\n    numberOfTaps: PropTypes.number,\n    maxDeltaX: PropTypes.number,\n    maxDeltaY: PropTypes.number,\n    maxDist: PropTypes.number,\n    minPointers: PropTypes.number,\n  },\n  {}\n);\n\nconst FlingGestureHandler = createHandler(\n  'FlingGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    numberOfPointers: PropTypes.number,\n    direction: PropTypes.number,\n  },\n  {}\n);\n\nclass ForceTouchFallback extends React.Component {\n  componentDidMount() {\n    console.warn(\n      'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nconst ForceTouchGestureHandler =\n  PlatformConstants && PlatformConstants.forceTouchAvailable\n    ? createHandler(\n        'ForceTouchGestureHandler',\n        {\n          ...GestureHandlerPropTypes,\n          minForce: PropTypes.number,\n          maxForce: PropTypes.number,\n          feedbackOnActivation: PropTypes.bool,\n        },\n        {}\n      )\n    : ForceTouchFallback;\n\nForceTouchGestureHandler.forceTouchAvailable =\n  (PlatformConstants && PlatformConstants.forceTouchAvailable) || false;\n\nconst LongPressGestureHandler = createHandler(\n  'LongPressGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    minDurationMs: PropTypes.number,\n    maxDist: PropTypes.number,\n  },\n  {}\n);\n\nfunction validatePanGestureHandlerProps(props) {\n  if (props.minDeltaX && props.activeOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.maxDeltaX && props.failOffsetX) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetXStart or activeOffsetXEnd`\n    );\n  }\n  if (props.minDeltaY && props.activeOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (props.maxDeltaY && props.failOffsetY) {\n    throw new Error(\n      `It's not supported use minDeltaX with activeOffsetYStart or activeOffsetYEnd`\n    );\n  }\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props) {\n  const res = { ...props };\n  if (props.minDeltaX !== undefined) {\n    delete res['minDeltaX'];\n    res.activeOffsetXStart = -props.minDeltaX;\n    res.activeOffsetXEnd = props.minDeltaX;\n  }\n  if (props.maxDeltaX !== undefined) {\n    delete res['maxDeltaX'];\n    res.failOffsetXStart = -props.maxDeltaX;\n    res.failOffsetXEnd = props.maxDeltaX;\n  }\n  if (props.minOffsetX !== undefined) {\n    delete res['minOffsetX'];\n    if (props.minOffsetX < 0) {\n      res.activeOffsetXStart = props.minOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.minOffsetX;\n    }\n  }\n\n  if (props.minDeltaY !== undefined) {\n    delete res['minDeltaY'];\n    res.activeOffsetYStart = -props.minDeltaY;\n    res.activeOffsetYEnd = props.minDeltaY;\n  }\n  if (props.maxDeltaY !== undefined) {\n    delete res['maxDeltaY'];\n    res.failOffsetYStart = -props.maxDeltaY;\n    res.failOffsetYEnd = props.maxDeltaY;\n  }\n\n  if (props.minOffsetY !== undefined) {\n    delete res['minOffsetY'];\n    if (props.minOffsetY < 0) {\n      res.activeOffsetYStart = props.minOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.minOffsetY;\n    }\n  }\n\n  if (props.activeOffsetX !== undefined) {\n    delete res['activeOffsetX'];\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res['activeOffsetY'];\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res['failOffsetX'];\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res['failOffsetY'];\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nfunction managePanProps(props) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n\nconst PanGestureHandler = createHandler(\n  'PanGestureHandler',\n  {\n    ...GestureHandlerPropTypes,\n    activeOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    activeOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetY: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    failOffsetX: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    minDist: PropTypes.number,\n    minVelocity: PropTypes.number,\n    minVelocityX: PropTypes.number,\n    minVelocityY: PropTypes.number,\n    minPointers: PropTypes.number,\n    maxPointers: PropTypes.number,\n    avgTouches: PropTypes.bool,\n  },\n  {},\n  managePanProps,\n  {\n    activeOffsetYStart: true,\n    activeOffsetYEnd: true,\n    activeOffsetXStart: true,\n    activeOffsetXEnd: true,\n    failOffsetYStart: true,\n    failOffsetYEnd: true,\n    failOffsetXStart: true,\n    failOffsetXEnd: true,\n  }\n);\nconst PinchGestureHandler = createHandler(\n  'PinchGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\nconst RotationGestureHandler = createHandler(\n  'RotationGestureHandler',\n  GestureHandlerPropTypes,\n  {}\n);\n\nconst NATIVE_WRAPPER_BIND_BLACKLIST = new Set(['replaceState', 'isMounted']);\nconst NATIVE_WRAPPER_PROPS_FILTER = {\n  // accept all gesture handler prop types plus native wrapper specific ones\n  ...NativeViewGestureHandler.propTypes,\n  // we want to pass gesture event handlers if registered\n  onGestureHandlerEvent: PropTypes.func,\n  onGestureHandlerStateChange: PropTypes.func,\n};\n\nfunction createNativeWrapper(Component, config = {}) {\n  class ComponentWrapper extends React.Component {\n    static propTypes = {\n      ...Component.propTypes,\n    };\n\n    static displayName = Component.displayName || \"ComponentWrapper\";\n\n    _refHandler = node => {\n      // bind native component's methods\n      let source = node;\n      while (source != null) {\n        for (let methodName of Object.getOwnPropertyNames(source)) {\n          if (\n            !methodName.startsWith('_') && // private methods\n            !methodName.startsWith('component') && // lifecycle methods\n            !NATIVE_WRAPPER_BIND_BLACKLIST.has(methodName) && // other\n            typeof source[methodName] === 'function' &&\n            this[methodName] === undefined\n          ) {\n            if (source[methodName].prototype) {\n              // determine if it's not bound already\n              this[methodName] = source[methodName].bind(node);\n            } else {\n              this[methodName] = source[methodName];\n            }\n          }\n        }\n        source = Object.getPrototypeOf(source);\n      }\n    };\n\n    render() {\n      // filter out props that should be passed to gesture handler wrapper\n      const gestureHandlerProps = Object.keys(this.props).reduce(\n        (props, key) => {\n          if (key in NATIVE_WRAPPER_PROPS_FILTER) {\n            props[key] = this.props[key];\n          }\n          return props;\n        },\n        { ...config } // watch out not to modify config\n      );\n      return (\n        <NativeViewGestureHandler {...gestureHandlerProps}>\n          <Component {...this.props} ref={this._refHandler} />\n        </NativeViewGestureHandler>\n      );\n    }\n  }\n  return ComponentWrapper;\n}\n\nconst WrappedScrollView = createNativeWrapper(ScrollView, {\n  disallowInterruption: true,\n});\nconst WrappedSwitch = createNativeWrapper(Switch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nconst WrappedTextInput = createNativeWrapper(TextInput);\n\nconst WrappedToolbarAndroid = createNativeWrapper(ToolbarAndroid);\nconst WrappedDrawerLayoutAndroid = createNativeWrapper(DrawerLayoutAndroid, {\n  disallowInterruption: true,\n});\nWrappedDrawerLayoutAndroid.positions = DrawerLayoutAndroid.positions;\n\nState.print = state => {\n  const keys = Object.keys(State);\n  for (let i = 0; i < keys.length; i++) {\n    if (state === State[keys[i]]) {\n      return keys[i];\n    }\n  }\n};\n\nconst RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\n/* Buttons */\n\nclass BaseButton extends React.Component {\n  static propTypes = {\n    ...RawButton.propTypes,\n    onPress: PropTypes.func,\n    onActiveStateChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n\n  _handleEvent = ({ nativeEvent }) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this._lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this._lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first,\n  // then forward the event to listeners. However, here our handler\n  // is virtually only forwarding events to listeners, so we reverse the order\n  // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n  _onHandlerStateChange = e => {\n    this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n    this._handleEvent(e);\n  };\n\n  _onGestureEvent = e => {\n    this.props.onGestureEvent && this.props.onGestureEvent(e);\n    this._handleEvent(e);\n  };\n\n  render() {\n    const { style, rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        style={[{ overflow: 'hidden' }, style]}\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nclass RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 0);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, ...rest } = this.props;\n\n    return (\n      <BaseButton {...rest} onActiveStateChange={this._onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            { opacity: this._opacity },\n            { backgroundColor: this.props.underlayColor },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nclass BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 1);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\n/* Other */\n\nconst FlatListWithGHScroll = React.forwardRef((props, ref) => (\n  <FlatList\n    ref={ref}\n    {...props}\n    renderScrollComponent={scrollProps => <WrappedScrollView {...scrollProps} />}\n  />\n));\n\nexport {\n  WrappedScrollView as ScrollView,\n  WrappedSwitch as Switch,\n  WrappedTextInput as TextInput,\n  WrappedToolbarAndroid as ToolbarAndroid,\n  WrappedDrawerLayoutAndroid as DrawerLayoutAndroid,\n  NativeViewGestureHandler,\n  TapGestureHandler,\n  FlingGestureHandler,\n  ForceTouchGestureHandler,\n  LongPressGestureHandler,\n  PanGestureHandler,\n  PinchGestureHandler,\n  RotationGestureHandler,\n  State,\n  /* Buttons */\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n  /* Other */\n  FlatListWithGHScroll as FlatList,\n  gestureHandlerRootHOC,\n  GestureHandlerButton as PureNativeButton,\n  Directions,\n  createNativeWrapper,\n};\n"]},"metadata":{},"sourceType":"module"}