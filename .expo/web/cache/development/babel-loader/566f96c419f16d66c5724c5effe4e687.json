{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\expo\\\\build\\\\effects\\\\NativeLinearGradient.web.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default class NativeLinearGradient extends React.PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      width: undefined,\n      height: undefined\n    };\n\n    this.onLayout = event => {\n      this.setState({\n        width: event.nativeEvent.layout.width,\n        height: event.nativeEvent.layout.height\n      });\n\n      if (this.props.onLayout) {\n        this.props.onLayout(event);\n      }\n    };\n  }\n\n  getAngle() {\n    var startPoint = this.props.startPoint ? this.props.startPoint : [0.5, 0.0];\n    var endPoint = this.props.endPoint ? this.props.endPoint : [0.5, 1.0];\n    var {\n      width = 0,\n      height = 0\n    } = this.state;\n    var angle = 0;\n    var gradientWidth = height * (endPoint[0] - startPoint[0]);\n    var gradientHeight = width * (endPoint[1] - startPoint[1]);\n    angle = Math.atan2(gradientHeight, gradientWidth) + Math.PI / 2;\n    return \"\".concat(angle, \"rad\");\n  }\n\n  getColors() {\n    var {\n      colors\n    } = this.props;\n    return colors.map((color, index) => {\n      var colorStr = \"\".concat(color.toString(16));\n      var hex = \"#\".concat(colorStr.substring(2, colorStr.length));\n      var location = this.props.locations && this.props.locations[index];\n\n      if (location) {\n        return \"\".concat(hex, \" \").concat(location * 100, \"%\");\n      }\n\n      return hex;\n    }).join(',');\n  }\n\n  getBackgroundImage() {\n    if (this.state.width && this.state.height) {\n      return \"linear-gradient(\".concat(this.getAngle(), \",\").concat(this.getColors(), \")\");\n    } else {\n      return 'transparent';\n    }\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      colors,\n      locations,\n      startPoint,\n      endPoint,\n      onLayout,\n      style\n    } = _this$props,\n        props = _objectWithoutProperties(_this$props, [\"colors\", \"locations\", \"startPoint\", \"endPoint\", \"onLayout\", \"style\"]);\n\n    var flatStyle = StyleSheet.flatten(style) || {};\n    flatStyle.backgroundImage = this.getBackgroundImage();\n    return React.createElement(View, _extends({\n      style: flatStyle,\n      onLayout: this.onLayout\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["../../src/effects/NativeLinearGradient.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\ntype Props = {\n  colors: number[];\n  locations?: number[] | null;\n  startPoint?: Point | null;\n  endPoint?: Point | null;\n  onLayout?: Function;\n} & React.ComponentProps<typeof View>;\n\ntype State = {\n  width?: number;\n  height?: number;\n};\n\ntype Point = [number, number];\n\nexport default class NativeLinearGradient extends React.PureComponent<Props, State> {\n  state = {\n    width: undefined,\n    height: undefined,\n  };\n\n  onLayout = event => {\n    this.setState({\n      width: event.nativeEvent.layout.width,\n      height: event.nativeEvent.layout.height,\n    });\n    if (this.props.onLayout) {\n      this.props.onLayout(event);\n    }\n  };\n\n  getAngle(): string {\n    const startPoint = this.props.startPoint ? this.props.startPoint : [0.5, 0.0];\n    const endPoint = this.props.endPoint ? this.props.endPoint : [0.5, 1.0];\n    const { width = 0, height = 0 } = this.state;\n    let angle = 0;\n\n    const gradientWidth = height * (endPoint[0] - startPoint[0]);\n    const gradientHeight = width * (endPoint[1] - startPoint[1]);\n    angle = Math.atan2(gradientHeight, gradientWidth) + Math.PI / 2;\n\n    return `${angle}rad`;\n  }\n\n  getColors(): string {\n    const { colors } = this.props;\n    return colors\n      .map((color, index) => {\n        const colorStr = `${color.toString(16)}`;\n        const hex = `#${colorStr.substring(2, colorStr.length)}`;\n\n        const location = this.props.locations && this.props.locations[index];\n        if (location) {\n          return `${hex} ${location * 100}%`;\n        }\n        return hex;\n      })\n      .join(',');\n  }\n\n  getBackgroundImage(): string | null {\n    if (this.state.width && this.state.height) {\n      return `linear-gradient(${this.getAngle()},${this.getColors()})`;\n    } else {\n      return 'transparent';\n    }\n  }\n\n  render() {\n    const { colors, locations, startPoint, endPoint, onLayout, style, ...props } = this.props;\n    let flatStyle = StyleSheet.flatten(style) || {};\n\n    // @ts-ignore: [ts] Property 'backgroundImage' does not exist on type 'ViewStyle'.\n    flatStyle.backgroundImage = this.getBackgroundImage();\n\n    // TODO: Bacon: In the future we could consider adding `backgroundRepeat: \"no-repeat\"`. For more browser support.\n    return <View style={flatStyle} onLayout={this.onLayout} {...props} />;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}