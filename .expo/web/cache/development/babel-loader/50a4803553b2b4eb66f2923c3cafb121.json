{"ast":null,"code":"'use strict';\n\nfunction parseErrorStack(e) {\n  if (!e || !e.stack) {\n    return [];\n  }\n\n  var stacktraceParser = require('stacktrace-parser');\n\n  var stack = Array.isArray(e.stack) ? e.stack : stacktraceParser.parse(e.stack);\n  var framesToPop = typeof e.framesToPop === 'number' ? e.framesToPop : 0;\n\n  while (framesToPop--) {\n    stack.shift();\n  }\n\n  return stack;\n}\n\nmodule.exports = parseErrorStack;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native/Libraries/Core/Devtools/parseErrorStack.js"],"names":["parseErrorStack","e","stack","stacktraceParser","require","Array","isArray","parse","framesToPop","shift","module","exports"],"mappings":"AAUA;;AAaA,SAASA,eAAT,CAAyBC,CAAzB,EAA8D;AAC5D,MAAI,CAACA,CAAD,IAAM,CAACA,CAAC,CAACC,KAAb,EAAoB;AAClB,WAAO,EAAP;AACD;;AAKD,MAAMC,gBAAgB,GAAGC,OAAO,CAAC,mBAAD,CAAhC;;AACA,MAAMF,KAAK,GAAGG,KAAK,CAACC,OAAN,CAAcL,CAAC,CAACC,KAAhB,IACVD,CAAC,CAACC,KADQ,GAEVC,gBAAgB,CAACI,KAAjB,CAAuBN,CAAC,CAACC,KAAzB,CAFJ;AAIA,MAAIM,WAAW,GAAG,OAAOP,CAAC,CAACO,WAAT,KAAyB,QAAzB,GAAoCP,CAAC,CAACO,WAAtC,GAAoD,CAAtE;;AACA,SAAOA,WAAW,EAAlB,EAAsB;AACpBN,IAAAA,KAAK,CAACO,KAAN;AACD;;AACD,SAAOP,KAAP;AACD;;AAEDQ,MAAM,CAACC,OAAP,GAAiBX,eAAjB","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nexport type StackFrame = {\n  column: ?number,\n  file: string,\n  lineNumber: number,\n  methodName: string,\n};\n\nexport type ExtendedError = Error & {\n  framesToPop?: number,\n};\n\nfunction parseErrorStack(e: ExtendedError): Array<StackFrame> {\n  if (!e || !e.stack) {\n    return [];\n  }\n\n  /* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an\n   * error found when Flow v0.54 was deployed. To see the error delete this\n   * comment and run Flow. */\n  const stacktraceParser = require('stacktrace-parser');\n  const stack = Array.isArray(e.stack)\n    ? e.stack\n    : stacktraceParser.parse(e.stack);\n\n  let framesToPop = typeof e.framesToPop === 'number' ? e.framesToPop : 0;\n  while (framesToPop--) {\n    stack.shift();\n  }\n  return stack;\n}\n\nmodule.exports = parseErrorStack;\n"]},"metadata":{},"sourceType":"script"}