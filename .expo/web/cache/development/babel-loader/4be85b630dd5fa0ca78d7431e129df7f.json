{"ast":null,"code":"import { Platform } from '@unimodules/core';\nimport { UnavailabilityError } from '@unimodules/core';\nimport invariant from 'invariant';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nfunction getBasePath(_ref) {\n  var {\n    httpServerLocation\n  } = _ref;\n\n  if (httpServerLocation[0] === '/') {\n    return httpServerLocation.substr(1);\n  }\n\n  return httpServerLocation;\n}\n\nfunction getScale() {\n  return Dimensions.get('window').scale;\n}\n\nfunction getScaledAssetPath(asset) {\n  var scale = AssetSourceResolver.pickScale(asset.scales, getScale());\n  var scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  var assetDir = getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;\n}\n\nexport default class AssetSourceResolver {\n  constructor(serverUrl, jsbundleUrl, asset) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n\n  isLoadedFromServer() {\n    return !!this.serverUrl;\n  }\n\n  isLoadedFromFileSystem() {\n    return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));\n  }\n\n  defaultAsset() {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n\n    return this.scaledAssetURLNearBundle();\n  }\n\n  assetServerURL() {\n    invariant(!!this.serverUrl, 'need server to load from');\n    return this.fromSource(this.serverUrl + getScaledAssetPath(this.asset) + '?platform=' + Platform.OS + '&hash=' + this.asset.hash);\n  }\n\n  scaledAssetPath() {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n\n  scaledAssetURLNearBundle() {\n    var path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getScaledAssetPath(this.asset));\n  }\n\n  resourceIdentifierWithoutScale() {\n    throw new UnavailabilityError('react-native', 'resourceIdentifierWithoutScale()');\n  }\n\n  drawableFolderInBundle() {\n    throw new UnavailabilityError('react-native', 'drawableFolderInBundle()');\n  }\n\n  fromSource(source) {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, getScale())\n    };\n  }\n\n  static pickScale(scales, deviceScale) {\n    for (var i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n\n    return scales[scales.length - 1] || 1;\n  }\n\n}","map":{"version":3,"sources":["../src/AssetSourceResolver.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from '@unimodules/core';\nimport { UnavailabilityError } from '@unimodules/core';\nimport invariant from 'invariant';\nimport { Dimensions } from 'react-native';\n\ntype PackagerAsset = any;\n\nfunction getBasePath({ httpServerLocation }: PackagerAsset): string {\n  if (httpServerLocation[0] === '/') {\n    return httpServerLocation.substr(1);\n  }\n  return httpServerLocation;\n}\n\nexport type ResolvedAssetSource = {\n  __packager_asset: boolean;\n  width?: number;\n  height?: number;\n  uri: string;\n  scale: number;\n};\n\nfunction getScale(): number {\n  return Dimensions.get('window').scale;\n}\n\nfunction getScaledAssetPath(asset): string {\n  const scale = AssetSourceResolver.pickScale(asset.scales, getScale());\n  const scaleSuffix = scale === 1 ? '' : '@' + scale + 'x';\n  const assetDir = getBasePath(asset);\n  return assetDir + '/' + asset.name + scaleSuffix + '.' + asset.type;\n}\n\nexport default class AssetSourceResolver {\n  serverUrl?: string | null;\n  // where the jsbundle is being run from\n  jsbundleUrl?: string | null;\n  // the asset to resolve\n  asset: PackagerAsset;\n\n  constructor(\n    serverUrl: string | undefined | null,\n    jsbundleUrl: string | undefined | null,\n    asset: PackagerAsset\n  ) {\n    this.serverUrl = serverUrl;\n    this.jsbundleUrl = jsbundleUrl;\n    this.asset = asset;\n  }\n  isLoadedFromServer(): boolean {\n    return !!this.serverUrl;\n  }\n  isLoadedFromFileSystem(): boolean {\n    return !!(this.jsbundleUrl && this.jsbundleUrl.startsWith('file://'));\n  }\n  defaultAsset(): ResolvedAssetSource {\n    if (this.isLoadedFromServer()) {\n      return this.assetServerURL();\n    }\n\n    return this.scaledAssetURLNearBundle();\n  }\n  assetServerURL(): ResolvedAssetSource {\n    invariant(!!this.serverUrl, 'need server to load from');\n    return this.fromSource(\n      this.serverUrl +\n        getScaledAssetPath(this.asset) +\n        '?platform=' +\n        Platform.OS +\n        '&hash=' +\n        this.asset.hash\n    );\n  }\n  scaledAssetPath(): ResolvedAssetSource {\n    return this.fromSource(getScaledAssetPath(this.asset));\n  }\n  scaledAssetURLNearBundle(): ResolvedAssetSource {\n    const path = this.jsbundleUrl || 'file://';\n    return this.fromSource(path + getScaledAssetPath(this.asset));\n  }\n  resourceIdentifierWithoutScale(): ResolvedAssetSource {\n    throw new UnavailabilityError('react-native', 'resourceIdentifierWithoutScale()');\n  }\n  drawableFolderInBundle(): ResolvedAssetSource {\n    throw new UnavailabilityError('react-native', 'drawableFolderInBundle()');\n  }\n  fromSource(source: string): ResolvedAssetSource {\n    return {\n      __packager_asset: true,\n      width: this.asset.width,\n      height: this.asset.height,\n      uri: source,\n      scale: AssetSourceResolver.pickScale(this.asset.scales, getScale()),\n    };\n  }\n\n  static pickScale(scales: number[], deviceScale: number): number {\n    for (let i = 0; i < scales.length; i++) {\n      if (scales[i] >= deviceScale) {\n        return scales[i];\n      }\n    }\n    return scales[scales.length - 1] || 1;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}