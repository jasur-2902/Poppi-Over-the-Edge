{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\expo\\\\build\\\\launch\\\\withExpoRoot.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as Font from 'expo-font';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Notifications from \"../Notifications/Notifications\";\nimport RootErrorBoundary from \"./RootErrorBoundary\";\nexport default function withExpoRoot(AppRootComponent) {\n  return class ExpoRootComponent extends React.Component {\n    componentWillMount() {\n      if (StyleSheet.setStyleAttributePreprocessor) {\n        StyleSheet.setStyleAttributePreprocessor('fontFamily', Font.processFontFamily);\n      }\n\n      var {\n        exp\n      } = this.props;\n\n      if (exp.notification) {\n        Notifications._setInitialNotification(exp.notification);\n      }\n    }\n\n    render() {\n      if (__DEV__) {\n        return React.createElement(RootErrorBoundary, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }\n        }, React.createElement(AppRootComponent, _extends({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }\n        })));\n      } else {\n        return React.createElement(AppRootComponent, _extends({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 24\n          }\n        }));\n      }\n    }\n\n  };\n}","map":{"version":3,"sources":["../../src/launch/withExpoRoot.tsx"],"names":[],"mappings":";;;;AAAA,OAAO,KAAK,IAAZ,MAAsB,WAAtB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;AAGA,OAAO,aAAP;AACA,OAAO,iBAAP;AAaA,eAAc,SAAU,YAAV,CACZ,gBADY,EAC6B;AAEzC,SAAO,MAAM,iBAAN,SAAgC,KAAK,CAAC,SAAtC,CAAkD;AACvD,IAAA,kBAAkB,GAAA;AAEhB,UAAI,UAAU,CAAC,6BAAf,EAA8C;AAC5C,QAAA,UAAU,CAAC,6BAAX,CAAyC,YAAzC,EAAuD,IAAI,CAAC,iBAA5D;AACD;;AAGD,UAAM;AAAE,QAAA;AAAF,UAAU,KAAK,KAArB;;AACA,UAAI,GAAG,CAAC,YAAR,EAAsB;AACpB,QAAA,aAAa,CAAC,uBAAd,CAAsC,GAAG,CAAC,YAA1C;AACD;AACF;;AAED,IAAA,MAAM,GAAA;AACJ,UAAI,OAAJ,EAAa;AACX,eACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,gBAAD,eAAsB,KAAK,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF;AAKD,OAND,MAMO;AACL,eAAO,oBAAC,gBAAD,eAAsB,KAAK,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;AACF;;AAxBsD,GAAzD;AA0BD","sourcesContent":["import * as Font from 'expo-font';\nimport * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport Notifications from '../Notifications/Notifications';\nimport RootErrorBoundary from './RootErrorBoundary';\n\nexport type InitialProps = {\n  exp: {\n    notification?: any;\n    errorRecovery?: any;\n    [key: string]: any;\n  };\n  shell?: boolean;\n  shellManifestUrl?: string;\n  [key: string]: any;\n};\n\nexport default function withExpoRoot<P extends InitialProps>(\n  AppRootComponent: React.ComponentClass<P>\n): React.ComponentClass<P> {\n  return class ExpoRootComponent extends React.Component<P> {\n    componentWillMount() {\n      // TODO: Bacon: add this to RNWeb?\n      if (StyleSheet.setStyleAttributePreprocessor) {\n        StyleSheet.setStyleAttributePreprocessor('fontFamily', Font.processFontFamily);\n      }\n\n      // TODO: Bacon: Pass this in for web\n      const { exp } = this.props;\n      if (exp.notification) {\n        Notifications._setInitialNotification(exp.notification);\n      }\n    }\n\n    render() {\n      if (__DEV__) {\n        return (\n          <RootErrorBoundary>\n            <AppRootComponent {...this.props} />\n          </RootErrorBoundary>\n        );\n      } else {\n        return <AppRootComponent {...this.props} />;\n      }\n    }\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}