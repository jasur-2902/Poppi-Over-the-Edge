{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\expo\\\\build\\\\launch\\\\RootErrorBoundary.web.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default class RootErrorBoundary extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      error: null\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    console.error(error);\n    return {\n      error\n    };\n  }\n\n  render() {\n    if (this.state.error) {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.warningIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      }, \"\\u26A0\\uFE0F\"), React.createElement(Text, {\n        style: [styles.paragraph, {\n          color: '#000'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }, \"A fatal error was encountered while rendering the root component.\"), React.createElement(Text, {\n        style: styles.paragraph,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, \"Review your application logs for more information, and reload the app when the issue is resolved. In production, your app would have crashed.\"));\n    } else {\n      return this.props.children;\n    }\n  }\n\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paragraph: {\n    marginBottom: 10,\n    textAlign: 'center',\n    marginHorizontal: 30,\n    maxWidth: 350,\n    fontSize: 15,\n    color: '#888'\n  },\n  warningIcon: {\n    fontSize: 40,\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["../../src/launch/RootErrorBoundary.web.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAP,MAAkB,OAAlB;;;;AAWA,eAAc,MAAO,iBAAP,SAAiC,KAAK,CAAC,SAAvC,CAA8D;AAA5E,EAAA,WAAA,GAAA;;AACE,SAAA,KAAA,GAAQ;AACN,MAAA,KAAK,EAAE;AADD,KAAR;AA4BD;;AAxBC,SAAO,wBAAP,CAAgC,KAAhC,EAAqC;AAEnC,IAAA,OAAO,CAAC,KAAR,CAAc,KAAd;AACA,WAAO;AAAE,MAAA;AAAF,KAAP;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,QAAI,KAAK,KAAL,CAAW,KAAf,EAAsB;AACpB,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,MAAM,CAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,MAAM,CAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC,MAAM,CAAC,SAAR,EAAmB;AAAE,UAAA,KAAK,EAAE;AAAT,SAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAFF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,MAAM,CAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yJALF,CADF;AAYD,KAbD,MAaO;AACL,aAAO,KAAK,KAAL,CAAW,QAAlB;AACD;AACF;;AA5ByE;AA+B5E,IAAM,MAAM,GAAG,UAAU,CAAC,MAAX,CAAkB;AAC/B,EAAA,SAAS,EAAE;AACT,IAAA,IAAI,EAAE,CADG;AAET,IAAA,UAAU,EAAE,QAFH;AAGT,IAAA,cAAc,EAAE;AAHP,GADoB;AAM/B,EAAA,SAAS,EAAE;AACT,IAAA,YAAY,EAAE,EADL;AAET,IAAA,SAAS,EAAE,QAFF;AAGT,IAAA,gBAAgB,EAAE,EAHT;AAIT,IAAA,QAAQ,EAAE,GAJD;AAKT,IAAA,QAAQ,EAAE,EALD;AAMT,IAAA,KAAK,EAAE;AANE,GANoB;AAc/B,EAAA,WAAW,EAAE;AACX,IAAA,QAAQ,EAAE,EADC;AAEX,IAAA,YAAY,EAAE;AAFH;AAdkB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype State = {\n  error: Error | null;\n};\n\nexport default class RootErrorBoundary extends React.Component<Props, State> {\n  state = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    console.error(error);\n    return { error };\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <View style={styles.container}>\n          <Text style={styles.warningIcon}>⚠️</Text>\n          <Text style={[styles.paragraph, { color: '#000' }]}>\n            A fatal error was encountered while rendering the root component.\n          </Text>\n          <Text style={styles.paragraph}>\n            Review your application logs for more information, and reload the app when the issue is\n            resolved. In production, your app would have crashed.\n          </Text>\n        </View>\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paragraph: {\n    marginBottom: 10,\n    textAlign: 'center',\n    marginHorizontal: 30,\n    maxWidth: 350,\n    fontSize: 15,\n    color: '#888',\n  },\n  warningIcon: {\n    fontSize: 40,\n    marginBottom: 20,\n  },\n});\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}