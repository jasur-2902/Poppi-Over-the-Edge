{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { PermissionStatus } from \"./Permissions.types\";\n\nfunction _getUserMedia(constraints) {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || function () {\n    var error = new Error('Permission unimplemented');\n    error.code = 0;\n    error.name = 'NotAllowedError';\n    throw error;\n  };\n\n  return new Promise((resolve, reject) => {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nfunction askForMediaPermissionAsync(_x) {\n  return _askForMediaPermissionAsync.apply(this, arguments);\n}\n\nfunction _askForMediaPermissionAsync() {\n  _askForMediaPermissionAsync = _asyncToGenerator(function* (options) {\n    try {\n      yield _getUserMedia(options);\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never'\n      };\n    } catch ({\n      message\n    }) {\n      if (message === 'Permission dismissed') {\n        return {\n          status: PermissionStatus.UNDETERMINED,\n          expires: 'never'\n        };\n      } else {\n        return {\n          status: PermissionStatus.DENIED,\n          expires: 'never'\n        };\n      }\n    }\n  });\n  return _askForMediaPermissionAsync.apply(this, arguments);\n}\n\nfunction askForMicrophonePermissionAsync() {\n  return _askForMicrophonePermissionAsync.apply(this, arguments);\n}\n\nfunction _askForMicrophonePermissionAsync() {\n  _askForMicrophonePermissionAsync = _asyncToGenerator(function* () {\n    return yield askForMediaPermissionAsync({\n      audio: true\n    });\n  });\n  return _askForMicrophonePermissionAsync.apply(this, arguments);\n}\n\nfunction askForCameraPermissionAsync() {\n  return _askForCameraPermissionAsync.apply(this, arguments);\n}\n\nfunction _askForCameraPermissionAsync() {\n  _askForCameraPermissionAsync = _asyncToGenerator(function* () {\n    return yield askForMediaPermissionAsync({\n      video: true\n    });\n  });\n  return _askForCameraPermissionAsync.apply(this, arguments);\n}\n\nfunction askForLocationPermissionAsync() {\n  return _askForLocationPermissionAsync.apply(this, arguments);\n}\n\nfunction _askForLocationPermissionAsync() {\n  _askForLocationPermissionAsync = _asyncToGenerator(function* () {\n    return new Promise(resolve => {\n      navigator.geolocation.getCurrentPosition(() => resolve({\n        status: PermissionStatus.GRANTED,\n        expires: 'never'\n      }), (_ref) => {\n        var {\n          code\n        } = _ref;\n\n        if (code === 1) {\n          resolve({\n            status: PermissionStatus.DENIED,\n            expires: 'never'\n          });\n        } else {\n          resolve({\n            status: PermissionStatus.UNDETERMINED,\n            expires: 'never'\n          });\n        }\n      });\n    });\n  });\n  return _askForLocationPermissionAsync.apply(this, arguments);\n}\n\nfunction getPermissionAsync(_x2, _x3) {\n  return _getPermissionAsync.apply(this, arguments);\n}\n\nfunction _getPermissionAsync() {\n  _getPermissionAsync = _asyncToGenerator(function* (permission, shouldAsk) {\n    switch (permission) {\n      case 'userFacingNotifications':\n      case 'notifications':\n        {\n          var {\n            Notification = {}\n          } = window;\n\n          if (Notification.requestPermission) {\n            var status = Notification.permission;\n\n            if (shouldAsk) {\n              status = yield Notification.requestPermission();\n            }\n\n            if (!status || status === 'default') {\n              return {\n                status: PermissionStatus.UNDETERMINED,\n                expires: 'never'\n              };\n            }\n\n            return {\n              status,\n              expires: 'never'\n            };\n          }\n        }\n        break;\n\n      case 'location':\n        {\n          var {\n            navigator: _navigator = {}\n          } = window;\n\n          if (_navigator.permissions) {\n            var {\n              state\n            } = yield _navigator.permissions.query({\n              name: 'geolocation'\n            });\n\n            if (state !== PermissionStatus.GRANTED && state !== PermissionStatus.DENIED) {\n              if (shouldAsk) {\n                return yield askForLocationPermissionAsync();\n              }\n\n              return {\n                status: PermissionStatus.UNDETERMINED,\n                expires: 'never'\n              };\n            }\n\n            return {\n              status: state,\n              expires: 'never'\n            };\n          } else if (shouldAsk) {\n            return yield askForLocationPermissionAsync();\n          }\n        }\n        break;\n\n      case 'audioRecording':\n        if (shouldAsk) {\n          return yield askForMicrophonePermissionAsync();\n        } else {}\n\n        break;\n\n      case 'camera':\n        if (shouldAsk) {\n          return yield askForCameraPermissionAsync();\n        } else {}\n\n        break;\n\n      default:\n        break;\n    }\n\n    return {\n      status: PermissionStatus.UNDETERMINED,\n      expires: 'never'\n    };\n  });\n  return _getPermissionAsync.apply(this, arguments);\n}\n\nexport default {\n  get name() {\n    return 'ExpoPermissions';\n  },\n\n  getAsync(permissionTypes) {\n    return _asyncToGenerator(function* () {\n      var results = {};\n\n      for (var permissionType of new Set(permissionTypes)) {\n        results[permissionType] = yield getPermissionAsync(permissionType, false);\n      }\n\n      return results;\n    })();\n  },\n\n  askAsync(permissionTypes) {\n    return _asyncToGenerator(function* () {\n      var results = {};\n\n      for (var permissionType of new Set(permissionTypes)) {\n        results[permissionType] = yield getPermissionAsync(permissionType, true);\n      }\n\n      return results;\n    })();\n  }\n\n};","map":{"version":3,"sources":["../src/ExpoPermissions.web.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  PermissionInfo,\n  PermissionMap,\n  PermissionStatus,\n  PermissionType,\n} from './Permissions.types';\n\n/*\n * TODO: Bacon: https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Permissions\n * Add messages to manifest like we do with iOS info.plist\n */\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia#Using_the_new_API_in_older_browsers\n// Older browsers might not implement mediaDevices at all, so we set an empty object first\nfunction _getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n\n  // First get ahold of the legacy getUserMedia, if present\n  const getUserMedia =\n    navigator.getUserMedia ||\n    (navigator as any).webkitGetUserMedia ||\n    (navigator as any).mozGetUserMedia ||\n    function() {\n      const error: any = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n\n  return new Promise((resolve, reject) => {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nasync function askForMediaPermissionAsync(\n  options: MediaStreamConstraints\n): Promise<PermissionInfo> {\n  try {\n    await _getUserMedia(options);\n    return { status: PermissionStatus.GRANTED, expires: 'never' };\n  } catch ({ message }) {\n    // name: NotAllowedError\n    // code: 0\n    if (message === 'Permission dismissed') {\n      // message: Permission dismissed\n      return { status: PermissionStatus.UNDETERMINED, expires: 'never' };\n    } else {\n      // TODO: Bacon: [OSX] The system could deny access to chrome.\n      // TODO: Bacon: add: { status: 'unimplemented' }\n      // message: Permission denied\n      return { status: PermissionStatus.DENIED, expires: 'never' };\n    }\n  }\n}\n\nasync function askForMicrophonePermissionAsync(): Promise<PermissionInfo> {\n  return await askForMediaPermissionAsync({ audio: true });\n}\n\nasync function askForCameraPermissionAsync(): Promise<PermissionInfo> {\n  return await askForMediaPermissionAsync({ video: true });\n}\n\nasync function askForLocationPermissionAsync(): Promise<PermissionInfo> {\n  return new Promise(resolve => {\n    navigator.geolocation.getCurrentPosition(\n      () => resolve({ status: PermissionStatus.GRANTED, expires: 'never' }),\n      ({ code }: PositionError) => {\n        // https://developer.mozilla.org/en-US/docs/Web/API/PositionError/code\n        if (code === 1) {\n          resolve({ status: PermissionStatus.DENIED, expires: 'never' });\n        } else {\n          resolve({ status: PermissionStatus.UNDETERMINED, expires: 'never' });\n        }\n      }\n    );\n  });\n}\n\nasync function getPermissionAsync(\n  permission: PermissionType,\n  shouldAsk: boolean\n): Promise<PermissionInfo> {\n  switch (permission) {\n    case 'userFacingNotifications':\n    case 'notifications':\n      {\n        const { Notification = {} } = window as any;\n        if (Notification.requestPermission) {\n          let status = Notification.permission;\n          if (shouldAsk) {\n            status = await Notification.requestPermission();\n          }\n          if (!status || status === 'default') {\n            return { status: PermissionStatus.UNDETERMINED, expires: 'never' };\n          }\n          return { status, expires: 'never' };\n        }\n      }\n      break;\n    case 'location':\n      {\n        const { navigator = {} } = window as any;\n        if (navigator.permissions) {\n          const { state } = await navigator.permissions.query({ name: 'geolocation' });\n          if (state !== PermissionStatus.GRANTED && state !== PermissionStatus.DENIED) {\n            if (shouldAsk) {\n              return await askForLocationPermissionAsync();\n            }\n            return { status: PermissionStatus.UNDETERMINED, expires: 'never' };\n          }\n\n          return { status: state, expires: 'never' };\n        } else if (shouldAsk) {\n          // TODO: Bacon: should this function as ask async when not in chrome?\n          return await askForLocationPermissionAsync();\n        }\n      }\n      break;\n    case 'audioRecording':\n      if (shouldAsk) {\n        return await askForMicrophonePermissionAsync();\n      } else {\n        //TODO: Bacon: Is it possible to get this permission?\n      }\n      break;\n    case 'camera':\n      if (shouldAsk) {\n        return await askForCameraPermissionAsync();\n      } else {\n        //TODO: Bacon: Is it possible to get this permission?\n      }\n      break;\n    default:\n      break;\n  }\n  return { status: PermissionStatus.UNDETERMINED, expires: 'never' };\n}\n\nexport default {\n  get name(): string {\n    return 'ExpoPermissions';\n  },\n\n  async getAsync(permissionTypes: PermissionType[]): Promise<PermissionMap> {\n    const results = {};\n    for (const permissionType of new Set(permissionTypes)) {\n      results[permissionType] = await getPermissionAsync(permissionType, /* shouldAsk */ false);\n    }\n    return results;\n  },\n\n  async askAsync(permissionTypes: PermissionType[]): Promise<PermissionMap> {\n    const results = {};\n    for (const permissionType of new Set(permissionTypes)) {\n      results[permissionType] = await getPermissionAsync(permissionType, /* shouldAsk */ true);\n    }\n    return results;\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}