{"ast":null,"code":"import AnimatedNode from \"./AnimatedNode\";\nimport { set } from \"../base\";\nimport { val } from \"../utils\";\nimport { evaluateOnce } from \"../derived/evaluateOnce\";\nimport interpolate from \"../derived/interpolate\";\nimport ReanimatedModule from \"../ReanimatedModule\";\n\nfunction sanitizeValue(value) {\n  return value === null || value === undefined || typeof value === 'string' ? value : Number(value);\n}\n\nexport default class AnimatedValue extends AnimatedNode {\n  constructor(value) {\n    super({\n      type: 'value',\n      value: sanitizeValue(value)\n    });\n    this._startingValue = this._value = value;\n    this._animation = null;\n  }\n\n  __detach() {\n    ReanimatedModule.getValue(this.__nodeID, val => this.__nodeConfig.value = val);\n\n    this.__detachAnimation(this._animation);\n\n    super.__detach();\n  }\n\n  __detachAnimation(animation) {\n    animation && animation.__detach();\n\n    if (this._animation === animation) {\n      this._animation = null;\n    }\n  }\n\n  __attachAnimation(animation) {\n    this.__detachAnimation(this._animation);\n\n    this._animation = animation;\n  }\n\n  __onEvaluate() {\n    if (this.__inputNodes && this.__inputNodes.length) {\n      this.__inputNodes.forEach(val);\n    }\n\n    return this._value + this._offset;\n  }\n\n  _updateValue(value) {\n    this._value = value;\n\n    this.__forceUpdateCache(value);\n  }\n\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n\n    evaluateOnce(set(this, value), this);\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-reanimated/src/core/AnimatedValue.js"],"names":["AnimatedNode","set","val","evaluateOnce","interpolate","ReanimatedModule","sanitizeValue","value","undefined","Number","AnimatedValue","constructor","type","_startingValue","_value","_animation","__detach","getValue","__nodeID","__nodeConfig","__detachAnimation","animation","__attachAnimation","__onEvaluate","__inputNodes","length","forEach","_offset","_updateValue","__forceUpdateCache","setValue","config"],"mappings":"AAAA,OAAOA,YAAP;AACA,SAASC,GAAT;AACA,SAASC,GAAT;AACA,SAASC,YAAT;AACA,OAAOC,WAAP;AACA,OAAOC,gBAAP;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAOA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKC,SAA5B,IAAyC,OAAOD,KAAP,KAAiB,QAA1D,GACHA,KADG,GAEHE,MAAM,CAACF,KAAD,CAFV;AAGD;;AAED,eAAe,MAAMG,aAAN,SAA4BV,YAA5B,CAAyC;AACtDW,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,UAAM;AAAEK,MAAAA,IAAI,EAAE,OAAR;AAAiBL,MAAAA,KAAK,EAAED,aAAa,CAACC,KAAD;AAArC,KAAN;AACA,SAAKM,cAAL,GAAsB,KAAKC,MAAL,GAAcP,KAApC;AACA,SAAKQ,UAAL,GAAkB,IAAlB;AACD;;AAEDC,EAAAA,QAAQ,GAAG;AACTX,IAAAA,gBAAgB,CAACY,QAAjB,CACE,KAAKC,QADP,EAEEhB,GAAG,IAAK,KAAKiB,YAAL,CAAkBZ,KAAlB,GAA0BL,GAFpC;;AAIA,SAAKkB,iBAAL,CAAuB,KAAKL,UAA5B;;AACA,UAAMC,QAAN;AACD;;AAEDI,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AAC3BA,IAAAA,SAAS,IAAIA,SAAS,CAACL,QAAV,EAAb;;AACA,QAAI,KAAKD,UAAL,KAAoBM,SAAxB,EAAmC;AACjC,WAAKN,UAAL,GAAkB,IAAlB;AACD;AACF;;AAEDO,EAAAA,iBAAiB,CAACD,SAAD,EAAY;AAC3B,SAAKD,iBAAL,CAAuB,KAAKL,UAA5B;;AACA,SAAKA,UAAL,GAAkBM,SAAlB;AACD;;AAEDE,EAAAA,YAAY,GAAG;AACb,QAAI,KAAKC,YAAL,IAAqB,KAAKA,YAAL,CAAkBC,MAA3C,EAAmD;AACjD,WAAKD,YAAL,CAAkBE,OAAlB,CAA0BxB,GAA1B;AACD;;AACD,WAAO,KAAKY,MAAL,GAAc,KAAKa,OAA1B;AACD;;AAEDC,EAAAA,YAAY,CAACrB,KAAD,EAAQ;AAClB,SAAKO,MAAL,GAAcP,KAAd;;AACA,SAAKsB,kBAAL,CAAwBtB,KAAxB;AACD;;AAEDuB,EAAAA,QAAQ,CAACvB,KAAD,EAAQ;AACd,SAAKa,iBAAL,CAAuB,KAAKL,UAA5B;;AACAZ,IAAAA,YAAY,CAACF,GAAG,CAAC,IAAD,EAAOM,KAAP,CAAJ,EAAmB,IAAnB,CAAZ;AACD;;AAEDH,EAAAA,WAAW,CAAC2B,MAAD,EAAS;AAClB,WAAO3B,WAAW,CAAC,IAAD,EAAO2B,MAAP,CAAlB;AACD;;AA/CqD","sourcesContent":["import AnimatedNode from './AnimatedNode';\nimport { set } from '../base';\nimport { val } from '../utils';\nimport { evaluateOnce } from '../derived/evaluateOnce';\nimport interpolate from '../derived/interpolate';\nimport ReanimatedModule from '../ReanimatedModule';\n\nfunction sanitizeValue(value) {\n  return value === null || value === undefined || typeof value === 'string'\n    ? value\n    : Number(value);\n}\n\nexport default class AnimatedValue extends AnimatedNode {\n  constructor(value) {\n    super({ type: 'value', value: sanitizeValue(value) });\n    this._startingValue = this._value = value;\n    this._animation = null;\n  }\n\n  __detach() {\n    ReanimatedModule.getValue(\n      this.__nodeID,\n      val => (this.__nodeConfig.value = val)\n    );\n    this.__detachAnimation(this._animation);\n    super.__detach();\n  }\n\n  __detachAnimation(animation) {\n    animation && animation.__detach();\n    if (this._animation === animation) {\n      this._animation = null;\n    }\n  }\n\n  __attachAnimation(animation) {\n    this.__detachAnimation(this._animation);\n    this._animation = animation;\n  }\n\n  __onEvaluate() {\n    if (this.__inputNodes && this.__inputNodes.length) {\n      this.__inputNodes.forEach(val);\n    }\n    return this._value + this._offset;\n  }\n\n  _updateValue(value) {\n    this._value = value;\n    this.__forceUpdateCache(value);\n  }\n\n  setValue(value) {\n    this.__detachAnimation(this._animation);\n    evaluateOnce(set(this, value), this);\n  }\n\n  interpolate(config) {\n    return interpolate(this, config);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}