{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport GoogleAuthData from \"./GoogleAuthData\";\n\nclass GoogleIdentity extends GoogleAuthData {\n  constructor(props) {\n    super(props);\n    var {\n      uid,\n      email,\n      displayName,\n      photoURL,\n      firstName,\n      lastName\n    } = props;\n    this.uid = uid;\n    this.email = email;\n    this.displayName = displayName;\n    this.photoURL = photoURL;\n    this.firstName = firstName;\n    this.lastName = lastName;\n  }\n\n  equals(other) {\n    if (!super.equals(other) || !(other instanceof GoogleIdentity)) {\n      return false;\n    }\n\n    return this.displayName === other.displayName && this.photoURL === other.photoURL && this.uid === other.uid && this.email === other.email && this.firstName === other.firstName && this.lastName === other.lastName;\n  }\n\n  toJSON() {\n    return _objectSpread(_objectSpread({}, super.toJSON()), {}, {\n      uid: this.uid,\n      email: this.email,\n      displayName: this.displayName,\n      photoURL: this.photoURL,\n      firstName: this.firstName,\n      lastName: this.lastName\n    });\n  }\n\n}\n\nexport default GoogleIdentity;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/expo-google-sign-in/src/GoogleIdentity.js"],"names":["GoogleAuthData","GoogleIdentity","constructor","props","uid","email","displayName","photoURL","firstName","lastName","equals","other","toJSON"],"mappings":";;;;;;AACA,OAAOA,cAAP;;AAEA,MAAMC,cAAN,SAA6BD,cAA7B,CAA4C;AAQ1CE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,QAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,KAAP;AAAcC,MAAAA,WAAd;AAA2BC,MAAAA,QAA3B;AAAqCC,MAAAA,SAArC;AAAgDC,MAAAA;AAAhD,QAA6DN,KAAnE;AAEA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;;AAEDC,EAAAA,MAAM,CAACC,KAAD,EAAuB;AAC3B,QAAI,CAAC,MAAMD,MAAN,CAAaC,KAAb,CAAD,IAAwB,EAAEA,KAAK,YAAYV,cAAnB,CAA5B,EAAgE;AAC9D,aAAO,KAAP;AACD;;AAED,WACE,KAAKK,WAAL,KAAqBK,KAAK,CAACL,WAA3B,IACA,KAAKC,QAAL,KAAkBI,KAAK,CAACJ,QADxB,IAEA,KAAKH,GAAL,KAAaO,KAAK,CAACP,GAFnB,IAGA,KAAKC,KAAL,KAAeM,KAAK,CAACN,KAHrB,IAIA,KAAKG,SAAL,KAAmBG,KAAK,CAACH,SAJzB,IAKA,KAAKC,QAAL,KAAkBE,KAAK,CAACF,QAN1B;AAQD;;AAEDG,EAAAA,MAAM,GAAsB;AAC1B,2CACK,MAAMA,MAAN,EADL;AAEER,MAAAA,GAAG,EAAE,KAAKA,GAFZ;AAGEC,MAAAA,KAAK,EAAE,KAAKA,KAHd;AAIEC,MAAAA,WAAW,EAAE,KAAKA,WAJpB;AAKEC,MAAAA,QAAQ,EAAE,KAAKA,QALjB;AAMEC,MAAAA,SAAS,EAAE,KAAKA,SANlB;AAOEC,MAAAA,QAAQ,EAAE,KAAKA;AAPjB;AASD;;AA7CyC;;AAgD5C,eAAeR,cAAf","sourcesContent":["// @flow\nimport GoogleAuthData from './GoogleAuthData';\n\nclass GoogleIdentity extends GoogleAuthData {\n  uid: string;\n  email: string;\n  displayName: ?string;\n  photoURL: ?string;\n  firstName: ?string;\n  lastName: ?string;\n\n  constructor(props) {\n    super(props);\n    const { uid, email, displayName, photoURL, firstName, lastName } = props;\n\n    this.uid = uid;\n    this.email = email;\n    this.displayName = displayName;\n    this.photoURL = photoURL;\n    this.firstName = firstName;\n    this.lastName = lastName;\n  }\n\n  equals(other: ?any): boolean {\n    if (!super.equals(other) || !(other instanceof GoogleIdentity)) {\n      return false;\n    }\n\n    return (\n      this.displayName === other.displayName &&\n      this.photoURL === other.photoURL &&\n      this.uid === other.uid &&\n      this.email === other.email &&\n      this.firstName === other.firstName &&\n      this.lastName === other.lastName\n    );\n  }\n\n  toJSON(): { [string]: any } {\n    return {\n      ...super.toJSON(),\n      uid: this.uid,\n      email: this.email,\n      displayName: this.displayName,\n      photoURL: this.photoURL,\n      firstName: this.firstName,\n      lastName: this.lastName,\n    };\n  }\n}\n\nexport default GoogleIdentity;\n"]},"metadata":{},"sourceType":"module"}