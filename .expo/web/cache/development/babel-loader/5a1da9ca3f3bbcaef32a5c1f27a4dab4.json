{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { Asset } from 'expo-asset';\nimport { getSizeAsync } from \"./ImageUtils\";\nimport fileInfoAsync from \"./fileInfoAsync\";\n\nfunction isImageType(type) {\n  return type.match(/(jpeg|jpg|gif|png|bmp)$/) != null;\n}\n\nfunction getExtension(url) {\n  return url.split('.').pop().split('?')[0].split('#')[0].toLowerCase();\n}\n\nfunction fromUriAsync(_x, _x2) {\n  return _fromUriAsync.apply(this, arguments);\n}\n\nfunction _fromUriAsync() {\n  _fromUriAsync = _asyncToGenerator(function* (remoteUri, fileName) {\n    var {\n      uri,\n      name,\n      hash\n    } = yield fileInfoAsync(remoteUri, fileName);\n\n    if (uri) {\n      var type = getExtension(name);\n      var width = undefined;\n      var height = undefined;\n\n      if (isImageType(type)) {\n        var size = yield getSizeAsync(uri);\n        width = size.width;\n        height = size.height;\n      }\n\n      return new Asset({\n        name,\n        type,\n        hash,\n        uri,\n        width,\n        height\n      });\n    }\n  });\n  return _fromUriAsync.apply(this, arguments);\n}\n\nexport default fromUriAsync;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/expo-asset-utils/src/fromUriAsync.js"],"names":["Asset","getSizeAsync","fileInfoAsync","isImageType","type","match","getExtension","url","split","pop","toLowerCase","fromUriAsync","remoteUri","fileName","uri","name","hash","width","undefined","height","size"],"mappings":";;;;AACA,SAASA,KAAT,QAAsB,YAAtB;AACA,SAASC,YAAT;AACA,OAAOC,aAAP;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA4C;AAC1C,SAAOA,IAAI,CAACC,KAAL,CAAW,yBAAX,KAAyC,IAAhD;AACD;;AAED,SAASC,YAAT,CAAsBC,GAAtB,EAA2C;AACzC,SAAOA,GAAG,CACPC,KADI,CACE,GADF,EAEJC,GAFI,GAGJD,KAHI,CAGE,GAHF,EAGO,CAHP,EAIJA,KAJI,CAIE,GAJF,EAIO,CAJP,EAKJE,WALI,EAAP;AAMD;;SAEcC,Y;;;;;oCAAf,WAA4BC,SAA5B,EAA+CC,QAA/C,EAAkF;AAChF,QAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,IAAP;AAAaC,MAAAA;AAAb,cAA4Bd,aAAa,CAACU,SAAD,EAAYC,QAAZ,CAA/C;;AAEA,QAAIC,GAAJ,EAAS;AACP,UAAMV,IAAI,GAAGE,YAAY,CAACS,IAAD,CAAzB;AACA,UAAIE,KAAK,GAAGC,SAAZ;AACA,UAAIC,MAAM,GAAGD,SAAb;;AACA,UAAIf,WAAW,CAACC,IAAD,CAAf,EAAuB;AACrB,YAAMgB,IAAI,SAASnB,YAAY,CAACa,GAAD,CAA/B;AACAG,QAAAA,KAAK,GAAGG,IAAI,CAACH,KAAb;AACAE,QAAAA,MAAM,GAAGC,IAAI,CAACD,MAAd;AACD;;AAED,aAAO,IAAInB,KAAJ,CAAU;AAAEe,QAAAA,IAAF;AAAQX,QAAAA,IAAR;AAAcY,QAAAA,IAAd;AAAoBF,QAAAA,GAApB;AAAyBG,QAAAA,KAAzB;AAAgCE,QAAAA;AAAhC,OAAV,CAAP;AACD;AACF,G;;;;AAED,eAAeR,YAAf","sourcesContent":["// @flow\nimport { Asset } from 'expo-asset';\nimport { getSizeAsync } from './ImageUtils';\nimport fileInfoAsync from './fileInfoAsync';\n\nfunction isImageType(type: string): boolean {\n  return type.match(/(jpeg|jpg|gif|png|bmp)$/) != null;\n}\n\nfunction getExtension(url: string): string {\n  return url\n    .split('.')\n    .pop()\n    .split('?')[0]\n    .split('#')[0]\n    .toLowerCase();\n}\n\nasync function fromUriAsync(remoteUri: string, fileName: ?string): Promise<Asset> {\n  const { uri, name, hash } = await fileInfoAsync(remoteUri, fileName);\n\n  if (uri) {\n    const type = getExtension(name);\n    let width = undefined;\n    let height = undefined;\n    if (isImageType(type)) {\n      const size = await getSizeAsync(uri);\n      width = size.width;\n      height = size.height;\n    }\n\n    return new Asset({ name, type, hash, uri, width, height });\n  }\n}\n\nexport default fromUriAsync;\n"]},"metadata":{},"sourceType":"module"}