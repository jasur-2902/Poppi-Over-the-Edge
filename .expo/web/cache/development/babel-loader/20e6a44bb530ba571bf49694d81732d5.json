{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { UnavailabilityError } from '@unimodules/core';\nimport ExponentSegment from \"./ExponentSegment\";\nexport function initialize(options) {\n  if (Platform.OS === 'android') {\n    ExponentSegment.initializeAndroid(options.androidWriteKey);\n  } else if (Platform.OS === 'ios') {\n    ExponentSegment.initializeIOS(options.iosWriteKey);\n  } else {\n    throw new UnavailabilityError('expo-analytics-segment', 'initialize');\n  }\n}\nexport function identify(userId) {\n  if (!ExponentSegment.identify) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identify');\n  }\n\n  ExponentSegment.identify(userId);\n}\nexport function identifyWithTraits(userId, traits) {\n  if (!ExponentSegment.identifyWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identifyWithTraits');\n  }\n\n  ExponentSegment.identifyWithTraits(userId, traits);\n}\nexport function group(groupId) {\n  if (!ExponentSegment.group) {\n    throw new UnavailabilityError('expo-analytics-segment', 'group');\n  }\n\n  ExponentSegment.group(groupId);\n}\nexport function groupWithTraits(groupId, traits) {\n  if (!ExponentSegment.groupWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'groupWithTraits');\n  }\n\n  ExponentSegment.groupWithTraits(groupId, traits);\n}\nexport function alias(_x, _x2) {\n  return _alias.apply(this, arguments);\n}\n\nfunction _alias() {\n  _alias = _asyncToGenerator(function* (newId, options) {\n    if (!ExponentSegment.alias) {\n      throw new UnavailabilityError('expo-analytics-segment', 'alias');\n    }\n\n    return yield ExponentSegment.alias(newId, options);\n  });\n  return _alias.apply(this, arguments);\n}\n\nexport function reset() {\n  if (!ExponentSegment.reset) {\n    throw new UnavailabilityError('expo-analytics-segment', 'reset');\n  }\n\n  ExponentSegment.reset();\n}\nexport function track(event) {\n  if (!ExponentSegment.track) {\n    throw new UnavailabilityError('expo-analytics-segment', 'track');\n  }\n\n  ExponentSegment.track(event);\n}\nexport function trackWithProperties(event, properties) {\n  if (!ExponentSegment.trackWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'trackWithProperties');\n  }\n\n  ExponentSegment.trackWithProperties(event, properties);\n}\nexport function screen(screenName) {\n  if (!ExponentSegment.screen) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screen');\n  }\n\n  ExponentSegment.screen(screenName);\n}\nexport function screenWithProperties(event, properties) {\n  if (!ExponentSegment.screenWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screenWithProperties');\n  }\n\n  ExponentSegment.screenWithProperties(event, properties);\n}\nexport function flush() {\n  if (!ExponentSegment.flush) {\n    throw new UnavailabilityError('expo-analytics-segment', 'flush');\n  }\n\n  ExponentSegment.flush();\n}\nexport function getEnabledAsync() {\n  return _getEnabledAsync.apply(this, arguments);\n}\n\nfunction _getEnabledAsync() {\n  _getEnabledAsync = _asyncToGenerator(function* () {\n    if (!ExponentSegment.getEnabledAsync) {\n      throw new UnavailabilityError('expo-analytics-segment', 'getEnabledAsync');\n    }\n\n    var isEnabledNumber = yield ExponentSegment.getEnabledAsync();\n    return !!isEnabledNumber;\n  });\n  return _getEnabledAsync.apply(this, arguments);\n}\n\nexport function setEnabledAsync(_x3) {\n  return _setEnabledAsync.apply(this, arguments);\n}\n\nfunction _setEnabledAsync() {\n  _setEnabledAsync = _asyncToGenerator(function* (enabled) {\n    if (!ExponentSegment.setEnabledAsync) {\n      throw new UnavailabilityError('expo-analytics-segment', 'setEnabledAsync');\n    }\n\n    yield ExponentSegment.setEnabledAsync(enabled);\n  });\n  return _setEnabledAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/Segment.ts"],"names":[],"mappings":"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","sourcesContent":["import { Platform } from 'react-native';\nimport { UnavailabilityError } from '@unimodules/core';\n\nimport ExponentSegment from './ExponentSegment';\n\nexport type SegmentOptions = {\n  androidWriteKey?: string;\n  iosWriteKey?: string;\n};\n\nexport function initialize(options: SegmentOptions): void {\n  if (Platform.OS === 'android') {\n    ExponentSegment.initializeAndroid(options.androidWriteKey);\n  } else if (Platform.OS === 'ios') {\n    ExponentSegment.initializeIOS(options.iosWriteKey);\n  } else {\n    throw new UnavailabilityError('expo-analytics-segment', 'initialize');\n  }\n}\n\nexport function identify(userId: string): void {\n  if (!ExponentSegment.identify) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identify');\n  }\n  ExponentSegment.identify(userId);\n}\n\nexport function identifyWithTraits(userId: string, traits: { [key: string]: any }): void {\n  if (!ExponentSegment.identifyWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'identifyWithTraits');\n  }\n  ExponentSegment.identifyWithTraits(userId, traits);\n}\n\nexport function group(groupId: string): void {\n  if (!ExponentSegment.group) {\n    throw new UnavailabilityError('expo-analytics-segment', 'group');\n  }\n  ExponentSegment.group(groupId);\n}\n\nexport function groupWithTraits(groupId: string, traits: { [key: string]: any }): void {\n  if (!ExponentSegment.groupWithTraits) {\n    throw new UnavailabilityError('expo-analytics-segment', 'groupWithTraits');\n  }\n  ExponentSegment.groupWithTraits(groupId, traits);\n}\n\nexport async function alias(newId: string, options?: { [key: string]: any }): Promise<boolean> {\n  if (!ExponentSegment.alias) {\n    throw new UnavailabilityError('expo-analytics-segment', 'alias');\n  }\n  return await ExponentSegment.alias(newId, options);\n}\n\nexport function reset(): void {\n  if (!ExponentSegment.reset) {\n    throw new UnavailabilityError('expo-analytics-segment', 'reset');\n  }\n  ExponentSegment.reset();\n}\n\nexport function track(event: string): void {\n  if (!ExponentSegment.track) {\n    throw new UnavailabilityError('expo-analytics-segment', 'track');\n  }\n  ExponentSegment.track(event);\n}\n\nexport function trackWithProperties(event: string, properties: { [key: string]: any }): void {\n  if (!ExponentSegment.trackWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'trackWithProperties');\n  }\n  ExponentSegment.trackWithProperties(event, properties);\n}\n\nexport function screen(screenName: string): void {\n  if (!ExponentSegment.screen) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screen');\n  }\n  ExponentSegment.screen(screenName);\n}\n\nexport function screenWithProperties(event: string, properties: { [key: string]: any }): void {\n  if (!ExponentSegment.screenWithProperties) {\n    throw new UnavailabilityError('expo-analytics-segment', 'screenWithProperties');\n  }\n  ExponentSegment.screenWithProperties(event, properties);\n}\n\nexport function flush(): void {\n  if (!ExponentSegment.flush) {\n    throw new UnavailabilityError('expo-analytics-segment', 'flush');\n  }\n  ExponentSegment.flush();\n}\n\nexport async function getEnabledAsync(): Promise<boolean> {\n  if (!ExponentSegment.getEnabledAsync) {\n    throw new UnavailabilityError('expo-analytics-segment', 'getEnabledAsync');\n  }\n  const isEnabledNumber = await ExponentSegment.getEnabledAsync();\n  return !!isEnabledNumber;\n}\n\nexport async function setEnabledAsync(enabled: boolean): Promise<void> {\n  if (!ExponentSegment.setEnabledAsync) {\n    throw new UnavailabilityError('expo-analytics-segment', 'setEnabledAsync');\n  }\n  await ExponentSegment.setEnabledAsync(enabled);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}