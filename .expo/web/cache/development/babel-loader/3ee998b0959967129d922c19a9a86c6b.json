{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport ExponentImageManipulator from \"./ExponentImageManipulator\";\nimport { UnavailabilityError } from 'expo-errors';\nexport function manipulateAsync(_x) {\n  return _manipulateAsync.apply(this, arguments);\n}\n\nfunction _manipulateAsync() {\n  _manipulateAsync = _asyncToGenerator(function* (uri) {\n    var actions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var saveOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!(typeof uri === 'string')) {\n      throw new TypeError(\"The \\\"uri\\\" argument must be a string\");\n    }\n\n    if (!ExponentImageManipulator.manipulate) {\n      throw new UnavailabilityError('ImageManipulator', 'manipulateAsync');\n    }\n\n    return yield ExponentImageManipulator.manipulate(uri, actions, saveOptions);\n  });\n  return _manipulateAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../../src/ImageManipulator/ImageManipulator.ts"],"names":[],"mappings":";;;;AAAA,OAAO,wBAAP;AACA,SAAS,mBAAT,QAAoC,aAApC;AA6BA,gBAAsB,eAAtB;AAAA;AAAA;;;uCAAO,WACL,GADK,EAGwB;AAAA,QAD7B,OAC6B,uEADS,EACT;AAAA,QAA7B,WAA6B,uEAAF,EAAE;;AAE7B,QAAI,EAAE,OAAO,GAAP,KAAe,QAAjB,CAAJ,EAAgC;AAC9B,YAAM,IAAI,SAAJ,yCAAN;AACD;;AACD,QAAI,CAAC,wBAAwB,CAAC,UAA9B,EAA0C;AACxC,YAAM,IAAI,mBAAJ,CAAwB,kBAAxB,EAA4C,iBAA5C,CAAN;AACD;;AACD,iBAAa,wBAAwB,CAAC,UAAzB,CAAoC,GAApC,EAAyC,OAAzC,EAAkD,WAAlD,CAAb;AACD,G","sourcesContent":["import ExponentImageManipulator from './ExponentImageManipulator';\nimport { UnavailabilityError } from 'expo-errors';\n\ntype ImageResult = {\n  uri: string;\n  width: number;\n  height: number;\n  base64?: string;\n};\n\ntype CropParameters = {\n  originX: number;\n  originY: number;\n  width: number;\n  height: number;\n};\n\ntype ImageManipulationActions = {\n  resize?: { width?: number; height?: number };\n  rotate?: number;\n  flip?: { vertical?: boolean; horizontal?: boolean };\n  crop?: CropParameters;\n};\n\ntype SaveOptions = {\n  base64?: boolean;\n  compress?: number;\n  format?: 'jpeg' | 'png';\n};\n\nexport async function manipulateAsync(\n  uri: string,\n  actions: ImageManipulationActions[] = [],\n  saveOptions: SaveOptions = {}\n): Promise<ImageResult> {\n  if (!(typeof uri === 'string')) {\n    throw new TypeError(`The \"uri\" argument must be a string`);\n  }\n  if (!ExponentImageManipulator.manipulate) {\n    throw new UnavailabilityError('ImageManipulator', 'manipulateAsync');\n  }\n  return await ExponentImageManipulator.manipulate(uri, actions, saveOptions);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}