{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\src\\\\Menu\\\\LevelSelection.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { FlatGrid } from 'react-native-super-grid';\nimport { Card, ListItem, Icon } from 'react-native-elements';\nimport colors from \"../../assets/constants/colors\";\nimport Button from \"../../assets/Button\";\n\nvar LevelSelection = (_ref) => {\n  var {\n    numPlayers,\n    onNumPlayersChange,\n    startGame\n  } = _ref;\n  var [items, setItems] = React.useState([{\n    name: 'TURQUOISE',\n    code: '#1abc9c',\n    level: 'Level 1'\n  }, {\n    name: 'EMERALD',\n    code: '#2ecc71',\n    level: 'Level 2'\n  }, {\n    name: 'PETER RIVER',\n    code: '#3498db',\n    level: 'Level 3'\n  }, {\n    name: 'AMETHYST',\n    code: '#9b59b6',\n    level: 'Level 4'\n  }, {\n    name: 'WET ASPHALT',\n    code: '#34495e',\n    level: 'Level 5'\n  }, {\n    name: 'GREEN SEA',\n    code: '#16a085',\n    level: 'Level 6'\n  }, {\n    name: 'NEPHRITIS',\n    code: '#27ae60',\n    level: 'Level 7'\n  }, {\n    name: 'BELIZE HOLE',\n    code: '#2980b9',\n    level: 'Level 8'\n  }, {\n    name: 'WISTERIA',\n    code: '#8e44ad',\n    level: 'Level 9'\n  }, {\n    name: 'MIDNIGHT BLUE',\n    code: '#2c3e50',\n    level: 'Level 10'\n  }, {\n    name: 'SUN FLOWER',\n    code: '#f1c40f',\n    level: 'Level 11'\n  }, {\n    name: 'CARROT',\n    code: '#e67e22',\n    level: 'Level 12'\n  }]);\n  return React.createElement(View, {\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"../../assets/trianglify.png\"),\n    style: styles.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Please select the level:\"), React.createElement(FlatGrid, {\n    itemDimension: 130,\n    data: items,\n    style: styles.gridView,\n    spacing: 10,\n    renderItem: (_ref2) => {\n      var {\n        item\n      } = _ref2;\n      return React.createElement(ImageBackground, {\n        styles: {\n          height: 150\n        },\n        source: require(\"../../assets/trianglify.png\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.itemContainer, {\n          backgroundColor: item.code\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.itemName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, item.level)));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  root: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }),\n  button: {\n    marginBottom: 8,\n    width: '30vw'\n  },\n  button_text: {\n    fontSize: '2vw'\n  },\n  active: {\n    borderColor: \"blue\"\n  },\n  text: {\n    color: colors.grayDark,\n    fontFamily: \"Dimbo\",\n    fontSize: '3vw',\n    lineHeight: 60\n  },\n  gridView: {\n    marginTop: '1vh',\n    flex: 1\n  },\n  itemContainer: {\n    justifyContent: 'flex-end',\n    borderRadius: 5,\n    padding: 10,\n    height: 150\n  },\n  itemName: {\n    fontSize: 16,\n    color: '#fff',\n    fontWeight: '600'\n  },\n  itemCode: {\n    fontWeight: '600',\n    fontSize: 12,\n    color: '#fff'\n  }\n});\nexport default LevelSelection;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/src/Menu/LevelSelection.js"],"names":["React","useContext","FlatGrid","Card","ListItem","Icon","colors","Button","LevelSelection","numPlayers","onNumPlayersChange","startGame","items","setItems","useState","name","code","level","styles","root","require","text","gridView","item","height","itemContainer","backgroundColor","itemName","StyleSheet","create","absoluteFillObject","justifyContent","alignItems","button","marginBottom","width","button_text","fontSize","active","borderColor","color","grayDark","fontFamily","lineHeight","marginTop","flex","borderRadius","padding","fontWeight","itemCode"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;;;;;AAYA,SAASC,QAAT,QAAyB,yBAAzB;AAGA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,QAAqC,uBAArC;AAEA,OAAOC,MAAP;AACA,OAAOC,MAAP;;AAIA,IAAMC,cAAc,GAAG,UAAmD;AAAA,MAAlD;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,kBAAd;AAAkCC,IAAAA;AAAlC,GAAkD;AAExE,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,KAAK,CAACc,QAAN,CAAe,CACvC;AAAEC,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,IAAI,EAAE,SAA3B;AAAsCC,IAAAA,KAAK,EAAC;AAA5C,GADuC,EAEvC;AAAEF,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,IAAI,EAAE,SAAzB;AAAoCC,IAAAA,KAAK,EAAC;AAA1C,GAFuC,EAGvC;AAAEF,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,IAAI,EAAE,SAA7B;AAAwCC,IAAAA,KAAK,EAAC;AAA9C,GAHuC,EAIvC;AAAEF,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,IAAI,EAAE,SAA1B;AAAqCC,IAAAA,KAAK,EAAC;AAA3C,GAJuC,EAKvC;AAAEF,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,IAAI,EAAE,SAA7B;AAAwCC,IAAAA,KAAK,EAAC;AAA9C,GALuC,EAMvC;AAAEF,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,IAAI,EAAE,SAA3B;AAAsCC,IAAAA,KAAK,EAAC;AAA5C,GANuC,EAOvC;AAAEF,IAAAA,IAAI,EAAE,WAAR;AAAqBC,IAAAA,IAAI,EAAE,SAA3B;AAAsCC,IAAAA,KAAK,EAAC;AAA5C,GAPuC,EAQvC;AAAEF,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,IAAI,EAAE,SAA7B;AAAwCC,IAAAA,KAAK,EAAC;AAA9C,GARuC,EASvC;AAAEF,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,IAAI,EAAE,SAA1B;AAAqCC,IAAAA,KAAK,EAAC;AAA3C,GATuC,EAUvC;AAAEF,IAAAA,IAAI,EAAE,eAAR;AAAyBC,IAAAA,IAAI,EAAE,SAA/B;AAA0CC,IAAAA,KAAK,EAAC;AAAhD,GAVuC,EAWvC;AAAEF,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,IAAI,EAAE,SAA5B;AAAuCC,IAAAA,KAAK,EAAC;AAA7C,GAXuC,EAYvC;AAAEF,IAAAA,IAAI,EAAE,QAAR;AAAkBC,IAAAA,IAAI,EAAE,SAAxB;AAAmCC,IAAAA,KAAK,EAAC;AAAzC,GAZuC,CAAf,CAA1B;AAgBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEC,OAAO,+BAAhC;AAAiE,IAAA,KAAK,EAAEF,MAAM,CAACC,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACG,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,EAGA,oBAAC,QAAD;AACA,IAAA,aAAa,EAAE,GADf;AAEA,IAAA,IAAI,EAAET,KAFN;AAGA,IAAA,KAAK,EAAEM,MAAM,CAACI,QAHd;AAMA,IAAA,OAAO,EAAE,EANT;AAOA,IAAA,UAAU,EAAE;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aACV,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAzB;AAAwC,QAAA,MAAM,EAAEJ,OAAO,+BAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACF,MAAM,CAACO,aAAR,EAAuB;AAAEC,UAAAA,eAAe,EAAEH,IAAI,CAACP;AAAxB,SAAvB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAACS,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BJ,IAAI,CAACN,KAApC,CADF,CAFA,CADU;AAAA,KAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADF,CADF;AA0BD,CA5CD;;AA8CA,IAAMC,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,IAAI,kCACCS,UAAU,CAACE,kBADZ;AAEFC,IAAAA,cAAc,EAAE,QAFd;AAGFC,IAAAA,UAAU,EAAE;AAHV,IAD2B;AAO/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,YAAY,EAAE,CADR;AAENC,IAAAA,KAAK,EAAE;AAFD,GAPuB;AAW/BC,EAAAA,WAAW,EAAC;AACVC,IAAAA,QAAQ,EAAE;AADA,GAXmB;AAc/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAE;AADP,GAduB;AAiB/BlB,EAAAA,IAAI,EAAE;AACJmB,IAAAA,KAAK,EAAElC,MAAM,CAACmC,QADV;AAEJC,IAAAA,UAAU,EAAE,OAFR;AAGJL,IAAAA,QAAQ,EAAE,KAHN;AAIJM,IAAAA,UAAU,EAAE;AAJR,GAjByB;AAuB/BrB,EAAAA,QAAQ,EAAE;AACRsB,IAAAA,SAAS,EAAE,KADH;AAERC,IAAAA,IAAI,EAAE;AAFE,GAvBqB;AA2B/BpB,EAAAA,aAAa,EAAE;AACbM,IAAAA,cAAc,EAAE,UADH;AAEbe,IAAAA,YAAY,EAAE,CAFD;AAGbC,IAAAA,OAAO,EAAE,EAHI;AAIbvB,IAAAA,MAAM,EAAE;AAJK,GA3BgB;AAiC/BG,EAAAA,QAAQ,EAAE;AACRU,IAAAA,QAAQ,EAAE,EADF;AAERG,IAAAA,KAAK,EAAE,MAFC;AAGRQ,IAAAA,UAAU,EAAE;AAHJ,GAjCqB;AAsC/BC,EAAAA,QAAQ,EAAE;AACRD,IAAAA,UAAU,EAAE,KADJ;AAERX,IAAAA,QAAQ,EAAE,EAFF;AAGRG,IAAAA,KAAK,EAAE;AAHC;AAtCqB,CAAlB,CAAf;AA6CA,eAAehC,cAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport {\r\n  ImageBackground,\r\n  Platform,\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\n\r\nimport { FlatGrid } from 'react-native-super-grid';\r\n\r\n\r\nimport { Card, ListItem, Icon } from 'react-native-elements'\r\n\r\nimport colors from \"../../assets/constants/colors\";\r\nimport Button from \"../../assets/Button\";\r\n\r\n\r\n\r\nconst LevelSelection = ({ numPlayers, onNumPlayersChange, startGame }) => {\r\n  \r\n  const [items, setItems] = React.useState([\r\n    { name: 'TURQUOISE', code: '#1abc9c', level:'Level 1' },\r\n    { name: 'EMERALD', code: '#2ecc71', level:'Level 2'  },\r\n    { name: 'PETER RIVER', code: '#3498db', level:'Level 3'  },\r\n    { name: 'AMETHYST', code: '#9b59b6', level:'Level 4'  },\r\n    { name: 'WET ASPHALT', code: '#34495e', level:'Level 5'  },\r\n    { name: 'GREEN SEA', code: '#16a085', level:'Level 6'  },\r\n    { name: 'NEPHRITIS', code: '#27ae60', level:'Level 7'  },\r\n    { name: 'BELIZE HOLE', code: '#2980b9', level:'Level 8'  },\r\n    { name: 'WISTERIA', code: '#8e44ad', level:'Level 9'  },\r\n    { name: 'MIDNIGHT BLUE', code: '#2c3e50', level:'Level 10'  },\r\n    { name: 'SUN FLOWER', code: '#f1c40f', level:'Level 11'  },\r\n    { name: 'CARROT', code: '#e67e22', level:'Level 12'  },\r\n    \r\n  ]);\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <ImageBackground source={require(\"../../assets/trianglify.png\")} style={styles.root}>\r\n      <Text style={styles.text}>Please select the level:</Text>\r\n\r\n      <FlatGrid\r\n      itemDimension={130}\r\n      data={items}\r\n      style={styles.gridView}\r\n      // staticDimension={300}\r\n      // fixed\r\n      spacing={10}\r\n      renderItem={({ item }) => (\r\n        <ImageBackground styles={{height: 150}} source={require(\"../../assets/trianglify.png\")}>\r\n\r\n        <View style={[styles.itemContainer, { backgroundColor: item.code }]}>\r\n          <Text style={styles.itemName}>{item.level}</Text>\r\n         \r\n        </View>\r\n        </ImageBackground>\r\n      )}\r\n    />   \r\n      </ImageBackground>\r\n    </View>\r\n\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    ...StyleSheet.absoluteFillObject,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    \r\n  },\r\n  button: {\r\n    marginBottom: 8,\r\n    width: '30vw'\r\n  },\r\n  button_text:{\r\n    fontSize: '2vw',\r\n  },\r\n  active: {\r\n    borderColor: \"blue\",\r\n  },\r\n  text: {\r\n    color: colors.grayDark,\r\n    fontFamily: \"Dimbo\",\r\n    fontSize: '3vw',\r\n    lineHeight: 60,\r\n  },\r\n  gridView: {\r\n    marginTop: '1vh',\r\n    flex: 1,\r\n  },\r\n  itemContainer: {\r\n    justifyContent: 'flex-end',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    height: 150,\r\n  },\r\n  itemName: {\r\n    fontSize: 16,\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  },\r\n  itemCode: {\r\n    fontWeight: '600',\r\n    fontSize: 12,\r\n    color: '#fff',\r\n  },\r\n});\r\n\r\nexport default LevelSelection;\r\n"]},"metadata":{},"sourceType":"module"}