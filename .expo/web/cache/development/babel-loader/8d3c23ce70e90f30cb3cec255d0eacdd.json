{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-elements\\\\src\\\\config\\\\withTheme.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport deepmerge from 'deepmerge';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeConsumer } from \"./ThemeProvider\";\nimport DefaultTheme from \"./theme\";\n\nvar isClassComponent = Component => Boolean(Component.prototype && Component.prototype.isReactComponent);\n\nvar withTheme = (WrappedComponent, themeKey) => {\n  class ThemedComponent extends React.Component {\n    render() {\n      var _this$props = this.props,\n          {\n        forwardedRef,\n        children\n      } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"forwardedRef\", \"children\"]);\n\n      return React.createElement(ThemeConsumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, context => {\n        if (!context) {\n          var _props = _objectSpread(_objectSpread({}, rest), {}, {\n            theme: DefaultTheme,\n            children\n          });\n\n          return isClassComponent(WrappedComponent) ? React.createElement(WrappedComponent, _extends({\n            ref: forwardedRef\n          }, _props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }\n          })) : React.createElement(WrappedComponent, _extends({}, _props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }\n          }));\n        }\n\n        var {\n          theme,\n          updateTheme,\n          replaceTheme\n        } = context;\n\n        var props = _objectSpread(_objectSpread({\n          theme,\n          updateTheme,\n          replaceTheme\n        }, deepmerge(themeKey && theme[themeKey] || {}, rest)), {}, {\n          children\n        });\n\n        if (isClassComponent(WrappedComponent)) {\n          return React.createElement(WrappedComponent, _extends({\n            ref: forwardedRef\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 22\n            }\n          }));\n        }\n\n        return React.createElement(WrappedComponent, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 20\n          }\n        }));\n      });\n    }\n\n  }\n\n  var name = themeKey ? \"Themed.\".concat(themeKey) : \"Themed.\".concat(WrappedComponent.displayName || WrappedComponent.name || 'Component');\n\n  if (isClassComponent(WrappedComponent)) {\n    var forwardRef = (props, ref) => React.createElement(ThemedComponent, _extends({}, props, {\n      forwardedRef: ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }));\n\n    forwardRef.displayName = name;\n    return hoistNonReactStatics(React.forwardRef(forwardRef), WrappedComponent);\n  }\n\n  ThemedComponent.displayName = name;\n  return ThemedComponent;\n};\n\nexport default withTheme;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-elements/src/config/withTheme.js"],"names":["React","deepmerge","hoistNonReactStatics","ThemeConsumer","DefaultTheme","isClassComponent","Component","Boolean","prototype","isReactComponent","withTheme","WrappedComponent","themeKey","ThemedComponent","render","props","forwardedRef","children","rest","context","theme","updateTheme","replaceTheme","name","displayName","forwardRef","ref"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,oBAAP,MAAiC,yBAAjC;AAEA,SAASC,aAAT;AACA,OAAOC,YAAP;;AAEA,IAAMC,gBAAgB,GAAGC,SAAS,IAChCC,OAAO,CAACD,SAAS,CAACE,SAAV,IAAuBF,SAAS,CAACE,SAAV,CAAoBC,gBAA5C,CADT;;AAGA,IAAMC,SAAS,GAAG,CAACC,gBAAD,EAAmBC,QAAnB,KAAgC;AAChD,QAAMC,eAAN,SAA8Bb,KAAK,CAACM,SAApC,CAA8C;AAC5CQ,IAAAA,MAAM,GAAG;AACP,wBAA4C,KAAKC,KAAjD;AAAA,UAAM;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,OAAN;AAAA,UAAmCC,IAAnC;;AAEA,aACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,OAAO,IAAI;AAEV,YAAI,CAACA,OAAL,EAAc;AACZ,cAAMJ,MAAK,mCAAQG,IAAR;AAAcE,YAAAA,KAAK,EAAEhB,YAArB;AAAmCa,YAAAA;AAAnC,YAAX;;AAEA,iBAAOZ,gBAAgB,CAACM,gBAAD,CAAhB,GACL,oBAAC,gBAAD;AAAkB,YAAA,GAAG,EAAEK;AAAvB,aAAyCD,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADK,GAGL,oBAAC,gBAAD,eAAsBA,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF;AAKD;;AAED,YAAM;AAAEK,UAAAA,KAAF;AAASC,UAAAA,WAAT;AAAsBC,UAAAA;AAAtB,YAAuCH,OAA7C;;AACA,YAAMJ,KAAK;AACTK,UAAAA,KADS;AAETC,UAAAA,WAFS;AAGTC,UAAAA;AAHS,WAINrB,SAAS,CAAEW,QAAQ,IAAIQ,KAAK,CAACR,QAAD,CAAlB,IAAiC,EAAlC,EAAsCM,IAAtC,CAJH;AAKTD,UAAAA;AALS,UAAX;;AAQA,YAAIZ,gBAAgB,CAACM,gBAAD,CAApB,EAAwC;AACtC,iBAAO,oBAAC,gBAAD;AAAkB,YAAA,GAAG,EAAEK;AAAvB,aAAyCD,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AACD,eAAO,oBAAC,gBAAD,eAAsBA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OA1BH,CADF;AA8BD;;AAlC2C;;AAqC9C,MAAMQ,IAAI,GAAGX,QAAQ,oBACPA,QADO,qBAEPD,gBAAgB,CAACa,WAAjB,IACRb,gBAAgB,CAACY,IADT,IAER,WAJe,CAArB;;AAMA,MAAIlB,gBAAgB,CAACM,gBAAD,CAApB,EAAwC;AACtC,QAAMc,UAAU,GAAG,CAACV,KAAD,EAAQW,GAAR,KACjB,oBAAC,eAAD,eAAqBX,KAArB;AAA4B,MAAA,YAAY,EAAEW,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;;AAIAD,IAAAA,UAAU,CAACD,WAAX,GAAyBD,IAAzB;AACA,WAAOrB,oBAAoB,CAACF,KAAK,CAACyB,UAAN,CAAiBA,UAAjB,CAAD,EAA+Bd,gBAA/B,CAA3B;AACD;;AAEDE,EAAAA,eAAe,CAACW,WAAhB,GAA8BD,IAA9B;AACA,SAAOV,eAAP;AACD,CAvDD;;AAyDA,eAAeH,SAAf","sourcesContent":["import React from 'react';\nimport deepmerge from 'deepmerge';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\n\nimport { ThemeConsumer } from './ThemeProvider';\nimport DefaultTheme from './theme';\n\nconst isClassComponent = Component =>\n  Boolean(Component.prototype && Component.prototype.isReactComponent);\n\nconst withTheme = (WrappedComponent, themeKey) => {\n  class ThemedComponent extends React.Component {\n    render() {\n      const { forwardedRef, children, ...rest } = this.props;\n\n      return (\n        <ThemeConsumer>\n          {context => {\n            // If user isn't using ThemeProvider\n            if (!context) {\n              const props = { ...rest, theme: DefaultTheme, children };\n\n              return isClassComponent(WrappedComponent) ? (\n                <WrappedComponent ref={forwardedRef} {...props} />\n              ) : (\n                <WrappedComponent {...props} />\n              );\n            }\n\n            const { theme, updateTheme, replaceTheme } = context;\n            const props = {\n              theme,\n              updateTheme,\n              replaceTheme,\n              ...deepmerge((themeKey && theme[themeKey]) || {}, rest),\n              children,\n            };\n\n            if (isClassComponent(WrappedComponent)) {\n              return <WrappedComponent ref={forwardedRef} {...props} />;\n            }\n            return <WrappedComponent {...props} />;\n          }}\n        </ThemeConsumer>\n      );\n    }\n  }\n\n  const name = themeKey\n    ? `Themed.${themeKey}`\n    : `Themed.${WrappedComponent.displayName ||\n        WrappedComponent.name ||\n        'Component'}`;\n\n  if (isClassComponent(WrappedComponent)) {\n    const forwardRef = (props, ref) => (\n      <ThemedComponent {...props} forwardedRef={ref} />\n    );\n\n    forwardRef.displayName = name;\n    return hoistNonReactStatics(React.forwardRef(forwardRef), WrappedComponent);\n  }\n\n  ThemedComponent.displayName = name;\n  return ThemedComponent;\n};\n\nexport default withTheme;\n"]},"metadata":{},"sourceType":"module"}