{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { UnavailabilityError } from '@unimodules/core';\nimport { EventEmitter } from '@unimodules/core';\nimport UUID from 'uuid-js';\nimport ExponentFileSystem from \"./ExponentFileSystem\";\nimport { EncodingType } from \"./FileSystem.types\";\n\nif (!ExponentFileSystem) {\n  console.warn(\"No native ExponentFileSystem module found, are you sure the expo-file-system's module is linked properly?\");\n}\n\nvar _unused = new EventEmitter(ExponentFileSystem);\n\nexport { EncodingType };\n\nfunction normalizeEndingSlash(p) {\n  if (p != null) {\n    return p.replace(/\\/*$/, '') + '/';\n  }\n\n  return null;\n}\n\nexport var documentDirectory = normalizeEndingSlash(ExponentFileSystem.documentDirectory);\nexport var cacheDirectory = normalizeEndingSlash(ExponentFileSystem.cacheDirectory);\nexport var {\n  bundledAssets,\n  bundleDirectory\n} = ExponentFileSystem;\nexport function getInfoAsync(_x) {\n  return _getInfoAsync.apply(this, arguments);\n}\n\nfunction _getInfoAsync() {\n  _getInfoAsync = _asyncToGenerator(function* (fileUri) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!ExponentFileSystem.getInfoAsync) {\n      throw new UnavailabilityError('expo-file-system', 'getInfoAsync');\n    }\n\n    return yield ExponentFileSystem.getInfoAsync(fileUri, options);\n  });\n  return _getInfoAsync.apply(this, arguments);\n}\n\nexport function readAsStringAsync(_x2, _x3) {\n  return _readAsStringAsync.apply(this, arguments);\n}\n\nfunction _readAsStringAsync() {\n  _readAsStringAsync = _asyncToGenerator(function* (fileUri, options) {\n    if (!ExponentFileSystem.readAsStringAsync) {\n      throw new UnavailabilityError('expo-file-system', 'readAsStringAsync');\n    }\n\n    return yield ExponentFileSystem.readAsStringAsync(fileUri, options || {});\n  });\n  return _readAsStringAsync.apply(this, arguments);\n}\n\nexport function writeAsStringAsync(_x4, _x5) {\n  return _writeAsStringAsync.apply(this, arguments);\n}\n\nfunction _writeAsStringAsync() {\n  _writeAsStringAsync = _asyncToGenerator(function* (fileUri, contents) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!ExponentFileSystem.writeAsStringAsync) {\n      throw new UnavailabilityError('expo-file-system', 'writeAsStringAsync');\n    }\n\n    return yield ExponentFileSystem.writeAsStringAsync(fileUri, contents, options);\n  });\n  return _writeAsStringAsync.apply(this, arguments);\n}\n\nexport function deleteAsync(_x6) {\n  return _deleteAsync.apply(this, arguments);\n}\n\nfunction _deleteAsync() {\n  _deleteAsync = _asyncToGenerator(function* (fileUri) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!ExponentFileSystem.deleteAsync) {\n      throw new UnavailabilityError('expo-file-system', 'deleteAsync');\n    }\n\n    return yield ExponentFileSystem.deleteAsync(fileUri, options);\n  });\n  return _deleteAsync.apply(this, arguments);\n}\n\nexport function moveAsync(_x7) {\n  return _moveAsync.apply(this, arguments);\n}\n\nfunction _moveAsync() {\n  _moveAsync = _asyncToGenerator(function* (options) {\n    if (!ExponentFileSystem.moveAsync) {\n      throw new UnavailabilityError('expo-file-system', 'moveAsync');\n    }\n\n    return yield ExponentFileSystem.moveAsync(options);\n  });\n  return _moveAsync.apply(this, arguments);\n}\n\nexport function copyAsync(_x8) {\n  return _copyAsync.apply(this, arguments);\n}\n\nfunction _copyAsync() {\n  _copyAsync = _asyncToGenerator(function* (options) {\n    if (!ExponentFileSystem.copyAsync) {\n      throw new UnavailabilityError('expo-file-system', 'copyAsync');\n    }\n\n    return yield ExponentFileSystem.copyAsync(options);\n  });\n  return _copyAsync.apply(this, arguments);\n}\n\nexport function makeDirectoryAsync(_x9) {\n  return _makeDirectoryAsync.apply(this, arguments);\n}\n\nfunction _makeDirectoryAsync() {\n  _makeDirectoryAsync = _asyncToGenerator(function* (fileUri) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!ExponentFileSystem.makeDirectoryAsync) {\n      throw new UnavailabilityError('expo-file-system', 'makeDirectoryAsync');\n    }\n\n    return yield ExponentFileSystem.makeDirectoryAsync(fileUri, options);\n  });\n  return _makeDirectoryAsync.apply(this, arguments);\n}\n\nexport function readDirectoryAsync(_x10) {\n  return _readDirectoryAsync.apply(this, arguments);\n}\n\nfunction _readDirectoryAsync() {\n  _readDirectoryAsync = _asyncToGenerator(function* (fileUri) {\n    if (!ExponentFileSystem.readDirectoryAsync) {\n      throw new UnavailabilityError('expo-file-system', 'readDirectoryAsync');\n    }\n\n    return yield ExponentFileSystem.readDirectoryAsync(fileUri, {});\n  });\n  return _readDirectoryAsync.apply(this, arguments);\n}\n\nexport function downloadAsync(_x11, _x12) {\n  return _downloadAsync.apply(this, arguments);\n}\n\nfunction _downloadAsync() {\n  _downloadAsync = _asyncToGenerator(function* (uri, fileUri) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!ExponentFileSystem.downloadAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadAsync');\n    }\n\n    return yield ExponentFileSystem.downloadAsync(uri, fileUri, options);\n  });\n  return _downloadAsync.apply(this, arguments);\n}\n\nexport function createDownloadResumable(uri, fileUri, options, callback, resumeData) {\n  return new DownloadResumable(uri, fileUri, options, callback, resumeData);\n}\nexport class DownloadResumable {\n  constructor(url, fileUri) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = arguments.length > 3 ? arguments[3] : undefined;\n    var resumeData = arguments.length > 4 ? arguments[4] : undefined;\n    this._uuid = UUID.create(4).toString();\n    this._url = url;\n    this._fileUri = fileUri;\n    this._options = options;\n    this._resumeData = resumeData;\n    this._callback = callback;\n    this._subscription = null;\n    this._emitter = new EventEmitter(ExponentFileSystem);\n  }\n\n  downloadAsync() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!ExponentFileSystem.downloadResumableStartAsync) {\n        throw new UnavailabilityError('expo-file-system', 'downloadResumableStartAsync');\n      }\n\n      _this._addSubscription();\n\n      return yield ExponentFileSystem.downloadResumableStartAsync(_this._url, _this._fileUri, _this._uuid, _this._options, _this._resumeData);\n    })();\n  }\n\n  pauseAsync() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!ExponentFileSystem.downloadResumablePauseAsync) {\n        throw new UnavailabilityError('expo-file-system', 'downloadResumablePauseAsync');\n      }\n\n      var pauseResult = yield ExponentFileSystem.downloadResumablePauseAsync(_this2._uuid);\n\n      _this2._removeSubscription();\n\n      if (pauseResult) {\n        _this2._resumeData = pauseResult.resumeData;\n        return _this2.savable();\n      } else {\n        throw new Error('Unable to generate a savable pause state');\n      }\n    })();\n  }\n\n  resumeAsync() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!ExponentFileSystem.downloadResumableStartAsync) {\n        throw new UnavailabilityError('expo-file-system', 'downloadResumableStartAsync');\n      }\n\n      _this3._addSubscription();\n\n      return yield ExponentFileSystem.downloadResumableStartAsync(_this3._url, _this3._fileUri, _this3._uuid, _this3._options, _this3._resumeData);\n    })();\n  }\n\n  savable() {\n    return {\n      url: this._url,\n      fileUri: this._fileUri,\n      options: this._options,\n      resumeData: this._resumeData\n    };\n  }\n\n  _addSubscription() {\n    if (this._subscription) {\n      return;\n    }\n\n    this._subscription = this._emitter.addListener('Exponent.downloadProgress', event => {\n      if (event.uuid === this._uuid) {\n        var callback = this._callback;\n\n        if (callback) {\n          callback(event.data);\n        }\n      }\n    });\n  }\n\n  _removeSubscription() {\n    if (!this._subscription) {\n      return;\n    }\n\n    this._emitter.removeSubscription(this._subscription);\n\n    this._subscription = null;\n  }\n\n}","map":{"version":3,"sources":["../src/FileSystem.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport { EventEmitter, Subscription } from '@unimodules/core';\nimport UUID from 'uuid-js';\nimport ExponentFileSystem from './ExponentFileSystem';\n\nimport {\n  DownloadOptions,\n  DownloadResult,\n  DownloadProgressCallback,\n  DownloadProgressData,\n  DownloadPauseState,\n  FileInfo,\n  EncodingType,\n  ReadingOptions,\n  WritingOptions,\n  ProgressEvent,\n} from './FileSystem.types';\n\nif (!ExponentFileSystem) {\n  console.warn(\n    \"No native ExponentFileSystem module found, are you sure the expo-file-system's module is linked properly?\"\n  );\n}\n// Prevent webpack from pruning this.\nconst _unused = new EventEmitter(ExponentFileSystem);\n\nexport {\n  DownloadOptions,\n  DownloadResult,\n  DownloadProgressCallback,\n  DownloadProgressData,\n  DownloadPauseState,\n  FileInfo,\n  EncodingType,\n  ReadingOptions,\n  WritingOptions,\n  ProgressEvent,\n};\n\nfunction normalizeEndingSlash(p: string | null): string | null {\n  if (p != null) {\n    return p.replace(/\\/*$/, '') + '/';\n  }\n  return null;\n}\n\nexport const documentDirectory = normalizeEndingSlash(ExponentFileSystem.documentDirectory);\nexport const cacheDirectory = normalizeEndingSlash(ExponentFileSystem.cacheDirectory);\n\nexport const { bundledAssets, bundleDirectory } = ExponentFileSystem;\n\nexport async function getInfoAsync(\n  fileUri: string,\n  options: { md5?: boolean; cache?: boolean } = {}\n): Promise<FileInfo> {\n  if (!ExponentFileSystem.getInfoAsync) {\n    throw new UnavailabilityError('expo-file-system', 'getInfoAsync');\n  }\n  return await ExponentFileSystem.getInfoAsync(fileUri, options);\n}\n\nexport async function readAsStringAsync(\n  fileUri: string,\n  options?: ReadingOptions\n): Promise<string> {\n  if (!ExponentFileSystem.readAsStringAsync) {\n    throw new UnavailabilityError('expo-file-system', 'readAsStringAsync');\n  }\n  return await ExponentFileSystem.readAsStringAsync(fileUri, options || {});\n}\n\nexport async function writeAsStringAsync(\n  fileUri: string,\n  contents: string,\n  options: WritingOptions = {}\n): Promise<void> {\n  if (!ExponentFileSystem.writeAsStringAsync) {\n    throw new UnavailabilityError('expo-file-system', 'writeAsStringAsync');\n  }\n  return await ExponentFileSystem.writeAsStringAsync(fileUri, contents, options);\n}\n\nexport async function deleteAsync(\n  fileUri: string,\n  options: { idempotent?: boolean } = {}\n): Promise<void> {\n  if (!ExponentFileSystem.deleteAsync) {\n    throw new UnavailabilityError('expo-file-system', 'deleteAsync');\n  }\n  return await ExponentFileSystem.deleteAsync(fileUri, options);\n}\n\nexport async function moveAsync(options: { from: string; to: string }): Promise<void> {\n  if (!ExponentFileSystem.moveAsync) {\n    throw new UnavailabilityError('expo-file-system', 'moveAsync');\n  }\n  return await ExponentFileSystem.moveAsync(options);\n}\n\nexport async function copyAsync(options: { from: string; to: string }): Promise<void> {\n  if (!ExponentFileSystem.copyAsync) {\n    throw new UnavailabilityError('expo-file-system', 'copyAsync');\n  }\n  return await ExponentFileSystem.copyAsync(options);\n}\n\nexport async function makeDirectoryAsync(\n  fileUri: string,\n  options: { intermediates?: boolean } = {}\n): Promise<void> {\n  if (!ExponentFileSystem.makeDirectoryAsync) {\n    throw new UnavailabilityError('expo-file-system', 'makeDirectoryAsync');\n  }\n  return await ExponentFileSystem.makeDirectoryAsync(fileUri, options);\n}\n\nexport async function readDirectoryAsync(fileUri: string): Promise<string[]> {\n  if (!ExponentFileSystem.readDirectoryAsync) {\n    throw new UnavailabilityError('expo-file-system', 'readDirectoryAsync');\n  }\n  return await ExponentFileSystem.readDirectoryAsync(fileUri, {});\n}\n\nexport async function downloadAsync(\n  uri: string,\n  fileUri: string,\n  options: DownloadOptions = {}\n): Promise<DownloadResult> {\n  if (!ExponentFileSystem.downloadAsync) {\n    throw new UnavailabilityError('expo-file-system', 'downloadAsync');\n  }\n  return await ExponentFileSystem.downloadAsync(uri, fileUri, options);\n}\n\nexport function createDownloadResumable(\n  uri: string,\n  fileUri: string,\n  options?: DownloadOptions,\n  callback?: DownloadProgressCallback,\n  resumeData?: string\n): DownloadResumable {\n  return new DownloadResumable(uri, fileUri, options, callback, resumeData);\n}\n\nexport class DownloadResumable {\n  _uuid: string;\n  _url: string;\n  _fileUri: string;\n  _options: DownloadOptions;\n  _resumeData?: string;\n  _callback?: DownloadProgressCallback;\n  _subscription?: Subscription | null;\n  _emitter: EventEmitter;\n\n  constructor(\n    url: string,\n    fileUri: string,\n    options: DownloadOptions = {},\n    callback?: DownloadProgressCallback,\n    resumeData?: string\n  ) {\n    this._uuid = UUID.create(4).toString();\n    this._url = url;\n    this._fileUri = fileUri;\n    this._options = options;\n    this._resumeData = resumeData;\n    this._callback = callback;\n    this._subscription = null;\n    this._emitter = new EventEmitter(ExponentFileSystem);\n  }\n\n  async downloadAsync(): Promise<DownloadResult | undefined> {\n    if (!ExponentFileSystem.downloadResumableStartAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadResumableStartAsync');\n    }\n    this._addSubscription();\n    return await ExponentFileSystem.downloadResumableStartAsync(\n      this._url,\n      this._fileUri,\n      this._uuid,\n      this._options,\n      this._resumeData\n    );\n  }\n\n  async pauseAsync(): Promise<DownloadPauseState> {\n    if (!ExponentFileSystem.downloadResumablePauseAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadResumablePauseAsync');\n    }\n    const pauseResult = await ExponentFileSystem.downloadResumablePauseAsync(this._uuid);\n    this._removeSubscription();\n    if (pauseResult) {\n      this._resumeData = pauseResult.resumeData;\n      return this.savable();\n    } else {\n      throw new Error('Unable to generate a savable pause state');\n    }\n  }\n\n  async resumeAsync(): Promise<DownloadResult | undefined> {\n    if (!ExponentFileSystem.downloadResumableStartAsync) {\n      throw new UnavailabilityError('expo-file-system', 'downloadResumableStartAsync');\n    }\n    this._addSubscription();\n    return await ExponentFileSystem.downloadResumableStartAsync(\n      this._url,\n      this._fileUri,\n      this._uuid,\n      this._options,\n      this._resumeData\n    );\n  }\n\n  savable(): DownloadPauseState {\n    return {\n      url: this._url,\n      fileUri: this._fileUri,\n      options: this._options,\n      resumeData: this._resumeData,\n    };\n  }\n\n  _addSubscription(): void {\n    if (this._subscription) {\n      return;\n    }\n    this._subscription = this._emitter.addListener(\n      'Exponent.downloadProgress',\n      (event: ProgressEvent) => {\n        if (event.uuid === this._uuid) {\n          const callback = this._callback;\n          if (callback) {\n            callback(event.data);\n          }\n        }\n      }\n    );\n  }\n\n  _removeSubscription(): void {\n    if (!this._subscription) {\n      return;\n    }\n    this._emitter.removeSubscription(this._subscription);\n    this._subscription = null;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}