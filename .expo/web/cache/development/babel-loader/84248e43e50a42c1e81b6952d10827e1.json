{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport ExponentMailComposer from \"./ExponentMailComposer\";\nexport function composeAsync(_x) {\n  return _composeAsync.apply(this, arguments);\n}\n\nfunction _composeAsync() {\n  _composeAsync = _asyncToGenerator(function* (options) {\n    return yield ExponentMailComposer.composeAsync(options);\n  });\n  return _composeAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../../src/MailComposer/MailComposer.ts"],"names":[],"mappings":";;;;AAAA,OAAO,oBAAP;AAGA,gBAAsB,YAAtB;AAAA;AAAA;;;oCAAO,WAA4B,OAA5B,EAAmD;AACxD,iBAAa,oBAAoB,CAAC,YAArB,CAAkC,OAAlC,CAAb;AACD,G","sourcesContent":["import ExponentMailComposer from './ExponentMailComposer';\nimport { ComposeOptions, ComposeResult } from './MailComposer.types';\n\nexport async function composeAsync(options: ComposeOptions): Promise<ComposeResult> {\n  return await ExponentMailComposer.composeAsync(options);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}