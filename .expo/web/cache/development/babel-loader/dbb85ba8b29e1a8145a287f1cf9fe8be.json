{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-gesture-handler\\\\touchables\\\\TouchableHighlight.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from \"./GenericTouchable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nexport default class TouchableHighlight extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showUnderlay = () => {\n      if (!this.hasPressHandler()) {\n        return;\n      }\n\n      this.setState({\n        extraChildStyle: {\n          opacity: this.props.activeOpacity\n        },\n        extraUnderlayStyle: {\n          backgroundColor: this.props.underlayColor\n        }\n      });\n      this.props.onShowUnderlay && this.props.onShowUnderlay();\n    };\n\n    this.hasPressHandler = () => this.props.onPress || this.props.onPressIn || this.props.onPressOut || this.props.onLongPress;\n\n    this.hideUnderlay = () => {\n      this.setState({\n        extraChildStyle: null,\n        extraUnderlayStyle: null\n      });\n      this.props.onHideUnderlay && this.props.onHideUnderlay();\n    };\n\n    this.onStateChange = (from, to) => {\n      if (to === TOUCHABLE_STATE.BEGAN) {\n        this.showUnderlay();\n      } else if (to === TOUCHABLE_STATE.UNDETERMINED || to === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n        this.hideUnderlay();\n      }\n    };\n\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: {\n        backgroundColor: props.underlayColor\n      }\n    };\n  }\n\n  renderChildren() {\n    if (!this.props.children) {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 14\n        }\n      });\n    }\n\n    var child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(child.props.style, this.state.extraChildStyle)\n    });\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      style = {}\n    } = _this$props,\n        rest = _objectWithoutProperties(_this$props, [\"style\"]);\n\n    var {\n      extraUnderlayStyle\n    } = this.state;\n    return React.createElement(GenericTouchable, _extends({}, rest, {\n      style: [style, extraUnderlayStyle],\n      onStateChange: this.onStateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }), this.renderChildren());\n  }\n\n}\nTouchableHighlight.defaultProps = _objectSpread({}, GenericTouchable.defaultProps, {\n  activeOpacity: 0.85,\n  delayPressOut: 100,\n  underlayColor: 'black'\n});\nTouchableHighlight.propTypes = _objectSpread({}, GenericTouchable.publicPropTypes, {\n  activeOpacity: PropTypes.number,\n  underlayColor: PropTypes.string,\n  style: PropTypes.any,\n  onShowUnderlay: PropTypes.func,\n  onHideUnderlay: PropTypes.func\n});","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-gesture-handler/touchables/TouchableHighlight.js"],"names":["React","Component","GenericTouchable","TOUCHABLE_STATE","PropTypes","TouchableHighlight","constructor","props","showUnderlay","hasPressHandler","setState","extraChildStyle","opacity","activeOpacity","extraUnderlayStyle","backgroundColor","underlayColor","onShowUnderlay","onPress","onPressIn","onPressOut","onLongPress","hideUnderlay","onHideUnderlay","onStateChange","from","to","BEGAN","UNDETERMINED","MOVED_OUTSIDE","state","renderChildren","children","child","Children","only","cloneElement","style","StyleSheet","compose","render","rest","defaultProps","delayPressOut","propTypes","publicPropTypes","number","string","any","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport { StyleSheet, View } from 'react-native';\nimport PropTypes from 'prop-types';\n\n/**\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n  };\n\n  static propTypes = {\n    ...GenericTouchable.publicPropTypes,\n    activeOpacity: PropTypes.number,\n    underlayColor: PropTypes.string,\n    style: PropTypes.any,\n    onShowUnderlay: PropTypes.func,\n    onHideUnderlay: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: {\n        backgroundColor: props.underlayColor,\n      },\n    };\n  }\n\n  // Copied from RN\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay && this.props.onShowUnderlay();\n  };\n\n  hasPressHandler = () =>\n    this.props.onPress ||\n    this.props.onPressIn ||\n    this.props.onPressOut ||\n    this.props.onLongPress;\n\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    });\n    this.props.onHideUnderlay && this.props.onHideUnderlay();\n  };\n\n  renderChildren() {\n    if (!this.props.children) {\n      return <View />;\n    }\n\n    const child = React.Children.only(this.props.children);\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(\n        child.props.style,\n        this.state.extraChildStyle\n      ),\n    });\n  }\n\n  onStateChange = (from, to) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.hideUnderlay();\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    const { extraUnderlayStyle } = this.state;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[style, extraUnderlayStyle]}\n        onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}