{"ast":null,"code":"import { UnavailabilityError } from '@unimodules/core';\nimport ExpoAmplitude from \"./ExpoAmplitude\";\nexport function initialize(apiKey) {\n  if (!ExpoAmplitude.initialize) {\n    throw new UnavailabilityError('Amplitude', 'initialize');\n  }\n\n  return ExpoAmplitude.initialize(apiKey);\n}\n;\nexport function setUserId(userId) {\n  if (!ExpoAmplitude.setUserId) {\n    throw new UnavailabilityError('Amplitude', 'setUserId');\n  }\n\n  return ExpoAmplitude.setUserId(userId);\n}\n;\nexport function setUserProperties(userProperties) {\n  if (!ExpoAmplitude.setUserProperties) {\n    throw new UnavailabilityError('Amplitude', 'setUserProperties');\n  }\n\n  return ExpoAmplitude.setUserProperties(userProperties);\n}\n;\nexport function clearUserProperties() {\n  if (!ExpoAmplitude.clearUserProperties) {\n    throw new UnavailabilityError('Amplitude', 'clearUserProperties');\n  }\n\n  return ExpoAmplitude.clearUserProperties();\n}\n;\nexport function logEvent(eventName) {\n  if (!ExpoAmplitude.logEvent) {\n    throw new UnavailabilityError('Amplitude', 'logEvent');\n  }\n\n  return ExpoAmplitude.logEvent(eventName);\n}\n;\nexport function logEventWithProperties(eventName, properties) {\n  if (!ExpoAmplitude.logEventWithProperties) {\n    throw new UnavailabilityError('Amplitude', 'logEventWithProperties');\n  }\n\n  return ExpoAmplitude.logEventWithProperties(eventName, properties);\n}\n;\nexport function setGroup(groupType, groupNames) {\n  if (!ExpoAmplitude.setGroup) {\n    throw new UnavailabilityError('Amplitude', 'setGroup');\n  }\n\n  return ExpoAmplitude.setGroup(groupType, groupNames);\n}\n;","map":{"version":3,"sources":["../src/Amplitude.ts"],"names":[],"mappings":"AAAA,SAAS,mBAAT,QAAoC,kBAApC;AACA,OAAO,aAAP;AAEA,OAAM,SAAU,UAAV,CAAqB,MAArB,EAAmC;AACvC,MAAI,CAAC,aAAa,CAAC,UAAnB,EAA+B;AAC7B,UAAM,IAAI,mBAAJ,CAAwB,WAAxB,EAAqC,YAArC,CAAN;AACD;;AACD,SAAO,aAAa,CAAC,UAAd,CAAyB,MAAzB,CAAP;AACD;AAAA;AAED,OAAM,SAAU,SAAV,CAAoB,MAApB,EAAkC;AACtC,MAAI,CAAC,aAAa,CAAC,SAAnB,EAA8B;AAC5B,UAAM,IAAI,mBAAJ,CAAwB,WAAxB,EAAqC,WAArC,CAAN;AACD;;AACD,SAAO,aAAa,CAAC,SAAd,CAAwB,MAAxB,CAAP;AACD;AAAA;AAED,OAAM,SAAU,iBAAV,CAA4B,cAA5B,EAAmE;AACvE,MAAI,CAAC,aAAa,CAAC,iBAAnB,EAAsC;AACpC,UAAM,IAAI,mBAAJ,CAAwB,WAAxB,EAAqC,mBAArC,CAAN;AACD;;AACD,SAAO,aAAa,CAAC,iBAAd,CAAgC,cAAhC,CAAP;AACD;AAAA;AAED,OAAM,SAAU,mBAAV,GAA6B;AACjC,MAAI,CAAC,aAAa,CAAC,mBAAnB,EAAwC;AACtC,UAAM,IAAI,mBAAJ,CAAwB,WAAxB,EAAqC,qBAArC,CAAN;AACD;;AACD,SAAO,aAAa,CAAC,mBAAd,EAAP;AACD;AAAA;AAED,OAAM,SAAU,QAAV,CAAmB,SAAnB,EAAoC;AACxC,MAAI,CAAC,aAAa,CAAC,QAAnB,EAA6B;AAC3B,UAAM,IAAI,mBAAJ,CAAwB,WAAxB,EAAqC,UAArC,CAAN;AACD;;AACD,SAAO,aAAa,CAAC,QAAd,CAAuB,SAAvB,CAAP;AACD;AAAA;AAED,OAAM,SAAU,sBAAV,CAAiC,SAAjC,EAAoD,UAApD,EAAuF;AAC3F,MAAI,CAAC,aAAa,CAAC,sBAAnB,EAA2C;AACzC,UAAM,IAAI,mBAAJ,CAAwB,WAAxB,EAAqC,wBAArC,CAAN;AACD;;AACD,SAAO,aAAa,CAAC,sBAAd,CAAqC,SAArC,EAAgD,UAAhD,CAAP;AACD;AAAA;AAED,OAAM,SAAU,QAAV,CAAmB,SAAnB,EAAsC,UAAtC,EAA0D;AAC9D,MAAI,CAAC,aAAa,CAAC,QAAnB,EAA6B;AAC3B,UAAM,IAAI,mBAAJ,CAAwB,WAAxB,EAAqC,UAArC,CAAN;AACD;;AACD,SAAO,aAAa,CAAC,QAAd,CAAuB,SAAvB,EAAkC,UAAlC,CAAP;AACD;AAAA","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\nimport ExpoAmplitude from './ExpoAmplitude';\n\nexport function initialize(apiKey: string): Promise<void> {\n  if (!ExpoAmplitude.initialize) {\n    throw new UnavailabilityError('Amplitude', 'initialize');\n  }\n  return ExpoAmplitude.initialize(apiKey);\n};\n\nexport function setUserId(userId: string): Promise<void> {\n  if (!ExpoAmplitude.setUserId) {\n    throw new UnavailabilityError('Amplitude', 'setUserId');\n  }\n  return ExpoAmplitude.setUserId(userId);\n};\n\nexport function setUserProperties(userProperties: { [name: string]: any }): Promise<void> {\n  if (!ExpoAmplitude.setUserProperties) {\n    throw new UnavailabilityError('Amplitude', 'setUserProperties');\n  }\n  return ExpoAmplitude.setUserProperties(userProperties);\n};\n\nexport function clearUserProperties(): Promise<void> {\n  if (!ExpoAmplitude.clearUserProperties) {\n    throw new UnavailabilityError('Amplitude', 'clearUserProperties');\n  }\n  return ExpoAmplitude.clearUserProperties();\n};\n\nexport function logEvent(eventName: string): Promise<void> {\n  if (!ExpoAmplitude.logEvent) {\n    throw new UnavailabilityError('Amplitude', 'logEvent');\n  }\n  return ExpoAmplitude.logEvent(eventName);\n};\n\nexport function logEventWithProperties(eventName: string, properties: { [name: string]: any }): Promise<void> {\n  if (!ExpoAmplitude.logEventWithProperties) {\n    throw new UnavailabilityError('Amplitude', 'logEventWithProperties');\n  }\n  return ExpoAmplitude.logEventWithProperties(eventName, properties);\n};\n\nexport function setGroup(groupType: string, groupNames: string[]): Promise<void> {\n  if (!ExpoAmplitude.setGroup) {\n    throw new UnavailabilityError('Amplitude', 'setGroup');\n  }\n  return ExpoAmplitude.setGroup(groupType, groupNames);\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}