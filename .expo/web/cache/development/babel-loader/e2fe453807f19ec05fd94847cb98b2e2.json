{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\expo-gl\\\\build\\\\GLView.web.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { UnavailabilityError, CodedError } from '@unimodules/core';\n\nfunction getImageForAsset(asset) {\n  if (asset != null && typeof asset === 'object' && asset !== null && asset.downloadAsync) {\n    var dataURI = asset.localUri || asset.uri || '';\n    var image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n\n  return asset;\n}\n\nfunction asExpoContext(gl) {\n  gl.endFrameEXP = function glEndFrameEXP() {};\n\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n\n    gl.texImage2D = function () {\n      for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n        props[_key] = arguments[_key];\n      }\n\n      var nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'](...nextProps);\n    };\n  }\n\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n\n    gl.texSubImage2D = function () {\n      for (var _len2 = arguments.length, props = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        props[_key2] = arguments[_key2];\n      }\n\n      var nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'](...nextProps);\n    };\n  }\n\n  return gl;\n}\n\nfunction ensureContext(canvas, contextAttributes) {\n  if (!canvas) {\n    throw new CodedError('ERR_GL_INVALID', 'Attempting to use the GL context before it has been created.');\n  }\n\n  var context = canvas.getContext('webgl', contextAttributes) || canvas.getContext('webgl-experimental', contextAttributes) || canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context);\n}\n\nfunction stripNonDOMProps(props) {\n  for (var k in propTypes) {\n    if (k in props) {\n      delete props[k];\n    }\n  }\n\n  return props;\n}\n\nvar propTypes = {\n  onContextCreate: PropTypes.func.isRequired,\n  onContextRestored: PropTypes.func,\n  onContextLost: PropTypes.func,\n  webglContextAttributes: PropTypes.object\n};\nexport class GLView extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n    this._hasContextBeenCreated = false;\n\n    this._contextCreated = () => {\n      this.gl = this._createContext();\n      this.props.onContextCreate(this.gl);\n\n      if (this.canvas) {\n        this.canvas.addEventListener('webglcontextlost', this._contextLost);\n        this.canvas.addEventListener('webglcontextrestored', this._contextRestored);\n      }\n    };\n\n    this._updateLayout = () => {\n      if (this.container) {\n        var {\n          clientWidth: width = 0,\n          clientHeight: height = 0\n        } = this.container;\n        this.setState({\n          width,\n          height\n        });\n      }\n    };\n\n    this._contextLost = event => {\n      event.preventDefault();\n      this.gl = undefined;\n\n      if (this.props.onContextLost) {\n        this.props.onContextLost();\n      }\n    };\n\n    this._contextRestored = () => {\n      if (this.props.onContextRestored) {\n        this.gl = this._createContext();\n        this.props.onContextRestored(this.gl);\n      }\n    };\n\n    this._assignCanvasRef = canvas => {\n      this.canvas = canvas;\n    };\n\n    this._assignContainerRef = element => {\n      if (element) {\n        this.container = element;\n      } else {\n        this.container = undefined;\n      }\n\n      this._updateLayout();\n    };\n  }\n\n  static createContextAsync() {\n    return _asyncToGenerator(function* () {\n      var canvas = document.createElement('canvas');\n      canvas.width = window.innerWidth * window.devicePixelRatio;\n      canvas.height = window.innerHeight * window.devicePixelRatio;\n      return ensureContext(canvas);\n    })();\n  }\n\n  static destroyContextAsync(exgl) {\n    return _asyncToGenerator(function* () {\n      return true;\n    })();\n  }\n\n  static takeSnapshotAsync(exgl) {\n    var _arguments = arguments;\n    return _asyncToGenerator(function* () {\n      var options = _arguments.length > 1 && _arguments[1] !== undefined ? _arguments[1] : {};\n      invariant(exgl, 'GLView.takeSnapshotAsync(): canvas is not defined');\n      var canvas = exgl.canvas;\n      return yield new Promise(resolve => {\n        canvas.toBlob(blob => {\n          resolve({\n            uri: blob,\n            localUri: '',\n            width: canvas.width,\n            height: canvas.height\n          });\n        }, options.format, options.compress);\n      });\n    })();\n  }\n\n  componentDidMount() {\n    if (window.addEventListener) {\n      window.addEventListener('resize', this._updateLayout);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.gl) {\n      var loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n\n      if (loseContextExt) {\n        loseContextExt.loseContext();\n      }\n\n      this.gl = undefined;\n    }\n\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this._contextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this._contextRestored);\n    }\n\n    window.removeEventListener('resize', this._updateLayout);\n  }\n\n  render() {\n    var {\n      devicePixelRatio = 1\n    } = window;\n\n    var _this$props = this.props,\n        {\n      style\n    } = _this$props,\n        props = _objectWithoutProperties(_this$props, [\"style\"]);\n\n    var {\n      width,\n      height\n    } = this.state;\n    var domProps = stripNonDOMProps(props);\n    var containerStyle = StyleSheet.flatten([{\n      flex: 1\n    }, style]);\n    return React.createElement(\"div\", {\n      ref: this._assignContainerRef,\n      style: containerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, React.createElement(\"canvas\", _extends({\n      ref: this._assignCanvasRef,\n      style: {\n        flex: 1,\n        width,\n        height\n      },\n      width: width * devicePixelRatio,\n      height: height * devicePixelRatio\n    }, domProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    })));\n  }\n\n  componentDidUpdate() {\n    if (this.canvas && !this._hasContextBeenCreated) {\n      this._hasContextBeenCreated = true;\n\n      this._contextCreated();\n    }\n  }\n\n  _createContext() {\n    var {\n      webglContextAttributes\n    } = this.props;\n    var gl = ensureContext(this.canvas, webglContextAttributes);\n    this._webglContextAttributes = webglContextAttributes || {};\n    return gl;\n  }\n\n  _getGlOrReject() {\n    if (!this.gl) {\n      throw new CodedError('ERR_GL_INVALID', 'Attempting to use the GL context before it has been created.');\n    }\n\n    return this.gl;\n  }\n\n  takeSnapshotAsync() {\n    var _arguments2 = arguments,\n        _this = this;\n\n    return _asyncToGenerator(function* () {\n      var options = _arguments2.length > 0 && _arguments2[0] !== undefined ? _arguments2[0] : {};\n\n      if (!GLView.takeSnapshotAsync) {\n        throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n      }\n\n      var gl = _this._getGlOrReject();\n\n      return yield GLView.takeSnapshotAsync(gl, options);\n    })();\n  }\n\n  startARSessionAsync() {\n    return _asyncToGenerator(function* () {\n      throw new UnavailabilityError('GLView', 'startARSessionAsync');\n    })();\n  }\n\n  createCameraTextureAsync() {\n    return _asyncToGenerator(function* () {\n      throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n    })();\n  }\n\n  destroyObjectAsync(glObject) {\n    return _asyncToGenerator(function* () {\n      throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n    })();\n  }\n\n}\nGLView.propTypes = propTypes;","map":{"version":3,"sources":["../src/GLView.web.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,OAAO,SAAP,MAAsB,WAAtB;AACA,OAAO,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;;AAEA,SAAS,mBAAT,EAA8B,UAA9B,QAAgD,kBAAhD;;AAWA,SAAS,gBAAT,CAA0B,KAA1B,EAIC;AACC,MAAI,KAAK,IAAI,IAAT,IAAiB,OAAO,KAAP,KAAiB,QAAlC,IAA8C,KAAK,KAAK,IAAxD,IAAgE,KAAK,CAAC,aAA1E,EAAyF;AACvF,QAAM,OAAO,GAAG,KAAK,CAAC,QAAN,IAAkB,KAAK,CAAC,GAAxB,IAA+B,EAA/C;AACA,QAAM,KAAK,GAAG,IAAI,KAAJ,EAAd;AACA,IAAA,KAAK,CAAC,GAAN,GAAY,OAAZ;AACA,WAAO,KAAP;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,aAAT,CAAuB,EAAvB,EAAoD;AAClD,EAAA,EAAE,CAAC,WAAH,GAAiB,SAAS,aAAT,GAAsB,CAAW,CAAlD;;AAEA,MAAI,CAAC,EAAE,CAAC,kBAAD,CAAP,EAA6B;AAC3B,IAAA,EAAE,CAAC,kBAAD,CAAF,GAAyB,EAAE,CAAC,UAA5B;;AACA,IAAA,EAAE,CAAC,UAAH,GAAgB,YAAyB;AAAA,wCAArB,KAAqB;AAArB,QAAA,KAAqB;AAAA;;AACvC,UAAI,SAAS,GAAG,CAAC,GAAG,KAAJ,CAAhB;AACA,MAAA,SAAS,CAAC,IAAV,CAAe,gBAAgB,CAAC,SAAS,CAAC,GAAV,EAAD,CAA/B;AACA,aAAO,EAAE,CAAC,kBAAD,CAAF,CAAuB,GAAG,SAA1B,CAAP;AACD,KAJD;AAKD;;AAED,MAAI,CAAC,EAAE,CAAC,qBAAD,CAAP,EAAgC;AAC9B,IAAA,EAAE,CAAC,qBAAD,CAAF,GAA4B,EAAE,CAAC,aAA/B;;AACA,IAAA,EAAE,CAAC,aAAH,GAAmB,YAAyB;AAAA,yCAArB,KAAqB;AAArB,QAAA,KAAqB;AAAA;;AAC1C,UAAI,SAAS,GAAG,CAAC,GAAG,KAAJ,CAAhB;AACA,MAAA,SAAS,CAAC,IAAV,CAAe,gBAAgB,CAAC,SAAS,CAAC,GAAV,EAAD,CAA/B;AACA,aAAO,EAAE,CAAC,qBAAD,CAAF,CAA0B,GAAG,SAA7B,CAAP;AACD,KAJD;AAKD;;AAED,SAAO,EAAP;AACD;;AAED,SAAS,aAAT,CACE,MADF,EAEE,iBAFF,EAE4C;AAE1C,MAAI,CAAC,MAAL,EAAa;AACX,UAAM,IAAI,UAAJ,CACJ,gBADI,EAEJ,8DAFI,CAAN;AAID;;AACD,MAAM,OAAO,GACX,MAAM,CAAC,UAAP,CAAkB,OAAlB,EAA2B,iBAA3B,KACA,MAAM,CAAC,UAAP,CAAkB,oBAAlB,EAAwC,iBAAxC,CADA,IAEA,MAAM,CAAC,UAAP,CAAkB,oBAAlB,EAAwC,iBAAxC,CAHF;AAIA,EAAA,SAAS,CAAC,OAAD,EAAU,gCAAV,CAAT;AACA,SAAO,aAAa,CAAC,OAAD,CAApB;AACD;;AAED,SAAS,gBAAT,CAA0B,KAA1B,EAAuD;AACrD,OAAK,IAAI,CAAT,IAAc,SAAd,EAAyB;AACvB,QAAI,CAAC,IAAI,KAAT,EAAgB;AACd,aAAO,KAAK,CAAC,CAAD,CAAZ;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAED,IAAM,SAAS,GAAG;AAChB,EAAA,eAAe,EAAE,SAAS,CAAC,IAAV,CAAe,UADhB;AAEhB,EAAA,iBAAiB,EAAE,SAAS,CAAC,IAFb;AAGhB,EAAA,aAAa,EAAE,SAAS,CAAC,IAHT;AAIhB,EAAA,sBAAsB,EAAE,SAAS,CAAC;AAJlB,CAAlB;AAmBA,OAAM,MAAO,MAAP,SAAsB,KAAK,CAAC,SAA5B,CAAyD;AAA/D,EAAA,WAAA,GAAA;;AACE,SAAA,KAAA,GAAQ;AACN,MAAA,KAAK,EAAE,CADD;AAEN,MAAA,MAAM,EAAE;AAFF,KAAR;AAOA,SAAA,sBAAA,GAAyB,KAAzB;;AAmDA,SAAA,eAAA,GAAkB,MAAW;AAC3B,WAAK,EAAL,GAAU,KAAK,cAAL,EAAV;AACA,WAAK,KAAL,CAAW,eAAX,CAA2B,KAAK,EAAhC;;AACA,UAAI,KAAK,MAAT,EAAiB;AACf,aAAK,MAAL,CAAY,gBAAZ,CAA6B,kBAA7B,EAAiD,KAAK,YAAtD;AACA,aAAK,MAAL,CAAY,gBAAZ,CAA6B,sBAA7B,EAAqD,KAAK,gBAA1D;AACD;AACF,KAPD;;AAwBA,SAAA,aAAA,GAAgB,MAAW;AACzB,UAAI,KAAK,SAAT,EAAoB;AAClB,YAAM;AAAE,UAAA,WAAW,EAAE,KAAK,GAAG,CAAvB;AAA0B,UAAA,YAAY,EAAE,MAAM,GAAG;AAAjD,YAAuD,KAAK,SAAlE;AACA,aAAK,QAAL,CAAc;AAAE,UAAA,KAAF;AAAS,UAAA;AAAT,SAAd;AACD;AACF,KALD;;AAmDA,SAAA,YAAA,GAAgB,KAAD,IAAuB;AACpC,MAAA,KAAK,CAAC,cAAN;AACA,WAAK,EAAL,GAAU,SAAV;;AACA,UAAI,KAAK,KAAL,CAAW,aAAf,EAA8B;AAC5B,aAAK,KAAL,CAAW,aAAX;AACD;AACF,KAND;;AAQA,SAAA,gBAAA,GAAmB,MAAW;AAC5B,UAAI,KAAK,KAAL,CAAW,iBAAf,EAAkC;AAChC,aAAK,EAAL,GAAU,KAAK,cAAL,EAAV;AACA,aAAK,KAAL,CAAW,iBAAX,CAA6B,KAAK,EAAlC;AACD;AACF,KALD;;AAOA,SAAA,gBAAA,GAAoB,MAAD,IAAoC;AACrD,WAAK,MAAL,GAAc,MAAd;AACD,KAFD;;AAIA,SAAA,mBAAA,GAAuB,OAAD,IAAsC;AAC1D,UAAI,OAAJ,EAAa;AACX,aAAK,SAAL,GAAiB,OAAjB;AACD,OAFD,MAEO;AACL,aAAK,SAAL,GAAiB,SAAjB;AACD;;AACD,WAAK,aAAL;AACD,KAPD;AA8BD;;AArKC,SAAa,kBAAb,GAA+B;AAAA;AAC7B,UAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,MAAA,MAAM,CAAC,KAAP,GAAe,MAAM,CAAC,UAAP,GAAoB,MAAM,CAAC,gBAA1C;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,WAAP,GAAqB,MAAM,CAAC,gBAA5C;AACA,aAAO,aAAa,CAAC,MAAD,CAApB;AAJ6B;AAK9B;;AAED,SAAa,mBAAb,CAAiC,IAAjC,EAAsE;AAAA;AAEpE,aAAO,IAAP;AAFoE;AAGrE;;AAED,SAAa,iBAAb,CACE,IADF,EAE+B;AAAA;AAAA;AAAA,UAA7B,OAA6B,0EAAF,EAAE;AAE7B,MAAA,SAAS,CAAC,IAAD,EAAO,mDAAP,CAAT;AACA,UAAM,MAAM,GAAsB,IAAI,CAAC,MAAvC;AACA,mBAAa,IAAI,OAAJ,CAAY,OAAO,IAAG;AACjC,QAAA,MAAM,CAAC,MAAP,CACG,IAAD,IAAsB;AAEpB,UAAA,OAAO,CAAC;AACN,YAAA,GAAG,EAAE,IADC;AAEN,YAAA,QAAQ,EAAE,EAFJ;AAGN,YAAA,KAAK,EAAE,MAAM,CAAC,KAHR;AAIN,YAAA,MAAM,EAAE,MAAM,CAAC;AAJT,WAAD,CAAP;AAMD,SATH,EAUE,OAAO,CAAC,MAVV,EAWE,OAAO,CAAC,QAXV;AAaD,OAdY,CAAb;AAJ6B;AAmB9B;;AAED,EAAA,iBAAiB,GAAA;AACf,QAAI,MAAM,CAAC,gBAAX,EAA6B;AAC3B,MAAA,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,aAAvC;AACD;AACF;;AAWD,EAAA,oBAAoB,GAAA;AAClB,QAAI,KAAK,EAAT,EAAa;AACX,UAAM,cAAc,GAAG,KAAK,EAAL,CAAQ,YAAR,CAAqB,oBAArB,CAAvB;;AACA,UAAI,cAAJ,EAAoB;AAClB,QAAA,cAAc,CAAC,WAAf;AACD;;AACD,WAAK,EAAL,GAAU,SAAV;AACD;;AACD,QAAI,KAAK,MAAT,EAAiB;AACf,WAAK,MAAL,CAAY,mBAAZ,CAAgC,kBAAhC,EAAoD,KAAK,YAAzD;AACA,WAAK,MAAL,CAAY,mBAAZ,CAAgC,sBAAhC,EAAwD,KAAK,gBAA7D;AACD;;AACD,IAAA,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,aAA1C;AACD;;AASD,EAAA,MAAM,GAAA;AACJ,QAAM;AAAE,MAAA,gBAAgB,GAAG;AAArB,QAA2B,MAAjC;;AACA,sBAA4B,KAAK,KAAjC;AAAA,QAAM;AAAE,MAAA;AAAF,KAAN;AAAA,QAAkB,KAAlB;;AACA,QAAM;AAAE,MAAA,KAAF;AAAS,MAAA;AAAT,QAAoB,KAAK,KAA/B;AACA,QAAM,QAAQ,GAAG,gBAAgB,CAAC,KAAD,CAAjC;AAEA,QAAM,cAAc,GAAQ,UAAU,CAAC,OAAX,CAAmB,CAAC;AAAE,MAAA,IAAI,EAAE;AAAR,KAAD,EAAc,KAAd,CAAnB,CAA5B;AACA,WACE;AAAK,MAAA,GAAG,EAAE,KAAK,mBAAf;AAAoC,MAAA,KAAK,EAAE,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAE,KAAK,gBADZ;AAEE,MAAA,KAAK,EAAE;AAAE,QAAA,IAAI,EAAE,CAAR;AAAW,QAAA,KAAX;AAAkB,QAAA;AAAlB,OAFT;AAGE,MAAA,KAAK,EAAE,KAAK,GAAG,gBAHjB;AAIE,MAAA,MAAM,EAAE,MAAM,GAAG;AAJnB,OAKM,QALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAWD;;AAED,EAAA,kBAAkB,GAAA;AAChB,QAAI,KAAK,MAAL,IAAe,CAAC,KAAK,sBAAzB,EAAiD;AAC/C,WAAK,sBAAL,GAA8B,IAA9B;;AACA,WAAK,eAAL;AACD;AACF;;AAED,EAAA,cAAc,GAAA;AACZ,QAAM;AAAE,MAAA;AAAF,QAA6B,KAAK,KAAxC;AACA,QAAM,EAAE,GAAG,aAAa,CAAC,KAAK,MAAN,EAAc,sBAAd,CAAxB;AACA,SAAK,uBAAL,GAA+B,sBAAsB,IAAI,EAAzD;AACA,WAAO,EAAP;AACD;;AAED,EAAA,cAAc,GAAA;AACZ,QAAI,CAAC,KAAK,EAAV,EAAc;AACZ,YAAM,IAAI,UAAJ,CACJ,gBADI,EAEJ,8DAFI,CAAN;AAID;;AACD,WAAO,KAAK,EAAZ;AACD;;AA8BK,EAAA,iBAAN,GAAqD;AAAA;AAAA;;AAAA;AAAA,UAA7B,OAA6B,6EAAF,EAAE;;AACnD,UAAI,CAAC,MAAM,CAAC,iBAAZ,EAA+B;AAC7B,cAAM,IAAI,mBAAJ,CAAwB,SAAxB,EAAmC,mBAAnC,CAAN;AACD;;AAED,UAAM,EAAE,GAAG,KAAI,CAAC,cAAL,EAAX;;AAEA,mBAAa,MAAM,CAAC,iBAAP,CAAyB,EAAzB,EAA6B,OAA7B,CAAb;AAPmD;AAQpD;;AAEK,EAAA,mBAAN,GAAyB;AAAA;AACvB,YAAM,IAAI,mBAAJ,CAAwB,QAAxB,EAAkC,qBAAlC,CAAN;AADuB;AAExB;;AAEK,EAAA,wBAAN,GAA8B;AAAA;AAC5B,YAAM,IAAI,mBAAJ,CAAwB,QAAxB,EAAkC,0BAAlC,CAAN;AAD4B;AAE7B;;AAEK,EAAA,kBAAN,CAAyB,QAAzB,EAA8C;AAAA;AAC5C,YAAM,IAAI,mBAAJ,CAAwB,QAAxB,EAAkC,oBAAlC,CAAN;AAD4C;AAE7C;;AAtL4D;AAMtD,MAAA,CAAA,SAAA,GAAY,SAAZ","sourcesContent":["import invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { UnavailabilityError, CodedError } from '@unimodules/core';\nimport {\n  BaseGLViewProps,\n  GLSnapshot,\n  ExpoWebGLRenderingContext,\n  SnapshotOptions,\n} from './GLView.types';\nexport { BaseGLViewProps, ExpoWebGLRenderingContext, SnapshotOptions, GLViewProps };\n\ndeclare const window: Window;\n\nfunction getImageForAsset(asset: {\n  downloadAsync: () => Promise<any>;\n  uri?: string;\n  localUri?: string;\n}): HTMLImageElement | any {\n  if (asset != null && typeof asset === 'object' && asset !== null && asset.downloadAsync) {\n    const dataURI = asset.localUri || asset.uri || '';\n    const image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\n\nfunction asExpoContext(gl: ExpoWebGLRenderingContext): WebGLRenderingContext {\n  gl.endFrameEXP = function glEndFrameEXP(): void {};\n\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n    gl.texImage2D = (...props: any[]): any => {\n      let nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'](...nextProps);\n    };\n  }\n\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n    gl.texSubImage2D = (...props: any[]): any => {\n      let nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'](...nextProps);\n    };\n  }\n\n  return gl;\n}\n\nfunction ensureContext(\n  canvas?: HTMLCanvasElement,\n  contextAttributes?: WebGLContextAttributes\n): WebGLRenderingContext {\n  if (!canvas) {\n    throw new CodedError(\n      'ERR_GL_INVALID',\n      'Attempting to use the GL context before it has been created.'\n    );\n  }\n  const context =\n    canvas.getContext('webgl', contextAttributes) ||\n    canvas.getContext('webgl-experimental', contextAttributes) ||\n    canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context as ExpoWebGLRenderingContext);\n}\n\nfunction stripNonDOMProps(props: { [key: string]: any }): { [key: string]: any } {\n  for (let k in propTypes) {\n    if (k in props) {\n      delete props[k];\n    }\n  }\n  return props;\n}\n\nconst propTypes = {\n  onContextCreate: PropTypes.func.isRequired,\n  onContextRestored: PropTypes.func,\n  onContextLost: PropTypes.func,\n  webglContextAttributes: PropTypes.object,\n};\n\ninterface GLViewProps extends BaseGLViewProps {\n  onContextCreate: (gl: WebGLRenderingContext) => void;\n  onContextRestored?: (gl?: WebGLRenderingContext) => void;\n  onContextLost?: () => void;\n  webglContextAttributes?: WebGLContextAttributes;\n}\n\ntype State = {\n  width: number;\n  height: number;\n};\n\nexport class GLView extends React.Component<GLViewProps, State> {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  static propTypes = propTypes;\n\n  _hasContextBeenCreated = false;\n\n  _webglContextAttributes: WebGLContextAttributes | undefined;\n\n  canvas: HTMLCanvasElement | undefined;\n\n  container?: HTMLElement;\n\n  gl?: WebGLRenderingContext;\n\n  static async createContextAsync(): Promise<WebGLRenderingContext> {\n    const canvas = document.createElement('canvas');\n    canvas.width = window.innerWidth * window.devicePixelRatio;\n    canvas.height = window.innerHeight * window.devicePixelRatio;\n    return ensureContext(canvas);\n  }\n\n  static async destroyContextAsync(exgl?: WebGLRenderingContext | number): Promise<boolean> {\n    // Do nothing\n    return true;\n  }\n\n  static async takeSnapshotAsync(\n    exgl: WebGLRenderingContext,\n    options: SnapshotOptions = {}\n  ): Promise<GLSnapshot> {\n    invariant(exgl, 'GLView.takeSnapshotAsync(): canvas is not defined');\n    const canvas: HTMLCanvasElement = exgl.canvas;\n    return await new Promise(resolve => {\n      canvas.toBlob(\n        (blob: Blob | null) => {\n          // TODO: Bacon: Should we add data URI?\n          resolve({\n            uri: blob,\n            localUri: '',\n            width: canvas.width,\n            height: canvas.height,\n          });\n        },\n        options.format,\n        options.compress\n      );\n    });\n  }\n\n  componentDidMount() {\n    if (window.addEventListener) {\n      window.addEventListener('resize', this._updateLayout);\n    }\n  }\n\n  _contextCreated = (): void => {\n    this.gl = this._createContext();\n    this.props.onContextCreate(this.gl);\n    if (this.canvas) {\n      this.canvas.addEventListener('webglcontextlost', this._contextLost);\n      this.canvas.addEventListener('webglcontextrestored', this._contextRestored);\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.gl) {\n      const loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n      if (loseContextExt) {\n        loseContextExt.loseContext();\n      }\n      this.gl = undefined;\n    }\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this._contextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this._contextRestored);\n    }\n    window.removeEventListener('resize', this._updateLayout);\n  }\n\n  _updateLayout = (): void => {\n    if (this.container) {\n      const { clientWidth: width = 0, clientHeight: height = 0 } = this.container;\n      this.setState({ width, height });\n    }\n  };\n\n  render() {\n    const { devicePixelRatio = 1 } = window;\n    const { style, ...props } = this.props;\n    const { width, height } = this.state;\n    const domProps = stripNonDOMProps(props);\n\n    const containerStyle: any = StyleSheet.flatten([{ flex: 1 }, style]);\n    return (\n      <div ref={this._assignContainerRef} style={containerStyle}>\n        <canvas\n          ref={this._assignCanvasRef}\n          style={{ flex: 1, width, height }}\n          width={width * devicePixelRatio}\n          height={height * devicePixelRatio}\n          {...domProps}\n        />\n      </div>\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.canvas && !this._hasContextBeenCreated) {\n      this._hasContextBeenCreated = true;\n      this._contextCreated();\n    }\n  }\n\n  _createContext(): WebGLRenderingContext {\n    const { webglContextAttributes } = this.props;\n    const gl = ensureContext(this.canvas, webglContextAttributes);\n    this._webglContextAttributes = webglContextAttributes || {};\n    return gl;\n  }\n\n  _getGlOrReject(): WebGLRenderingContext {\n    if (!this.gl) {\n      throw new CodedError(\n        'ERR_GL_INVALID',\n        'Attempting to use the GL context before it has been created.'\n      );\n    }\n    return this.gl;\n  }\n\n  _contextLost = (event: Event): void => {\n    event.preventDefault();\n    this.gl = undefined;\n    if (this.props.onContextLost) {\n      this.props.onContextLost();\n    }\n  };\n\n  _contextRestored = (): void => {\n    if (this.props.onContextRestored) {\n      this.gl = this._createContext();\n      this.props.onContextRestored(this.gl);\n    }\n  };\n\n  _assignCanvasRef = (canvas: HTMLCanvasElement): void => {\n    this.canvas = canvas;\n  };\n\n  _assignContainerRef = (element: HTMLElement | null): void => {\n    if (element) {\n      this.container = element;\n    } else {\n      this.container = undefined;\n    }\n    this._updateLayout();\n  };\n\n  async takeSnapshotAsync(options: SnapshotOptions = {}): Promise<GLSnapshot> {\n    if (!GLView.takeSnapshotAsync) {\n      throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n    }\n\n    const gl = this._getGlOrReject();\n\n    return await GLView.takeSnapshotAsync(gl, options);\n  }\n\n  async startARSessionAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'startARSessionAsync');\n  }\n\n  async createCameraTextureAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n  }\n\n  async destroyObjectAsync(glObject: WebGLObject): Promise<void> {\n    throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}