{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-view-shot\\\\src\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nvar {\n  RNViewShot\n} = NativeModules;\nvar neverEndingPromise = new Promise(() => {});\n\nif (!RNViewShot) {\n  console.warn(\"NativeModules.RNViewShot is undefined. Make sure the library is linked on the native side.\");\n}\n\nvar acceptedFormats = [\"png\", \"jpg\"].concat(Platform.OS === \"android\" ? [\"webm\", \"raw\"] : []);\nvar acceptedResults = [\"tmpfile\", \"base64\", \"data-uri\"].concat(Platform.OS === \"android\" ? [\"zip-base64\"] : []);\nvar defaultOptions = {\n  format: \"png\",\n  quality: 1,\n  result: \"tmpfile\",\n  snapshotContentContainer: false\n};\n\nfunction validateOptions(options) {\n  options = _objectSpread(_objectSpread({}, defaultOptions), options);\n  var errors = [];\n\n  if (\"width\" in options && (typeof options.width !== \"number\" || options.width <= 0)) {\n    errors.push(\"option width should be a positive number\");\n    delete options.width;\n  }\n\n  if (\"height\" in options && (typeof options.height !== \"number\" || options.height <= 0)) {\n    errors.push(\"option height should be a positive number\");\n    delete options.height;\n  }\n\n  if (typeof options.quality !== \"number\" || options.quality < 0 || options.quality > 1) {\n    errors.push(\"option quality should be a number between 0.0 and 1.0\");\n    options.quality = defaultOptions.quality;\n  }\n\n  if (typeof options.snapshotContentContainer !== \"boolean\") {\n    errors.push(\"option snapshotContentContainer should be a boolean\");\n  }\n\n  if (acceptedFormats.indexOf(options.format) === -1) {\n    options.format = defaultOptions.format;\n    errors.push(\"option format '\" + options.format + \"' is not in valid formats: \" + acceptedFormats.join(\" | \"));\n  }\n\n  if (acceptedResults.indexOf(options.result) === -1) {\n    options.result = defaultOptions.result;\n    errors.push(\"option result '\" + options.result + \"' is not in valid formats: \" + acceptedResults.join(\" | \"));\n  }\n\n  return {\n    options,\n    errors\n  };\n}\n\nexport function captureRef(view, optionsObject) {\n  if (typeof view !== \"number\") {\n    var node = findNodeHandle(view);\n    if (!node) return Promise.reject(new Error(\"findNodeHandle failed to resolve view=\" + String(view)));\n    view = node;\n  }\n\n  var {\n    options,\n    errors\n  } = validateOptions(optionsObject);\n\n  if (__DEV__ && errors.length > 0) {\n    console.warn(\"react-native-view-shot: bad options:\\n\" + errors.map(e => \"- \".concat(e)).join(\"\\n\"));\n  }\n\n  return RNViewShot.captureRef(view, options);\n}\nexport function releaseCapture(uri) {\n  if (typeof uri !== \"string\") {\n    if (__DEV__) {\n      console.warn(\"Invalid argument to releaseCapture. Got: \" + uri);\n    }\n  } else {\n    RNViewShot.releaseCapture(uri);\n  }\n}\nexport function captureScreen(optionsObject) {\n  var {\n    options,\n    errors\n  } = validateOptions(optionsObject);\n\n  if (__DEV__ && errors.length > 0) {\n    console.warn(\"react-native-view-shot: bad options:\\n\" + errors.map(e => \"- \".concat(e)).join(\"\\n\"));\n  }\n\n  return RNViewShot.captureScreen(options);\n}\n\nfunction checkCompatibleProps(props) {\n  if (!props.captureMode && props.onCapture) {\n    console.warn(\"react-native-view-shot: a captureMode prop must be provided for `onCapture`\");\n  } else if (props.captureMode && !props.onCapture) {\n    console.warn(\"react-native-view-shot: captureMode prop is defined but onCapture prop callback is missing\");\n  } else if ((props.captureMode === \"continuous\" || props.captureMode === \"update\") && props.options && props.options.result && props.options.result !== \"tmpfile\") {\n    console.warn(\"react-native-view-shot: result=tmpfile is recommended for captureMode=\" + props.captureMode);\n  }\n}\n\nexport default class ViewShot extends Component {\n  constructor() {\n    super(...arguments);\n    this.firstLayoutPromise = new Promise(resolve => {\n      this.resolveFirstLayout = resolve;\n    });\n\n    this.capture = () => this.firstLayoutPromise.then(() => {\n      var {\n        root\n      } = this;\n      if (!root) return neverEndingPromise;\n      return captureRef(root, this.props.options);\n    }).then(uri => {\n      this.onCapture(uri);\n      return uri;\n    }, e => {\n      this.onCaptureFailure(e);\n      throw e;\n    });\n\n    this.onCapture = uri => {\n      if (!this.root) return;\n\n      if (this.lastCapturedURI) {\n        setTimeout(releaseCapture, 500, this.lastCapturedURI);\n      }\n\n      this.lastCapturedURI = uri;\n      var {\n        onCapture\n      } = this.props;\n      if (onCapture) onCapture(uri);\n    };\n\n    this.onCaptureFailure = e => {\n      if (!this.root) return;\n      var {\n        onCaptureFailure\n      } = this.props;\n      if (onCaptureFailure) onCaptureFailure(e);\n    };\n\n    this.syncCaptureLoop = captureMode => {\n      cancelAnimationFrame(this._raf);\n\n      if (captureMode === \"continuous\") {\n        var previousCaptureURI = \"-\";\n\n        var loop = () => {\n          this._raf = requestAnimationFrame(loop);\n          if (previousCaptureURI === this.lastCapturedURI) return;\n          previousCaptureURI = this.lastCapturedURI;\n          this.capture();\n        };\n\n        this._raf = requestAnimationFrame(loop);\n      }\n    };\n\n    this.onRef = ref => {\n      this.root = ref;\n    };\n\n    this.onLayout = e => {\n      var {\n        onLayout\n      } = this.props;\n      this.resolveFirstLayout(e.nativeEvent.layout);\n      if (onLayout) onLayout(e);\n    };\n  }\n\n  componentDidMount() {\n    if (__DEV__) checkCompatibleProps(this.props);\n\n    if (this.props.captureMode === \"mount\") {\n      this.capture();\n    } else {\n      this.syncCaptureLoop(this.props.captureMode);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.captureMode !== this.props.captureMode) {\n      this.syncCaptureLoop(nextProps.captureMode);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.captureMode === \"update\") {\n      this.capture();\n    }\n  }\n\n  componentWillUnmount() {\n    this.syncCaptureLoop(null);\n  }\n\n  render() {\n    var {\n      children\n    } = this.props;\n    return React.createElement(View, {\n      ref: this.onRef,\n      collapsable: false,\n      onLayout: this.onLayout,\n      style: this.props.style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 7\n      }\n    }, children);\n  }\n\n}\nViewShot.captureRef = captureRef;\nViewShot.releaseCapture = releaseCapture;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-view-shot/src/index.js"],"names":["React","Component","RNViewShot","NativeModules","neverEndingPromise","Promise","console","warn","acceptedFormats","concat","Platform","OS","acceptedResults","defaultOptions","format","quality","result","snapshotContentContainer","validateOptions","options","errors","width","push","height","indexOf","join","captureRef","view","optionsObject","node","findNodeHandle","reject","Error","String","__DEV__","length","map","e","releaseCapture","uri","captureScreen","checkCompatibleProps","props","captureMode","onCapture","ViewShot","firstLayoutPromise","resolve","resolveFirstLayout","capture","then","root","onCaptureFailure","lastCapturedURI","setTimeout","syncCaptureLoop","cancelAnimationFrame","_raf","previousCaptureURI","loop","requestAnimationFrame","onRef","ref","onLayout","nativeEvent","layout","componentDidMount","componentWillReceiveProps","nextProps","componentDidUpdate","componentWillUnmount","render","children","style"],"mappings":"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","sourcesContent":["//@flow\nimport React, { Component } from \"react\";\nimport { View, NativeModules, Platform, findNodeHandle } from \"react-native\";\nconst { RNViewShot } = NativeModules;\n\nconst neverEndingPromise = new Promise(() => {});\n\ntype Options = {\n  width?: number,\n  height?: number,\n  format: \"png\" | \"jpg\" | \"webm\" | \"raw\",\n  quality: number,\n  result: \"tmpfile\" | \"base64\" | \"data-uri\" | \"zip-base64\",\n  snapshotContentContainer: boolean\n};\n\nif (!RNViewShot) {\n  console.warn(\n    \"NativeModules.RNViewShot is undefined. Make sure the library is linked on the native side.\"\n  );\n}\n\nconst acceptedFormats = [\"png\", \"jpg\"].concat(\n  Platform.OS === \"android\" ? [\"webm\", \"raw\"] : []\n);\n\nconst acceptedResults = [\"tmpfile\", \"base64\", \"data-uri\"].concat(\n  Platform.OS === \"android\" ? [\"zip-base64\"] : []\n);\n\nconst defaultOptions = {\n  format: \"png\",\n  quality: 1,\n  result: \"tmpfile\",\n  snapshotContentContainer: false\n};\n\n// validate and coerce options\nfunction validateOptions(\n  options: ?Object\n): { options: Options, errors: Array<string> } {\n  options = {\n    ...defaultOptions,\n    ...options\n  };\n  const errors = [];\n  if (\n    \"width\" in options &&\n    (typeof options.width !== \"number\" || options.width <= 0)\n  ) {\n    errors.push(\"option width should be a positive number\");\n    delete options.width;\n  }\n  if (\n    \"height\" in options &&\n    (typeof options.height !== \"number\" || options.height <= 0)\n  ) {\n    errors.push(\"option height should be a positive number\");\n    delete options.height;\n  }\n  if (\n    typeof options.quality !== \"number\" ||\n    options.quality < 0 ||\n    options.quality > 1\n  ) {\n    errors.push(\"option quality should be a number between 0.0 and 1.0\");\n    options.quality = defaultOptions.quality;\n  }\n  if (typeof options.snapshotContentContainer !== \"boolean\") {\n    errors.push(\"option snapshotContentContainer should be a boolean\");\n  }\n  if (acceptedFormats.indexOf(options.format) === -1) {\n    options.format = defaultOptions.format;\n    errors.push(\n      \"option format '\" + options.format + \"' is not in valid formats: \" + acceptedFormats.join(\" | \")\n    );\n  }\n  if (acceptedResults.indexOf(options.result) === -1) {\n    options.result = defaultOptions.result;\n    errors.push(\n      \"option result '\" + options.result  + \"' is not in valid formats: \" + acceptedResults.join(\" | \")\n    );\n  }\n  return { options, errors };\n}\n\nexport function captureRef(\n  view: number | ReactElement<*>,\n  optionsObject?: Object\n): Promise<string> {\n  if (typeof view !== \"number\") {\n    const node = findNodeHandle(view);\n    if (!node)\n      return Promise.reject(\n        new Error(\"findNodeHandle failed to resolve view=\" + String(view))\n      );\n    view = node;\n  }\n  const { options, errors } = validateOptions(optionsObject);\n  if (__DEV__ && errors.length > 0) {\n    console.warn(\n      \"react-native-view-shot: bad options:\\n\" +\n        errors.map(e => `- ${e}`).join(\"\\n\")\n    );\n  }\n  return RNViewShot.captureRef(view, options);\n}\n\nexport function releaseCapture(uri: string): void {\n  if (typeof uri !== \"string\") {\n    if (__DEV__) {\n      console.warn(\"Invalid argument to releaseCapture. Got: \" + uri);\n    }\n  } else {\n    RNViewShot.releaseCapture(uri);\n  }\n}\n\nexport function captureScreen(\n  optionsObject?: Options\n): Promise<string> {\n  const { options, errors } = validateOptions(optionsObject);\n  if (__DEV__ && errors.length > 0) {\n    console.warn(\n      \"react-native-view-shot: bad options:\\n\" +\n        errors.map(e => `- ${e}`).join(\"\\n\")\n    );\n  }\n  return RNViewShot.captureScreen(options);\n}\n\ntype Props = {\n  options?: Object,\n  captureMode?: \"mount\" | \"continuous\" | \"update\",\n  children: React.Element<*>,\n  onLayout?: (e: *) => void,\n  onCapture?: (uri: string) => void,\n  onCaptureFailure?: (e: Error) => void\n};\n\nfunction checkCompatibleProps(props: Props) {\n  if (!props.captureMode && props.onCapture) {\n    console.warn(\n      \"react-native-view-shot: a captureMode prop must be provided for `onCapture`\"\n    );\n  } else if (props.captureMode && !props.onCapture) {\n    console.warn(\n      \"react-native-view-shot: captureMode prop is defined but onCapture prop callback is missing\"\n    );\n  } else if (\n    (props.captureMode === \"continuous\" || props.captureMode === \"update\") &&\n    props.options &&\n    props.options.result &&\n    props.options.result !== \"tmpfile\"\n  ) {\n    console.warn(\n      \"react-native-view-shot: result=tmpfile is recommended for captureMode=\" +\n        props.captureMode\n    );\n  }\n}\n\nexport default class ViewShot extends Component {\n  static captureRef = captureRef;\n  static releaseCapture = releaseCapture;\n  props: Props;\n  root: ?View;\n\n  _raf: *;\n  lastCapturedURI: ?string;\n\n  resolveFirstLayout: (layout: Object) => void;\n  firstLayoutPromise = new Promise(resolve => {\n    this.resolveFirstLayout = resolve;\n  });\n\n  capture = (): Promise<string> =>\n    this.firstLayoutPromise\n      .then(() => {\n        const { root } = this;\n        if (!root) return neverEndingPromise; // component is unmounted, you never want to hear back from the promise\n        return captureRef(root, this.props.options);\n      })\n      .then(\n        (uri: string) => {\n          this.onCapture(uri);\n          return uri;\n        },\n        (e: Error) => {\n          this.onCaptureFailure(e);\n          throw e;\n        }\n      );\n\n  onCapture = (uri: string) => {\n    if (!this.root) return;\n    if (this.lastCapturedURI) {\n      // schedule releasing the previous capture\n      setTimeout(releaseCapture, 500, this.lastCapturedURI);\n    }\n    this.lastCapturedURI = uri;\n    const { onCapture } = this.props;\n    if (onCapture) onCapture(uri);\n  };\n\n  onCaptureFailure = (e: Error) => {\n    if (!this.root) return;\n    const { onCaptureFailure } = this.props;\n    if (onCaptureFailure) onCaptureFailure(e);\n  };\n\n  syncCaptureLoop = (captureMode: ?string) => {\n    cancelAnimationFrame(this._raf);\n    if (captureMode === \"continuous\") {\n      let previousCaptureURI = \"-\"; // needs to capture at least once at first, so we use \"-\" arbitrary string\n      const loop = () => {\n        this._raf = requestAnimationFrame(loop);\n        if (previousCaptureURI === this.lastCapturedURI) return; // previous capture has not finished, don't capture yet\n        previousCaptureURI = this.lastCapturedURI;\n        this.capture();\n      };\n      this._raf = requestAnimationFrame(loop);\n    }\n  };\n\n  onRef = (ref: View) => {\n    this.root = ref;\n  };\n\n  onLayout = (e: { nativeEvent: { layout: Object } }) => {\n    const { onLayout } = this.props;\n    this.resolveFirstLayout(e.nativeEvent.layout);\n    if (onLayout) onLayout(e);\n  };\n\n  componentDidMount() {\n    if (__DEV__) checkCompatibleProps(this.props);\n    if (this.props.captureMode === \"mount\") {\n      this.capture();\n    } else {\n      this.syncCaptureLoop(this.props.captureMode);\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.captureMode !== this.props.captureMode) {\n      this.syncCaptureLoop(nextProps.captureMode);\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.props.captureMode === \"update\") {\n      this.capture();\n    }\n  }\n\n  componentWillUnmount() {\n    this.syncCaptureLoop(null);\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <View ref={this.onRef} collapsable={false} onLayout={this.onLayout} style={this.props.style}>\n        {children}\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}