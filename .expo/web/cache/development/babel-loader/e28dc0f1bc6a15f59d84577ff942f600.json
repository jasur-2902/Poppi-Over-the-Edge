{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport GoogleAuthData from \"./GoogleAuthData\";\n\nclass GoogleIdentity extends GoogleAuthData {\n  constructor(options) {\n    super(options);\n    var {\n      uid,\n      email,\n      displayName,\n      photoURL,\n      firstName,\n      lastName\n    } = options;\n    this.uid = uid;\n    this.email = email;\n    this.displayName = displayName;\n    this.photoURL = photoURL;\n    this.firstName = firstName;\n    this.lastName = lastName;\n  }\n\n  equals(other) {\n    if (!super.equals(other) || !(other instanceof GoogleIdentity)) {\n      return false;\n    }\n\n    return this.displayName === other.displayName && this.photoURL === other.photoURL && this.uid === other.uid && this.email === other.email && this.firstName === other.firstName && this.lastName === other.lastName;\n  }\n\n  toJSON() {\n    return _objectSpread({}, super.toJSON(), {\n      uid: this.uid,\n      email: this.email,\n      displayName: this.displayName,\n      photoURL: this.photoURL,\n      firstName: this.firstName,\n      lastName: this.lastName\n    });\n  }\n\n}\n\nexport default GoogleIdentity;","map":{"version":3,"sources":["../src/GoogleIdentity.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,cAAP;;AAEA,MAAM,cAAN,SAA6B,cAA7B,CAA2C;AAQzC,EAAA,WAAA,CAAY,OAAZ,EAAwB;AACtB,UAAM,OAAN;AACA,QAAM;AAAE,MAAA,GAAF;AAAO,MAAA,KAAP;AAAc,MAAA,WAAd;AAA2B,MAAA,QAA3B;AAAqC,MAAA,SAArC;AAAgD,MAAA;AAAhD,QAA6D,OAAnE;AAEA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACD;;AAED,EAAA,MAAM,CAAC,KAAD,EAAW;AACf,QAAI,CAAC,MAAM,MAAN,CAAa,KAAb,CAAD,IAAwB,EAAE,KAAK,YAAY,cAAnB,CAA5B,EAAgE;AAC9D,aAAO,KAAP;AACD;;AAED,WACE,KAAK,WAAL,KAAqB,KAAK,CAAC,WAA3B,IACA,KAAK,QAAL,KAAkB,KAAK,CAAC,QADxB,IAEA,KAAK,GAAL,KAAa,KAAK,CAAC,GAFnB,IAGA,KAAK,KAAL,KAAe,KAAK,CAAC,KAHrB,IAIA,KAAK,SAAL,KAAmB,KAAK,CAAC,SAJzB,IAKA,KAAK,QAAL,KAAkB,KAAK,CAAC,QAN1B;AAQD;;AAED,EAAA,MAAM,GAAA;AACJ,6BACK,MAAM,MAAN,EADL;AAEE,MAAA,GAAG,EAAE,KAAK,GAFZ;AAGE,MAAA,KAAK,EAAE,KAAK,KAHd;AAIE,MAAA,WAAW,EAAE,KAAK,WAJpB;AAKE,MAAA,QAAQ,EAAE,KAAK,QALjB;AAME,MAAA,SAAS,EAAE,KAAK,SANlB;AAOE,MAAA,QAAQ,EAAE,KAAK;AAPjB;AASD;;AA7CwC;;AAgD3C,eAAe,cAAf","sourcesContent":["import GoogleAuthData from './GoogleAuthData';\n\nclass GoogleIdentity extends GoogleAuthData {\n  uid: string;\n  email: string;\n  displayName?: string;\n  photoURL?: string;\n  firstName?: string;\n  lastName?: string;\n\n  constructor(options: any) {\n    super(options);\n    const { uid, email, displayName, photoURL, firstName, lastName } = options;\n\n    this.uid = uid;\n    this.email = email;\n    this.displayName = displayName;\n    this.photoURL = photoURL;\n    this.firstName = firstName;\n    this.lastName = lastName;\n  }\n\n  equals(other: any): boolean {\n    if (!super.equals(other) || !(other instanceof GoogleIdentity)) {\n      return false;\n    }\n\n    return (\n      this.displayName === other.displayName &&\n      this.photoURL === other.photoURL &&\n      this.uid === other.uid &&\n      this.email === other.email &&\n      this.firstName === other.firstName &&\n      this.lastName === other.lastName\n    );\n  }\n\n  toJSON(): { [key: string]: any } {\n    return {\n      ...super.toJSON(),\n      uid: this.uid,\n      email: this.email,\n      displayName: this.displayName,\n      photoURL: this.photoURL,\n      firstName: this.firstName,\n      lastName: this.lastName,\n    };\n  }\n}\n\nexport default GoogleIdentity;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}