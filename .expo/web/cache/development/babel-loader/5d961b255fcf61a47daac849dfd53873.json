{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport ExpoDocumentPicker from \"./ExpoDocumentPicker\";\nexport function getDocumentAsync() {\n  return _getDocumentAsync.apply(this, arguments);\n}\n\nfunction _getDocumentAsync() {\n  _getDocumentAsync = _asyncToGenerator(function* () {\n    var {\n      type = '*/*',\n      copyToCacheDirectory = true,\n      multiple = false\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return yield ExpoDocumentPicker.getDocumentAsync({\n      type,\n      copyToCacheDirectory,\n      multiple\n    });\n  });\n  return _getDocumentAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":";;;;AAAA,OAAO,kBAAP;AAKA,gBAAsB,gBAAtB;AAAA;AAAA;;;wCAAO,aAIsB;AAAA,QAJU;AACrC,MAAA,IAAI,GAAG,KAD8B;AAErC,MAAA,oBAAoB,GAAG,IAFc;AAGrC,MAAA,QAAQ,GAAG;AAH0B,KAIV,uEAAF,EAAE;AAC3B,iBAAa,kBAAkB,CAAC,gBAAnB,CAAoC;AAAE,MAAA,IAAF;AAAQ,MAAA,oBAAR;AAA8B,MAAA;AAA9B,KAApC,CAAb;AACD,G","sourcesContent":["import ExpoDocumentPicker from './ExpoDocumentPicker';\n\nimport { DocumentPickerOptions, DocumentResult } from './types';\nexport { DocumentPickerOptions, DocumentResult };\n\nexport async function getDocumentAsync({\n  type = '*/*',\n  copyToCacheDirectory = true,\n  multiple = false,\n}: DocumentPickerOptions = {}): Promise<DocumentResult> {\n  return await ExpoDocumentPicker.getDocumentAsync({ type, copyToCacheDirectory, multiple });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}