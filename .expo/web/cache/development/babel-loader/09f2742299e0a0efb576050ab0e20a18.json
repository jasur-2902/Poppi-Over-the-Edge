{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nexport default {\n  get name() {\n    return 'ExponentPrint';\n  },\n\n  get Orientation() {\n    return {\n      portrait: 'portrait',\n      landscape: 'landscape'\n    };\n  },\n\n  print() {\n    return _asyncToGenerator(function* () {\n      window.print();\n    })();\n  },\n\n  printToFileAsync() {\n    return _asyncToGenerator(function* () {\n      window.print();\n    })();\n  }\n\n};","map":{"version":3,"sources":["../src/ExponentPrint.web.ts"],"names":[],"mappings":";;;;AAEA,eAAe;AACb,MAAI,IAAJ,GAAQ;AACN,WAAO,eAAP;AACD,GAHY;;AAIb,MAAI,WAAJ,GAAe;AACb,WAAO;AACL,MAAA,QAAQ,EAAE,UADL;AAEL,MAAA,SAAS,EAAE;AAFN,KAAP;AAID,GATY;;AAUP,EAAA,KAAN,GAAW;AAAA;AACT,MAAA,MAAM,CAAC,KAAP;AADS;AAEV,GAZY;;AAaP,EAAA,gBAAN,GAAsB;AAAA;AACpB,MAAA,MAAM,CAAC,KAAP;AADoB;AAErB;;AAfY,CAAf","sourcesContent":["import { OrientationType } from './Print.types';\n\nexport default {\n  get name(): string {\n    return 'ExponentPrint';\n  },\n  get Orientation(): OrientationType {\n    return {\n      portrait: 'portrait',\n      landscape: 'landscape',\n    };\n  },\n  async print(): Promise<void> {\n    window.print();\n  },\n  async printToFileAsync(): Promise<void> {\n    window.print();\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}