{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\react-native-elements\\\\src\\\\avatar\\\\Avatar.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RNImage from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport isEqual from 'lodash.isequal';\nimport { withTheme } from \"../config\";\nimport { renderNode, nodeType, ImageSourceType } from \"../helpers\";\nimport Icon from \"../icons/Icon\";\nimport Image from \"../image/Image\";\nvar avatarSizes = {\n  small: 34,\n  medium: 50,\n  large: 75,\n  xlarge: 150\n};\nvar defaultAccessory = {\n  name: 'mode-edit',\n  type: 'material',\n  color: '#fff',\n  underlayColor: '#000'\n};\n\nvar AvatarComponent = (_ref) => {\n  var {\n    onPress,\n    onLongPress,\n    Component = onPress || onLongPress ? TouchableOpacity : View,\n    containerStyle,\n    icon,\n    iconStyle,\n    source,\n    size,\n    avatarStyle,\n    rounded,\n    title,\n    titleStyle,\n    overlayContainerStyle,\n    showAccessory,\n    accessory: passedAccessory,\n    onAccessoryPress,\n    imageProps,\n    placeholderStyle,\n    renderPlaceholderContent,\n    ImageComponent\n  } = _ref,\n      attributes = _objectWithoutProperties(_ref, [\"onPress\", \"onLongPress\", \"Component\", \"containerStyle\", \"icon\", \"iconStyle\", \"source\", \"size\", \"avatarStyle\", \"rounded\", \"title\", \"titleStyle\", \"overlayContainerStyle\", \"showAccessory\", \"accessory\", \"onAccessoryPress\", \"imageProps\", \"placeholderStyle\", \"renderPlaceholderContent\", \"ImageComponent\"]);\n\n  var width = typeof size === 'number' ? size : avatarSizes[size] || avatarSizes.small;\n  var height = width;\n  var titleSize = width / 2;\n  var iconSize = width / 2;\n\n  var accessory = _objectSpread(_objectSpread({}, defaultAccessory), passedAccessory);\n\n  var accessorySize = accessory.size || (width + height) / 2 / 3;\n  var Utils = showAccessory && React.createElement(TouchableHighlight, {\n    style: StyleSheet.flatten([styles.accessory, {\n      width: accessorySize,\n      height: accessorySize,\n      borderRadius: accessorySize / 2\n    }, accessory.style]),\n    underlayColor: accessory.underlayColor,\n    onPress: onAccessoryPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, 'source' in accessory ? React.createElement(Image, _extends({\n    style: {\n      width: accessorySize,\n      height: accessorySize,\n      borderRadius: accessorySize / 2\n    }\n  }, accessory, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })) : React.createElement(Icon, _extends({\n    size: accessorySize * 0.8\n  }, accessory, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))));\n  var PlaceholderContent = renderPlaceholderContent && renderNode(undefined, renderPlaceholderContent) || title && React.createElement(Text, {\n    style: StyleSheet.flatten([styles.title, {\n      fontSize: titleSize\n    }, titleStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, title) || icon && React.createElement(Icon, {\n    style: iconStyle && iconStyle,\n    color: icon.color || 'white',\n    name: icon.name || 'user',\n    size: icon.size || iconSize,\n    type: icon.type && icon.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  });\n  var hidePlaceholder = !source;\n  return React.createElement(Component, _extends({\n    onPress: onPress,\n    onLongPress: onLongPress,\n    style: StyleSheet.flatten([styles.container, {\n      height,\n      width\n    }, rounded && {\n      borderRadius: width / 2\n    }, containerStyle])\n  }, attributes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }), React.createElement(Image, _extends({\n    placeholderStyle: StyleSheet.flatten([placeholderStyle, hidePlaceholder && {\n      backgroundColor: 'transparent'\n    }]),\n    PlaceholderContent: PlaceholderContent,\n    containerStyle: StyleSheet.flatten([styles.overlayContainer, rounded && {\n      borderRadius: width / 2,\n      overflow: 'hidden'\n    }, overlayContainerStyle]),\n    source: source\n  }, imageProps, {\n    style: StyleSheet.flatten([styles.avatar, imageProps && imageProps.style, avatarStyle]),\n    ImageComponent: ImageComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  })), Utils);\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent'\n  },\n  avatar: {\n    flex: 1,\n    width: null,\n    height: null\n  },\n  overlayContainer: {\n    flex: 1\n  },\n  title: {\n    color: '#ffffff',\n    backgroundColor: 'transparent',\n    textAlign: 'center'\n  },\n  accessory: _objectSpread({\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#aaa'\n  }, Platform.select({\n    android: {\n      elevation: 1\n    },\n    default: {\n      shadowColor: '#000',\n      shadowOffset: {\n        width: 1,\n        height: 1\n      },\n      shadowRadius: 2,\n      shadowOpacity: 0.5\n    }\n  }))\n});\nAvatarComponent.propTypes = {\n  Component: PropTypes.oneOf([View, TouchableOpacity, TouchableHighlight, TouchableNativeFeedback, TouchableWithoutFeedback]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  source: ImageSourceType,\n  avatarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  rounded: PropTypes.bool,\n  title: PropTypes.string,\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  activeOpacity: PropTypes.number,\n  icon: PropTypes.object,\n  iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  size: PropTypes.oneOfType([PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']), PropTypes.number]),\n  showAccessory: PropTypes.bool,\n  onAccessoryPress: PropTypes.func,\n  accessory: PropTypes.shape({\n    size: PropTypes.number,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    color: PropTypes.string,\n    underlayColor: PropTypes.string,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array])\n  }),\n  placeholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  renderPlaceholderContent: nodeType,\n  imageProps: PropTypes.object,\n  ImageComponent: PropTypes.elementType\n};\nAvatarComponent.defaultProps = {\n  showAccessory: false,\n  onAccessoryPress: null,\n  size: 'small',\n  accessory: defaultAccessory,\n  ImageComponent: RNImage\n};\nvar Avatar = React.memo(AvatarComponent, isEqual);\nexport { Avatar };\nexport default withTheme(Avatar, 'Avatar');","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/react-native-elements/src/avatar/Avatar.js"],"names":["React","PropTypes","isEqual","withTheme","renderNode","nodeType","ImageSourceType","Icon","Image","avatarSizes","small","medium","large","xlarge","defaultAccessory","name","type","color","underlayColor","AvatarComponent","onPress","onLongPress","Component","TouchableOpacity","View","containerStyle","icon","iconStyle","source","size","avatarStyle","rounded","title","titleStyle","overlayContainerStyle","showAccessory","accessory","passedAccessory","onAccessoryPress","imageProps","placeholderStyle","renderPlaceholderContent","ImageComponent","attributes","width","height","titleSize","iconSize","accessorySize","Utils","StyleSheet","flatten","styles","borderRadius","style","PlaceholderContent","undefined","fontSize","hidePlaceholder","container","backgroundColor","overlayContainer","overflow","avatar","create","flex","textAlign","position","bottom","right","alignItems","justifyContent","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius","shadowOpacity","propTypes","oneOf","TouchableHighlight","TouchableNativeFeedback","TouchableWithoutFeedback","func","oneOfType","object","array","bool","string","activeOpacity","number","shape","elementType","defaultProps","RNImage","Avatar","memo"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;;;;;;;AAYA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,SAASC,SAAT;AACA,SAASC,UAAT,EAAqBC,QAArB,EAA+BC,eAA/B;AAEA,OAAOC,IAAP;AACA,OAAOC,KAAP;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,MAAM,EAAE,EAFU;AAGlBC,EAAAA,KAAK,EAAE,EAHW;AAIlBC,EAAAA,MAAM,EAAE;AAJU,CAApB;AAOA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE,WADiB;AAEvBC,EAAAA,IAAI,EAAE,UAFiB;AAGvBC,EAAAA,KAAK,EAAE,MAHgB;AAIvBC,EAAAA,aAAa,EAAE;AAJQ,CAAzB;;AAOA,IAAMC,eAAe,GAAG,UAsBlB;AAAA,MAtBmB;AACvBC,IAAAA,OADuB;AAEvBC,IAAAA,WAFuB;AAGvBC,IAAAA,SAAS,GAAGF,OAAO,IAAIC,WAAX,GAAyBE,gBAAzB,GAA4CC,IAHjC;AAIvBC,IAAAA,cAJuB;AAKvBC,IAAAA,IALuB;AAMvBC,IAAAA,SANuB;AAOvBC,IAAAA,MAPuB;AAQvBC,IAAAA,IARuB;AASvBC,IAAAA,WATuB;AAUvBC,IAAAA,OAVuB;AAWvBC,IAAAA,KAXuB;AAYvBC,IAAAA,UAZuB;AAavBC,IAAAA,qBAbuB;AAcvBC,IAAAA,aAduB;AAevBC,IAAAA,SAAS,EAAEC,eAfY;AAgBvBC,IAAAA,gBAhBuB;AAiBvBC,IAAAA,UAjBuB;AAkBvBC,IAAAA,gBAlBuB;AAmBvBC,IAAAA,wBAnBuB;AAoBvBC,IAAAA;AApBuB,GAsBnB;AAAA,MADDC,UACC;;AACJ,MAAMC,KAAK,GACT,OAAOf,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCpB,WAAW,CAACoB,IAAD,CAAX,IAAqBpB,WAAW,CAACC,KADrE;AAEA,MAAMmC,MAAM,GAAGD,KAAf;AACA,MAAME,SAAS,GAAGF,KAAK,GAAG,CAA1B;AACA,MAAMG,QAAQ,GAAGH,KAAK,GAAG,CAAzB;;AAEA,MAAMR,SAAS,mCACVtB,gBADU,GAEVuB,eAFU,CAAf;;AAIA,MAAMW,aAAa,GAAGZ,SAAS,CAACP,IAAV,IAAkB,CAACe,KAAK,GAAGC,MAAT,IAAmB,CAAnB,GAAuB,CAA/D;AAEA,MAAMI,KAAK,GAAGd,aAAa,IACzB,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAEe,UAAU,CAACC,OAAX,CAAmB,CACxBC,MAAM,CAAChB,SADiB,EAExB;AACEQ,MAAAA,KAAK,EAAEI,aADT;AAEEH,MAAAA,MAAM,EAAEG,aAFV;AAGEK,MAAAA,YAAY,EAAEL,aAAa,GAAG;AAHhC,KAFwB,EAOxBZ,SAAS,CAACkB,KAPc,CAAnB,CADT;AAUE,IAAA,aAAa,EAAElB,SAAS,CAAClB,aAV3B;AAWE,IAAA,OAAO,EAAEoB,gBAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,YAAYF,SAAZ,GACC,oBAAC,KAAD;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,KAAK,EAAEI,aADF;AAELH,MAAAA,MAAM,EAAEG,aAFH;AAGLK,MAAAA,YAAY,EAAEL,aAAa,GAAG;AAHzB;AADT,KAMMZ,SANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,GAUC,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEY,aAAa,GAAG;AAA5B,KAAqCZ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXJ,CAbF,CADF;AA+BA,MAAMmB,kBAAkB,GACrBd,wBAAwB,IACvBrC,UAAU,CAACoD,SAAD,EAAYf,wBAAZ,CADZ,IAECT,KAAK,IACJ,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEkB,UAAU,CAACC,OAAX,CAAmB,CACxBC,MAAM,CAACpB,KADiB,EAExB;AAAEyB,MAAAA,QAAQ,EAAEX;AAAZ,KAFwB,EAGxBb,UAHwB,CAAnB,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,KAPH,CAHF,IAaCN,IAAI,IACH,oBAAC,IAAD;AACE,IAAA,KAAK,EAAEC,SAAS,IAAIA,SADtB;AAEE,IAAA,KAAK,EAAED,IAAI,CAACT,KAAL,IAAc,OAFvB;AAGE,IAAA,IAAI,EAAES,IAAI,CAACX,IAAL,IAAa,MAHrB;AAIE,IAAA,IAAI,EAAEW,IAAI,CAACG,IAAL,IAAakB,QAJrB;AAKE,IAAA,IAAI,EAAErB,IAAI,CAACV,IAAL,IAAaU,IAAI,CAACV,IAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfJ;AAyBA,MAAM0C,eAAe,GAAG,CAAC9B,MAAzB;AAEA,SACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAER,OADX;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,KAAK,EAAE6B,UAAU,CAACC,OAAX,CAAmB,CACxBC,MAAM,CAACO,SADiB,EAExB;AAAEd,MAAAA,MAAF;AAAUD,MAAAA;AAAV,KAFwB,EAGxBb,OAAO,IAAI;AAAEsB,MAAAA,YAAY,EAAET,KAAK,GAAG;AAAxB,KAHa,EAIxBnB,cAJwB,CAAnB;AAHT,KASMkB,UATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWE,oBAAC,KAAD;AACE,IAAA,gBAAgB,EAAEO,UAAU,CAACC,OAAX,CAAmB,CACnCX,gBADmC,EAEnCkB,eAAe,IAAI;AAAEE,MAAAA,eAAe,EAAE;AAAnB,KAFgB,CAAnB,CADpB;AAKE,IAAA,kBAAkB,EAAEL,kBALtB;AAME,IAAA,cAAc,EAAEL,UAAU,CAACC,OAAX,CAAmB,CACjCC,MAAM,CAACS,gBAD0B,EAEjC9B,OAAO,IAAI;AAAEsB,MAAAA,YAAY,EAAET,KAAK,GAAG,CAAxB;AAA2BkB,MAAAA,QAAQ,EAAE;AAArC,KAFsB,EAGjC5B,qBAHiC,CAAnB,CANlB;AAWE,IAAA,MAAM,EAAEN;AAXV,KAYMW,UAZN;AAaE,IAAA,KAAK,EAAEW,UAAU,CAACC,OAAX,CAAmB,CACxBC,MAAM,CAACW,MADiB,EAExBxB,UAAU,IAAIA,UAAU,CAACe,KAFD,EAGxBxB,WAHwB,CAAnB,CAbT;AAkBE,IAAA,cAAc,EAAEY,cAlBlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXF,EA+BGO,KA/BH,CADF;AAmCD,CAhID;;AAkIA,IAAMG,MAAM,GAAGF,UAAU,CAACc,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAE;AADR,GADoB;AAI/BG,EAAAA,MAAM,EAAE;AACNE,IAAAA,IAAI,EAAE,CADA;AAENrB,IAAAA,KAAK,EAAE,IAFD;AAGNC,IAAAA,MAAM,EAAE;AAHF,GAJuB;AAS/BgB,EAAAA,gBAAgB,EAAE;AAChBI,IAAAA,IAAI,EAAE;AADU,GATa;AAY/BjC,EAAAA,KAAK,EAAE;AACLf,IAAAA,KAAK,EAAE,SADF;AAEL2C,IAAAA,eAAe,EAAE,aAFZ;AAGLM,IAAAA,SAAS,EAAE;AAHN,GAZwB;AAiB/B9B,EAAAA,SAAS;AACP+B,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,MAAM,EAAE,CAFD;AAGPC,IAAAA,KAAK,EAAE,CAHA;AAIPC,IAAAA,UAAU,EAAE,QAJL;AAKPC,IAAAA,cAAc,EAAE,QALT;AAMPX,IAAAA,eAAe,EAAE;AANV,KAOJY,QAAQ,CAACC,MAAT,CAAgB;AACjBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE;AADJ,KADQ;AAIjBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE,MADN;AAEPC,MAAAA,YAAY,EAAE;AAAElC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAFP;AAGPkC,MAAAA,YAAY,EAAE,CAHP;AAIPC,MAAAA,aAAa,EAAE;AAJR;AAJQ,GAAhB,CAPI;AAjBsB,CAAlB,CAAf;AAsCA7D,eAAe,CAAC8D,SAAhB,GAA4B;AAC1B3D,EAAAA,SAAS,EAAErB,SAAS,CAACiF,KAAV,CAAgB,CACzB1D,IADyB,EAEzBD,gBAFyB,EAGzB4D,kBAHyB,EAIzBC,uBAJyB,EAKzBC,wBALyB,CAAhB,CADe;AAQ1BjE,EAAAA,OAAO,EAAEnB,SAAS,CAACqF,IARO;AAS1BjE,EAAAA,WAAW,EAAEpB,SAAS,CAACqF,IATG;AAU1B7D,EAAAA,cAAc,EAAExB,SAAS,CAACsF,SAAV,CAAoB,CAACtF,SAAS,CAACuF,MAAX,EAAmBvF,SAAS,CAACwF,KAA7B,CAApB,CAVU;AAW1B7D,EAAAA,MAAM,EAAEtB,eAXkB;AAY1BwB,EAAAA,WAAW,EAAE7B,SAAS,CAACsF,SAAV,CAAoB,CAACtF,SAAS,CAACuF,MAAX,EAAmBvF,SAAS,CAACwF,KAA7B,CAApB,CAZa;AAa1B1D,EAAAA,OAAO,EAAE9B,SAAS,CAACyF,IAbO;AAc1B1D,EAAAA,KAAK,EAAE/B,SAAS,CAAC0F,MAdS;AAe1B1D,EAAAA,UAAU,EAAEhC,SAAS,CAACsF,SAAV,CAAoB,CAACtF,SAAS,CAACuF,MAAX,EAAmBvF,SAAS,CAACwF,KAA7B,CAApB,CAfc;AAgB1BvD,EAAAA,qBAAqB,EAAEjC,SAAS,CAACsF,SAAV,CAAoB,CACzCtF,SAAS,CAACuF,MAD+B,EAEzCvF,SAAS,CAACwF,KAF+B,CAApB,CAhBG;AAoB1BG,EAAAA,aAAa,EAAE3F,SAAS,CAAC4F,MApBC;AAqB1BnE,EAAAA,IAAI,EAAEzB,SAAS,CAACuF,MArBU;AAsB1B7D,EAAAA,SAAS,EAAE1B,SAAS,CAACsF,SAAV,CAAoB,CAACtF,SAAS,CAACuF,MAAX,EAAmBvF,SAAS,CAACwF,KAA7B,CAApB,CAtBe;AAuB1B5D,EAAAA,IAAI,EAAE5B,SAAS,CAACsF,SAAV,CAAoB,CACxBtF,SAAS,CAACiF,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,QAA7B,CAAhB,CADwB,EAExBjF,SAAS,CAAC4F,MAFc,CAApB,CAvBoB;AA2B1B1D,EAAAA,aAAa,EAAElC,SAAS,CAACyF,IA3BC;AA4B1BpD,EAAAA,gBAAgB,EAAErC,SAAS,CAACqF,IA5BF;AA6B1BlD,EAAAA,SAAS,EAAEnC,SAAS,CAAC6F,KAAV,CAAgB;AACzBjE,IAAAA,IAAI,EAAE5B,SAAS,CAAC4F,MADS;AAEzB9E,IAAAA,IAAI,EAAEd,SAAS,CAAC0F,MAFS;AAGzB3E,IAAAA,IAAI,EAAEf,SAAS,CAAC0F,MAHS;AAIzB1E,IAAAA,KAAK,EAAEhB,SAAS,CAAC0F,MAJQ;AAKzBzE,IAAAA,aAAa,EAAEjB,SAAS,CAAC0F,MALA;AAMzBrC,IAAAA,KAAK,EAAErD,SAAS,CAACsF,SAAV,CAAoB,CAACtF,SAAS,CAACuF,MAAX,EAAmBvF,SAAS,CAACwF,KAA7B,CAApB;AANkB,GAAhB,CA7Be;AAqC1BjD,EAAAA,gBAAgB,EAAEvC,SAAS,CAACsF,SAAV,CAAoB,CAACtF,SAAS,CAACuF,MAAX,EAAmBvF,SAAS,CAACwF,KAA7B,CAApB,CArCQ;AAsC1BhD,EAAAA,wBAAwB,EAAEpC,QAtCA;AAuC1BkC,EAAAA,UAAU,EAAEtC,SAAS,CAACuF,MAvCI;AAwC1B9C,EAAAA,cAAc,EAAEzC,SAAS,CAAC8F;AAxCA,CAA5B;AA2CA5E,eAAe,CAAC6E,YAAhB,GAA+B;AAC7B7D,EAAAA,aAAa,EAAE,KADc;AAE7BG,EAAAA,gBAAgB,EAAE,IAFW;AAG7BT,EAAAA,IAAI,EAAE,OAHuB;AAI7BO,EAAAA,SAAS,EAAEtB,gBAJkB;AAK7B4B,EAAAA,cAAc,EAAEuD;AALa,CAA/B;AAQA,IAAMC,MAAM,GAAGlG,KAAK,CAACmG,IAAN,CAAWhF,eAAX,EAA4BjB,OAA5B,CAAf;AACA,SAASgG,MAAT;AACA,eAAe/F,SAAS,CAAC+F,MAAD,EAAS,QAAT,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  Text,\n  Image as RNImage,\n  Platform,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport isEqual from 'lodash.isequal';\n\nimport { withTheme } from '../config';\nimport { renderNode, nodeType, ImageSourceType } from '../helpers';\n\nimport Icon from '../icons/Icon';\nimport Image from '../image/Image';\n\nconst avatarSizes = {\n  small: 34,\n  medium: 50,\n  large: 75,\n  xlarge: 150,\n};\n\nconst defaultAccessory = {\n  name: 'mode-edit',\n  type: 'material',\n  color: '#fff',\n  underlayColor: '#000',\n};\n\nconst AvatarComponent = ({\n  onPress,\n  onLongPress,\n  Component = onPress || onLongPress ? TouchableOpacity : View,\n  containerStyle,\n  icon,\n  iconStyle,\n  source,\n  size,\n  avatarStyle,\n  rounded,\n  title,\n  titleStyle,\n  overlayContainerStyle,\n  showAccessory,\n  accessory: passedAccessory,\n  onAccessoryPress,\n  imageProps,\n  placeholderStyle,\n  renderPlaceholderContent,\n  ImageComponent,\n  ...attributes\n}) => {\n  const width =\n    typeof size === 'number' ? size : avatarSizes[size] || avatarSizes.small;\n  const height = width;\n  const titleSize = width / 2;\n  const iconSize = width / 2;\n\n  const accessory = {\n    ...defaultAccessory,\n    ...passedAccessory,\n  };\n  const accessorySize = accessory.size || (width + height) / 2 / 3;\n\n  const Utils = showAccessory && (\n    <TouchableHighlight\n      style={StyleSheet.flatten([\n        styles.accessory,\n        {\n          width: accessorySize,\n          height: accessorySize,\n          borderRadius: accessorySize / 2,\n        },\n        accessory.style,\n      ])}\n      underlayColor={accessory.underlayColor}\n      onPress={onAccessoryPress}\n    >\n      <View>\n        {'source' in accessory ? (\n          <Image\n            style={{\n              width: accessorySize,\n              height: accessorySize,\n              borderRadius: accessorySize / 2,\n            }}\n            {...accessory}\n          />\n        ) : (\n          <Icon size={accessorySize * 0.8} {...accessory} />\n        )}\n      </View>\n    </TouchableHighlight>\n  );\n\n  const PlaceholderContent =\n    (renderPlaceholderContent &&\n      renderNode(undefined, renderPlaceholderContent)) ||\n    (title && (\n      <Text\n        style={StyleSheet.flatten([\n          styles.title,\n          { fontSize: titleSize },\n          titleStyle,\n        ])}\n      >\n        {title}\n      </Text>\n    )) ||\n    (icon && (\n      <Icon\n        style={iconStyle && iconStyle}\n        color={icon.color || 'white'}\n        name={icon.name || 'user'}\n        size={icon.size || iconSize}\n        type={icon.type && icon.type}\n      />\n    ));\n\n  // Remove placeholder styling if we're not using image\n  const hidePlaceholder = !source;\n\n  return (\n    <Component\n      onPress={onPress}\n      onLongPress={onLongPress}\n      style={StyleSheet.flatten([\n        styles.container,\n        { height, width },\n        rounded && { borderRadius: width / 2 },\n        containerStyle,\n      ])}\n      {...attributes}\n    >\n      <Image\n        placeholderStyle={StyleSheet.flatten([\n          placeholderStyle,\n          hidePlaceholder && { backgroundColor: 'transparent' },\n        ])}\n        PlaceholderContent={PlaceholderContent}\n        containerStyle={StyleSheet.flatten([\n          styles.overlayContainer,\n          rounded && { borderRadius: width / 2, overflow: 'hidden' },\n          overlayContainerStyle,\n        ])}\n        source={source}\n        {...imageProps}\n        style={StyleSheet.flatten([\n          styles.avatar,\n          imageProps && imageProps.style,\n          avatarStyle,\n        ])}\n        ImageComponent={ImageComponent}\n      />\n      {Utils}\n    </Component>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n  },\n  avatar: {\n    flex: 1,\n    width: null,\n    height: null,\n  },\n  overlayContainer: {\n    flex: 1,\n  },\n  title: {\n    color: '#ffffff',\n    backgroundColor: 'transparent',\n    textAlign: 'center',\n  },\n  accessory: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#aaa',\n    ...Platform.select({\n      android: {\n        elevation: 1,\n      },\n      default: {\n        shadowColor: '#000',\n        shadowOffset: { width: 1, height: 1 },\n        shadowRadius: 2,\n        shadowOpacity: 0.5,\n      },\n    }),\n  },\n});\n\nAvatarComponent.propTypes = {\n  Component: PropTypes.oneOf([\n    View,\n    TouchableOpacity,\n    TouchableHighlight,\n    TouchableNativeFeedback,\n    TouchableWithoutFeedback,\n  ]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  source: ImageSourceType,\n  avatarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  rounded: PropTypes.bool,\n  title: PropTypes.string,\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  activeOpacity: PropTypes.number,\n  icon: PropTypes.object,\n  iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']),\n    PropTypes.number,\n  ]),\n  showAccessory: PropTypes.bool,\n  onAccessoryPress: PropTypes.func,\n  accessory: PropTypes.shape({\n    size: PropTypes.number,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    color: PropTypes.string,\n    underlayColor: PropTypes.string,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  }),\n  placeholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  renderPlaceholderContent: nodeType,\n  imageProps: PropTypes.object,\n  ImageComponent: PropTypes.elementType,\n};\n\nAvatarComponent.defaultProps = {\n  showAccessory: false,\n  onAccessoryPress: null,\n  size: 'small',\n  accessory: defaultAccessory,\n  ImageComponent: RNImage,\n};\n\nconst Avatar = React.memo(AvatarComponent, isEqual);\nexport { Avatar };\nexport default withTheme(Avatar, 'Avatar');\n"]},"metadata":{},"sourceType":"module"}