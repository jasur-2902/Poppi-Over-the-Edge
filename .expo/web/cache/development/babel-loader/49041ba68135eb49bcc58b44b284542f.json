{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { PIXI } from 'expo-pixi';\nimport { extras, Sprite } from 'pixi.js';\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport source2 from \"../assets/ground2.png\";\nimport source3 from \"../assets/guards/guards6.png\";\nimport groundSouce from \"../assets/ground/ground3.png\";\nimport penguinSource from \"../assets/penguin/penguin1.png\";\nimport setupSpriteSheetAsync from \"./setupSpriteSheetAsync\";\nimport sprites from \"./sprites\";\nimport sprites2 from \"./Sprites/spriteSheet\";\nimport sprites3 from \"./Sprites/guardSheet\";\nimport groundSprites from \"./Sprites/ground\";\nimport penguinSprites from \"./Sprites/penguin\";\nvar {\n  AnimatedSprite\n} = extras;\nvar scale = PixelRatio.get();\nvar crnt_level = 1;\nvar Settings = {\n  playerFallSpeed: 0 * scale,\n  playerHorizontalPosition: 640 * scale,\n  playerVerticalPosition: 650 * scale,\n  playerMaxVelocity: -3 * scale,\n  groundPositionX: 0,\n  groundPositionY: 0,\n  playerGravity: 0 * scale,\n  minPipeHeight: 50 * scale,\n  pipeVerticalGap: 190 * scale,\n  gameSpeed: 15 * 0.25,\n  guardWidth: 140 * scale,\n  guardHeight: 140 * scale,\n  secondCloudPositionY: 0\n};\n\nclass SteadySprite extends Sprite {\n  constructor() {\n    super(...arguments);\n  }\n\n}\n\nclass Ground2 extends Sprite {\n  constructor(texture) {\n    super(texture, Settings.width, Settings.groundHeight);\n    this.buttonIsPressed = false;\n    this.groundDown = false;\n    this.scale.set(scale * 2);\n    console.log(\"SIZE:\", Settings.width, Settings.height, scale);\n    this.height = Settings.height / 2.4;\n    this.width = Settings.width / 1.1;\n    Settings.groundPositionX = Settings.width / 20;\n    Settings.groundPositionY = Settings.height - this.height;\n    this.position.x = Settings.groundPositionX;\n    this.position.y = Settings.groundPositionY;\n  }\n\n}\n\nclass SideClouds extends Sprite {\n  constructor(texture) {\n    super(texture, Settings.width, Settings.groundHeight);\n    this.width = Settings.width;\n    this.height = Settings.height / 4;\n    this.position.x = 0;\n    Settings.secondCloudPositionY = Settings.height / 1.5;\n    this.position.y = Settings.secondCloudPositionY;\n  }\n\n}\n\nclass Cloud extends Sprite {\n  constructor(texture) {\n    super(texture);\n    this.scale.set(scale * 2);\n    this.height = Settings.height / 6;\n    this.width = Settings.width;\n    this.position.x = 0;\n    this.position.y = Settings.height - this.height;\n  }\n\n}\n\nclass CaughtMessage extends Sprite {\n  constructor(texture) {\n    super(texture, Settings.width, Settings.groundHeight);\n    this.backward = true;\n    this.buttonIsPressed = false;\n    this.scale.set(scale * 2);\n    this.width = Settings.width / 8;\n    this.height = Settings.height / 6;\n    this.position.x = Settings.width / 2;\n    this.position.y = Settings.skyHeight;\n  }\n\n}\n\nclass Guard extends Sprite {\n  constructor(texture) {\n    super(texture, Settings.width, Settings.groundHeight);\n    this.scale.set(scale * 2);\n    this.width = Settings.width / 10;\n    this.height = Settings.height / 8;\n    this.position.x = Settings.width / 2;\n    this.position.y = Settings.height;\n  }\n\n}\n\nclass Background extends Sprite {\n  constructor(texture) {\n    super(texture);\n    this.moveGround = false;\n    this.position.x = 0;\n    this.position.y = 0;\n    this.width = Settings.width;\n    this.height = Settings.height;\n  }\n\n}\n\nclass Bird extends AnimatedSprite {\n  constructor(textures) {\n    super(textures);\n    this.moveBird = false;\n\n    this.restart = () => {\n      this.play();\n      this.rotation = 0;\n      this.position.x = Settings.width / 2;\n      this.position.y = Settings.height / 1.1;\n    };\n\n    this.animationSpeed = 0.00;\n    this.anchor.set(0.5);\n    this.width = Settings.width / 20;\n    this.height = Settings.height / 15;\n    this.speedY = Settings.playerFallSpeed;\n    this.rate = Settings.playerGravity;\n    this.restart();\n  }\n\n}\n\nvar bird;\n\nclass Game {\n  constructor(context, background, guard) {\n    var _this = this;\n\n    this.stopAnimating = true;\n    this.isStarted = false;\n    this.isDead = false;\n    this.score = 0;\n    this.isButtonReleased = false;\n    this.userLost = false;\n\n    this.resize = (_ref) => {\n      var {\n        width,\n        height,\n        scale\n      } = _ref;\n      var parent = this.app.view.parentNode;\n    };\n\n    this.loadAsync = _asyncToGenerator(function* () {\n      _this.textures = yield setupSpriteSheetAsync(_this.this_background, sprites);\n      _this.textures2 = yield setupSpriteSheetAsync(source2, sprites2);\n      _this.guardTextute = yield setupSpriteSheetAsync(source3, sprites3);\n      _this.groundTexture = yield setupSpriteSheetAsync(groundSouce, groundSprites);\n      _this.penguinTexture = yield setupSpriteSheetAsync(penguinSource, penguinSprites);\n\n      _this.onAssetsLoaded();\n    });\n\n    this.onAssetsLoaded = () => {\n      this.background = new Background(this.textures.background);\n      bird = new Bird([this.penguinTexture['penguin1'], this.penguinTexture['penguin2'], this.penguinTexture['penguin3'], this.penguinTexture['penguin4']]);\n      this.bird = bird;\n      this.ground2 = new Ground2(this.groundTexture.ground1);\n      this.edge = new SideClouds(this.groundTexture.cloud1);\n      this.cloud = new Cloud(this.groundTexture.cloud2);\n      this.caughtMessage = new CaughtMessage(this.guardTextute.message);\n      var randomGuard = Math.floor(Math.random() * 10) + 1;\n      this.guard = new Guard(this.guardTextute.guard10);\n      this.guard = new Guard(this.guardTextute[this.this_guard]);\n      [this.background, this.guard, this.caughtMessage, this.edge, this.ground2, this.cloud, this.bird].map(child => this.app.stage.addChild(child));\n      this.stopAnimating = false;\n    };\n\n    this.onPress = () => {\n      this.guard.buttonIsPressed = true;\n      this.guard.backward = true;\n      this.bird.animationSpeed = 0.053;\n      this.ground2.moveGround = true;\n\n      if (this.ground2.groundDown = false) {\n        this.ground2.groundDown = true;\n      }\n\n      this.beginGame();\n      setTimeout(() => {\n        this.loseMessage();\n      }, 2000);\n    };\n\n    this.onPressOut = () => {\n      this.ground2.moveGround = false;\n      this.moveBack();\n      this.bird.animationSpeed = 0;\n    };\n\n    this.beginGame = () => {\n      if (!this.isStarted) {\n        this.isStarted = true;\n        console.log(\"BeginGame\");\n      }\n    };\n\n    this.animate = () => {\n      if (this.stopAnimating) {\n        return;\n      }\n\n      if (this.isStarted && this.ground2.moveGround) {\n        this.moveToTheEdge();\n      }\n    };\n\n    this.moveToTheEdge = () => {\n      if (!this.ground2.groundDown) {\n        this.ground2.position.y += Settings.gameSpeed;\n        this.edge.position.y += Settings.gameSpeed;\n        if (this.ground2.position.y > Settings.height * 0.7) this.ground2.groundDown = true;\n        this.guard.position.y = Settings.height / 2.5;\n      } else if (this.ground2.position.x > Settings.skyHeight) {\n        this.ground2.position.x += Settings.gameSpeed;\n      } else {\n        this.ground2.buttonIsPressed = false;\n      }\n    };\n\n    this.moveBack = () => {\n      this.ground2.position.y = Settings.groundPositionY;\n      this.edge.position.y = Settings.secondCloudPositionY;\n    };\n\n    this.restart = () => {\n      this.isStarted = false;\n      this.isDead = false;\n      this.stopAnimating = false;\n      this.bird.restart();\n      this.animate();\n    };\n\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n    this.this_guard = guard;\n    this.this_background = background;\n    this.app = new PIXI.Application({\n      context,\n      autoResize: false,\n      width: context.drawingBufferWidth / 1,\n      height: context.drawingBufferHeight / 1\n    });\n    this.app.ticker.add(this.animate);\n    Settings.width = this.app.renderer.width;\n    Settings.height = this.app.renderer.height;\n    Settings.skyHeight = Settings.height - Settings.groundHeight;\n    Settings.pipeHorizontalGap = Settings.pipeWidth * 5;\n    this.loadAsync();\n  }\n\n  loseMessage() {\n    if (!this.isButtonReleased) {\n      console.log(\"Lose Message!\");\n      this.caughtMessage.position.y = Settings.height * 0.4;\n      this.userLost = true;\n    } else {\n      console.log(\"Button was released!\");\n    }\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/src/game.js"],"names":["PIXI","extras","Sprite","source2","source3","groundSouce","penguinSource","setupSpriteSheetAsync","sprites","sprites2","sprites3","groundSprites","penguinSprites","AnimatedSprite","scale","PixelRatio","get","crnt_level","Settings","playerFallSpeed","playerHorizontalPosition","playerVerticalPosition","playerMaxVelocity","groundPositionX","groundPositionY","playerGravity","minPipeHeight","pipeVerticalGap","gameSpeed","guardWidth","guardHeight","secondCloudPositionY","SteadySprite","constructor","Ground2","texture","width","groundHeight","buttonIsPressed","groundDown","set","console","log","height","position","x","y","SideClouds","Cloud","CaughtMessage","backward","skyHeight","Guard","Background","moveGround","Bird","textures","moveBird","restart","play","rotation","animationSpeed","anchor","speedY","rate","bird","Game","context","background","guard","stopAnimating","isStarted","isDead","score","isButtonReleased","userLost","resize","parent","app","view","parentNode","loadAsync","this_background","textures2","guardTextute","groundTexture","penguinTexture","onAssetsLoaded","ground2","ground1","edge","cloud1","cloud","cloud2","caughtMessage","message","randomGuard","Math","floor","random","guard10","this_guard","map","child","stage","addChild","onPress","beginGame","setTimeout","loseMessage","onPressOut","moveBack","animate","moveToTheEdge","settings","SCALE_MODE","SCALE_MODES","NEAREST","Application","autoResize","drawingBufferWidth","drawingBufferHeight","ticker","add","renderer","pipeHorizontalGap","pipeWidth"],"mappings":"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","sourcesContent":["// Importing libraries \nimport { PIXI } from 'expo-pixi';\nimport {extras, Sprite } from 'pixi.js';\nimport {PixelRatio } from 'react-native';\n\n// Importing backgrounds and assets \nimport source2 from '../assets/ground2.png';\nimport source3 from '../assets/guards/guards6.png';\nimport groundSouce from '../assets/ground/ground3.png';\nimport penguinSource from '../assets/penguin/penguin1.png';\n\n\n// Importing sprites \nimport setupSpriteSheetAsync from './setupSpriteSheetAsync';\nimport sprites from './sprites';\nimport sprites2 from './Sprites/spriteSheet';\nimport sprites3 from './Sprites/guardSheet';\nimport groundSprites from './Sprites/ground';\nimport penguinSprites from './Sprites/penguin';\n\n\n\nconst {AnimatedSprite } = extras;\n\n// Getting scale to adjust size of the game to different screen sizes, Using PixelRatio library \nconst scale = PixelRatio.get();\n\n//Level Settings\nlet crnt_level = 1; \n\n// Game settings Configurations\nlet Settings = {\n  playerFallSpeed: 0 * scale,\n  playerHorizontalPosition: 640 * scale,\n  playerVerticalPosition: 650 * scale,\n  playerMaxVelocity: -3 * scale,\n  groundPositionX: 0,\n  groundPositionY: 0,\n  playerGravity: 0 * scale,\n  minPipeHeight: 50 * scale,\n  pipeVerticalGap: 190 * scale, //180 is pretty legit\n  gameSpeed: 15 * 0.25, // Game speed \n  guardWidth: 140 * scale,\n  guardHeight: 140 * scale,\n  secondCloudPositionY: 0\n};\n\n\n// Parent class for not moving objects\nclass SteadySprite extends Sprite {\n  constructor(...args) {\n    super(...args);\n    //this.scale.set(scale);\n  }\n}\n\n// Ground object \nclass Ground2 extends Sprite {\n\n  buttonIsPressed = false;\n  groundDown = false; \n\n  constructor(texture) {\n    super(texture, Settings.width, Settings.groundHeight);\n    this.scale.set(scale * 2);\n\n    console.log(\"SIZE:\", Settings.width, Settings.height, scale);\n   \n    this.height = Settings.height / 2.4;\n    this.width = Settings.width / 1.1;\n\n    Settings.groundPositionX = Settings.width / 20;\n    Settings.groundPositionY = Settings.height - this.height;\n    \n    this.position.x = Settings.groundPositionX;\n    this.position.y = Settings.groundPositionY;\n\n  }\n\n}\n\n// Object clouds on the side \nclass SideClouds extends Sprite {\n\n  constructor(texture) {\n    super(texture, Settings.width, Settings.groundHeight);\n\n\n    this.width = Settings.width;\n    this.height = Settings.height/4;\n    this.position.x = 0;\n\n    Settings.secondCloudPositionY = Settings.height / 1.5;\n\n    this.position.y = Settings.secondCloudPositionY;\n\n  }\n\n}\n\n// Bottom Clouds #TODO Rename it to something more generic\nclass Cloud extends Sprite {\n\n  constructor(texture) {\n    super(texture);\n    this.scale.set(scale * 2);\n    this.height = Settings.height/6;\n    this.width = Settings.width;\n    this.position.x = 0;\n    this.position.y = Settings.height - this.height;\n  }\n\n}\n\n// Message When user hold buttong for too long \nclass CaughtMessage extends Sprite {\n\n  backward = true;\n\n  buttonIsPressed = false;\n\n  constructor(texture) {\n    super(texture, Settings.width, Settings.groundHeight);\n    this.scale.set(scale * 2);\n\n    //TODO Make it scalable \n    this.width = Settings.width/8;\n    this.height = Settings.height/6;\n    this.position.x = Settings.width/2;\n    this.position.y = Settings.skyHeight ;\n\n  }\n\n}\n\n// Guard Object \nclass Guard extends Sprite {\n  \n  constructor(texture) {\n    super(texture, Settings.width, Settings.groundHeight);\n    this.scale.set(scale * 2);\n\n    this.width = Settings.width/10;\n    this.height = Settings.height/8;\n\n    this.position.x = Settings.width/2;\n    this.position.y = Settings.height; \n  }\n}\n\n// Background object \nclass Background extends Sprite {\n  constructor(texture) {\n    super(texture);\n    this.position.x = 0;\n    this.position.y = 0;\n    this.width = Settings.width;\n    this.height = Settings.height;\n  }\n  moveGround = false; \n}\n\n// Poppi object \nclass Bird extends AnimatedSprite {\n \n  moveBird = false; \n\n  constructor(textures) {\n    super(textures);\n    this.animationSpeed = 0.00;\n    this.anchor.set(0.5);\n    this.width = Settings.width/20;\n    this.height = Settings.height/15;\n\n    this.speedY = Settings.playerFallSpeed;\n    this.rate = Settings.playerGravity;\n\n    this.restart();\n  }\n\n  // Restarts position \n  restart = () => {\n    this.play();\n    this.rotation = 0;\n    this.position.x = Settings.width/2 ;\n    this.position.y = Settings.height/1.1;\n  };\n\n}\n\nlet bird; \n\nclass Game {\n  \n  //States of the game \n  stopAnimating = true;\n  isStarted = false;\n  isDead = false;\n  score = 0;\n  isButtonReleased = false; \n  userLost = false;\n  \n  this_guard;\n  this_background; \n\n  constructor(context, background, guard) {\n    // Sharp pixels\n    PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n\n    this.this_guard = guard;\n    this.this_background = background;\n\n    this.app = new PIXI.Application({\n      context,\n      autoResize: false,\n      width: context.drawingBufferWidth / 1,\n      height: context.drawingBufferHeight / 1,\n    });\n\n    this.app.ticker.add(this.animate);\n\n    Settings.width = this.app.renderer.width;\n    Settings.height = this.app.renderer.height;\n    Settings.skyHeight = Settings.height - Settings.groundHeight;\n    Settings.pipeHorizontalGap = Settings.pipeWidth * 5;\n    this.loadAsync();\n  }\n\n  // Resize function window\n  resize = ({ width, height, scale }) => {\n    const parent = this.app.view.parentNode;\n    //Resize the renderer\n    //this.app.renderer.resize(width * scale, height * scale);\n\n    // if (Platform.OS === 'web') {\n    //   this.app.view.style.width = width;\n    //   this.app.view.style.height = height;\n    // }\n  };\n\n  // Async loading textures and backgrounds\n  loadAsync = async () => {\n    \n    //Linking coordinates and background image\n    this.textures = await setupSpriteSheetAsync(this.this_background, sprites);\n    \n    //Linking coordinates and background image\n    this.textures2 = await setupSpriteSheetAsync(source2, sprites2);\n\n    //Linking guards and background image\n    this.guardTextute = await setupSpriteSheetAsync(source3, sprites3);\n    this.groundTexture = await setupSpriteSheetAsync(groundSouce, groundSprites);\n    this.penguinTexture = await setupSpriteSheetAsync(penguinSource, penguinSprites);\n    \n    this.onAssetsLoaded();\n  };\n\n  onAssetsLoaded = () => {\n\n    // Creating background \n    this.background = new Background(this.textures.background);\n\n    // Creating animated bird object\n    bird = new Bird([\n      this.penguinTexture['penguin1'],\n      this.penguinTexture['penguin2'],\n      this.penguinTexture['penguin3'],\n      this.penguinTexture['penguin4'],\n    ]);\n\n    //Making bird global \n    this.bird = bird; \n\n\n    //Making Ground object\n    this.ground2 = new Ground2(this.groundTexture.ground1);\n    this.edge = new SideClouds(this.groundTexture.cloud1);\n    this.cloud = new Cloud(this.groundTexture.cloud2);\n\n    //Creating Caught message\n    this.caughtMessage = new CaughtMessage(this.guardTextute.message)\n\n    //TODO here i should create a new algorithm to get elements from the questions bank \n    let randomGuard = Math.floor(Math.random() * 10) +1;  // returns a random integer from 0 to 10; \n\n    //console.log(this.guardTextute[]);\n\n    this.guard = new Guard(this.guardTextute.guard10);\n\n    this.guard = new Guard(this.guardTextute[this.this_guard]);\n \n \n    // Adding objects to the screen \n    [this.background, this.guard, this.caughtMessage, this.edge, this.ground2, this.cloud, this.bird].map(child =>\n      this.app.stage.addChild(child),\n    );\n\n\n    this.stopAnimating = false;\n  };\n\n\n  // This functions starts when the button is clicked \n  onPress = () => {\n\n    this.guard.buttonIsPressed = true; \n    this.guard.backward = true;\n\n    this.bird.animationSpeed = 0.053;\n\n    this.ground2.moveGround = true;\n\n      if(this.ground2.groundDown = false){\n        this.ground2.groundDown = true;\n      }\n\n\n      this.beginGame();\n    \n    //TODO Make 2500 global, this is time after which lose message will be displayed \n    setTimeout(() => {\n      this.loseMessage();\n    }, 2000);\n\n  }; \n\n\n  //Function which will run once user releases the button \n  onPressOut = () =>{\n    this.ground2.moveGround = false;\n    this.moveBack();\n    this.bird.animationSpeed = 0;\n  }\n\n  \n  beginGame = () => {\n    if (!this.isStarted) {\n      this.isStarted = true;\n      console.log(\"BeginGame\");\n    }\n  };\n\n  animate = () => {\n    // if game ends \n    if (this.stopAnimating) {\n      return;\n    }\n\n    // If game is started and button was pressed \n    if (this.isStarted && this.ground2.moveGround ){\n\n      this.moveToTheEdge();\n    }\n\n  };\n\n  moveToTheEdge = () => {\n\n    if (!this.ground2.groundDown) {\n      this.ground2.position.y += Settings.gameSpeed;\n      this.edge.position.y += Settings.gameSpeed;\n      if (this.ground2.position.y > Settings.height*0.7)\n        this.ground2.groundDown = true;\n        this.guard.position.y = Settings.height/2.5;\n    }\n    else if (this.ground2.position.x > Settings.skyHeight) {\n      this.ground2.position.x += Settings.gameSpeed;\n    }\n    else {\n      this.ground2.buttonIsPressed = false;\n    }\n\n\n  };\n\n  //This function will dislpay a lose message, if user holds button for too long \n  loseMessage() {\n    if (!this.isButtonReleased) {\n      console.log(\"Lose Message!\");\n      this.caughtMessage.position.y = Settings.height * 0.4;\n      this.userLost = true;\n    }\n    else { // Some debugging \n      console.log(\"Button was released!\");\n    }\n  }\n\n  moveBack = () => {\n    this.ground2.position.y = Settings.groundPositionY;\n    this.edge.position.y = Settings.secondCloudPositionY;\n  };\n\n  restart = () => {\n    this.isStarted = false;\n    this.isDead = false;\n    this.stopAnimating = false;\n    this.bird.restart();\n    this.animate();\n  };\n\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}