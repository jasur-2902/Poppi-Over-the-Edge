{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\node_modules\\\\@expo\\\\vector-icons\\\\vendor\\\\react-native-vector-icons\\\\lib\\\\tab-bar-item-ios.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from \"./react-native\";\nvar ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nvar SELECTED_ICON_PROP_NAMES = [...ICON_PROP_NAMES, 'selectedIconName', 'selectedIconColor'];\n\nvar arePropsEqual = keys => (prevProps, nextProps) => isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nvar areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nvar areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\nexport default function createTabBarItemIOSComponent(IconNamePropType, getImageSource) {\n  var _class, _temp;\n\n  return _temp = _class = class TabBarItemIOS extends PureComponent {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        icon: undefined,\n        selectedIcon: undefined\n      };\n    }\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    updateIconSource() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        var {\n          iconName,\n          iconSize,\n          iconColor\n        } = _this.props;\n\n        if (iconName) {\n          var icon = yield getImageSource(iconName, iconSize, iconColor);\n\n          _this.setState({\n            icon\n          });\n        } else if (_this.state.icon) {\n          _this.setState({\n            icon: undefined\n          });\n        }\n      })();\n    }\n\n    updateSelectedIconSource() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        var {\n          iconName,\n          iconColor,\n          iconSize,\n          selectedIconName,\n          selectedIconColor\n        } = _this2.props;\n\n        if (selectedIconName || selectedIconColor) {\n          var selectedIcon = yield getImageSource(selectedIconName || iconName, iconSize, selectedIconColor || iconColor);\n\n          _this2.setState({\n            selectedIcon\n          });\n        } else if (_this2.state.selectedIcon) {\n          _this2.setState({\n            selectedIcon: undefined\n          });\n        }\n      })();\n    }\n\n    render() {\n      return React.createElement(TabBarIOS.Item, _extends({}, this.state, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 14\n        }\n      }));\n    }\n\n  }, _class.propTypes = {\n    iconName: IconNamePropType.isRequired,\n    selectedIconName: IconNamePropType,\n    iconSize: PropTypes.number,\n    iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    selectedIconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }, _class.defaultProps = {\n    iconSize: 30\n  }, _temp;\n}","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/@expo/vector-icons/vendor/react-native-vector-icons/lib/tab-bar-item-ios.js"],"names":["isEqual","pick","React","PureComponent","PropTypes","TabBarIOS","ICON_PROP_NAMES","SELECTED_ICON_PROP_NAMES","arePropsEqual","keys","prevProps","nextProps","areIconPropsEqual","areSelectedIconPropsEqual","createTabBarItemIOSComponent","IconNamePropType","getImageSource","TabBarItemIOS","state","icon","undefined","selectedIcon","componentDidMount","updateIconSource","updateSelectedIconSource","componentDidUpdate","props","iconName","iconSize","iconColor","setState","selectedIconName","selectedIconColor","render","propTypes","isRequired","number","oneOfType","string","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { TabBarIOS } from './react-native';\n\nconst ICON_PROP_NAMES = ['iconName', 'iconSize', 'iconColor'];\nconst SELECTED_ICON_PROP_NAMES = [\n  ...ICON_PROP_NAMES,\n  'selectedIconName',\n  'selectedIconColor',\n];\n\nconst arePropsEqual = keys => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nexport default function createTabBarItemIOSComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class TabBarItemIOS extends PureComponent {\n    static propTypes = {\n      iconName: IconNamePropType.isRequired,\n      selectedIconName: IconNamePropType,\n      iconSize: PropTypes.number,\n      iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      selectedIconColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n    };\n\n    static defaultProps = {\n      iconSize: 30,\n    };\n\n    state = {\n      icon: undefined,\n      selectedIcon: undefined,\n    };\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    async updateIconSource() {\n      const { iconName, iconSize, iconColor } = this.props;\n      if (iconName) {\n        const icon = await getImageSource(iconName, iconSize, iconColor);\n        this.setState({ icon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.icon) {\n        this.setState({ icon: undefined });\n      }\n    }\n\n    async updateSelectedIconSource() {\n      const {\n        iconName,\n        iconColor,\n        iconSize,\n        selectedIconName,\n        selectedIconColor,\n      } = this.props;\n      if (selectedIconName || selectedIconColor) {\n        const selectedIcon = await getImageSource(\n          selectedIconName || iconName,\n          iconSize,\n          selectedIconColor || iconColor\n        );\n        this.setState({ selectedIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedIcon) {\n        this.setState({ selectedIcon: undefined });\n      }\n    }\n\n    render() {\n      return <TabBarIOS.Item {...this.state} {...this.props} />;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}