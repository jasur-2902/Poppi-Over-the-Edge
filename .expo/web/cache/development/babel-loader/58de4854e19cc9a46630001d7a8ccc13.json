{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jshukurov\\\\Desktop\\\\Poppi Over The Edge\\\\Poppi-Over-the-Edge-master\\\\App.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { GLView } from 'expo';\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from 'modal-enhanced-react-native-web';\nimport styles from \"./src/styles\";\nimport DisableBodyScrollingView from \"./components/DisableBodyScrollingView\";\nimport Game from \"./src/game\";\nimport WalkingObject from \"./src/walking\";\nimport sprites3 from \"./src/Sprites/guardSheet\";\nimport MainMenu from \"./src/mainmenu\";\n\nrequire('default-passive-events');\n\nexport default class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.level1_Settings = {\n      level: 1,\n      max: 3,\n      green: 10,\n      yellow: 0,\n      red: 0,\n      max_repetition: 4,\n      min_repetition: 2\n    };\n    this.state = {\n      level_state: 'menu',\n      sleepingPills: 0,\n      modalVisible: false,\n      visibleLost: false,\n      visibleCaught: false,\n      result: false,\n      level_1: true,\n      walking: true,\n      win: false,\n      lastRefresh: Date(Date.now()).toString(),\n      isListEmpty: false,\n      currentLevel: this.level1_Settings,\n      isMainMenuVisible: true\n    };\n    this.guardsList = [];\n    this.backgroundList = [];\n    this.numberOfCards = 30;\n    this.game = null;\n    this.level2_Settings = {\n      level: 2,\n      max: 3,\n      green: 6,\n      yellow: 4,\n      red: 0,\n      max_repetition: 4,\n      min_repetition: 2\n    };\n    this.level3_Settings = {\n      level: 3,\n      max: 4,\n      green: 5,\n      yellow: 3,\n      red: 2,\n      max_repetition: 4,\n      min_repetition: 1\n    };\n\n    this._renderButton = (text, onPress) => React.createElement(TouchableOpacity, {\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }\n    }, React.createElement(View, {\n      style: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    }, text)));\n\n    this._renderModalContent = () => React.createElement(View, {\n      isLost: false,\n      style: styles.modalContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 5\n      }\n    }, !this.state.result && !this.state.win ? React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.headerText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, \"How many Guards did you see?\"), React.createElement(Text, {\n      style: styles.headerText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, this._renderButton(\"1\", () => {\n      this.checkForResult(1);\n    }), this._renderButton(\"2\", () => {\n      this.checkForResult(2);\n    }), this._renderButton(\"3\", () => {\n      this.checkForResult(3);\n    }), this._renderButton(\"4\", () => {\n      this.checkForResult(4);\n    }), this._renderButton(\"5\", () => this.checkForResult(5)))) : null, this.state.result && !this.state.isListEmpty ? React.createElement(Text, {\n      style: styles.headerText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 56\n      }\n    }, \" \", \"\\n\", \"Yes, You got it right!\", this._renderButton(\"Next Stage\", () => {\n      this.setState({\n        level_1: false\n      });\n      this.setState({\n        visibleModal: false\n      });\n      this.setState({\n        level_state: 'walking'\n      });\n    })) : null, this.state.win ? React.createElement(Text, {\n      style: styles.headerText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 26\n      }\n    }, \" \", \"\\n\", \"Congratulations, you won!\", this._renderButton(\"Next Level\", () => {\n      this.setState({\n        level_1: false\n      });\n      this.setState({\n        visibleModal: false\n      });\n      this.setState({\n        level_state: 'create_list'\n      });\n      this.setState({\n        currentLevel: this.level3_Settings,\n        win: false,\n        isListEmpty: false\n      });\n    })) : null);\n\n    this._renderModalLost = () => React.createElement(View, {\n      style: styles.modalContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }\n    }, \"That\\u2019s not right! Please Try Again! \"), this._renderButton(\"Try Again!\", () => {\n      this.setState({\n        level_state: 'create_list'\n      });\n      this.setState({\n        visibleLost: false\n      });\n    }));\n\n    this._renderModalCaught = () => React.createElement(View, {\n      style: styles.modalContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }\n    }, \"The Guards caught you! Please Try Again! \"), this._renderButton(\"Try Again!\", () => {\n      this.setState({\n        level_state: 'create_list'\n      });\n      this.setState({\n        visibleCaught: false\n      });\n    }));\n\n    this._handleOnScroll = event => {\n      this.setState({\n        scrollOffset: event.nativeEvent.contentOffset.y\n      });\n    };\n\n    this._handleScrollTo = p => {\n      if (this.scrollViewRef) {\n        this.scrollViewRef.scrollTo(p);\n      }\n    };\n\n    this.displayQuestions = () => {\n      if (!this.game.userLost) {\n        this.game.onPressOut();\n        this.setState({\n          visibleModal: true\n        });\n        this.game.isButtonReleased = true;\n      } else {\n        this.setState({\n          visibleCaught: true\n        });\n      }\n    };\n\n    this.menu = () => {\n      React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 5\n        }\n      });\n    };\n\n    this.backToMainMenu = () => {\n      this.setState({\n        isMainMenuVisible: true\n      });\n    };\n\n    this.startGame = () => {\n      this.setState({\n        isMainMenuVisible: false\n      });\n    };\n  }\n\n  refreshScreen() {\n    this.refreshScreen.bind(this);\n  }\n\n  createGuardList(level) {\n    this.guardsList = [];\n    this.backgroundList = [];\n    var random;\n    var green = level.green;\n    var yellow = level.yellow;\n    var red = level.red;\n    var dic = {};\n\n    for (var i = 1; i <= level.max; i++) {\n      dic[i] = 0;\n    }\n\n    var temp;\n\n    while (this.guardsList.length < 10) {\n      random = Math.floor(Math.random() * this.numberOfCards);\n      temp = sprites3[random];\n\n      if (dic[temp.number] < level.max_repetition) {\n        if (temp.number == 1 && dic[1] > 2) {} else {\n          if (temp.color == 'green' && green != 0) {\n            this.guardsList.push(temp);\n            dic[temp.number] = dic[temp.number] + 1;\n            green--;\n          } else if (temp.color == 'yellow' && yellow != 0) {\n            this.guardsList.push(temp);\n            dic[temp.number] = dic[temp.number] + 1;\n            yellow--;\n          } else if (temp.color == 'red' && red != 0) {\n            this.guardsList.push(sprites3[random]);\n            dic[temp.number] = dic[temp.number] + 1;\n            red--;\n          }\n        }\n      }\n    }\n\n    console.log(this.guardsList);\n    console.log(dic);\n    this.backgroundList.push(\"background2.png\");\n    this.backgroundList.push(\"background.png\");\n    this.backgroundList.push(\"background2.png\");\n    this.backgroundList.push(\"background.png\");\n    this.backgroundList.push(\"background2.png\");\n    this.backgroundList.push(\"background.png\");\n    this.backgroundList.push(\"background2.png\");\n    this.backgroundList.push(\"background.png\");\n    this.backgroundList.push(\"background2.png\");\n    this.backgroundList.push(\"background.png\");\n    this.setState({\n      level_state: 'levelOne'\n    });\n  }\n\n  checkForResult(userChoice) {\n    if (userChoice == this.currentGuard.number) {\n      if (!this.state.isListEmpty) !this.setState({\n        result: true\n      });else this.setState({\n        win: true\n      });\n    } else {\n      this.setState({\n        visibleModal: null\n      });\n      this.setState({\n        visibleLost: true\n      });\n    }\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      style\n    } = _this$props,\n        props = _objectWithoutProperties(_this$props, [\"style\"]);\n\n    var levelOne = React.createElement(View, {\n      style: [{\n        width: '100vw',\n        height: '100vh',\n        overflow: 'hidden'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }\n    }, React.createElement(Modal, {\n      isVisible: this.state.visibleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }\n    }, this._renderModalContent()), React.createElement(Modal, {\n      isVisible: this.state.visibleLost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }\n    }, this._renderModalLost()), React.createElement(Modal, {\n      isVisible: this.state.visibleCaught,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }\n    }, this._renderModalCaught()), React.createElement(DisableBodyScrollingView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    }, React.createElement(GLView, {\n      style: {\n        flex: 1,\n        backgroundColor: 'black'\n      },\n      onContextCreate: context => {\n        if (this.guardsList.length > 1) {\n          this.currentGuard = this.guardsList.pop();\n          var path = this.backgroundList.pop();\n\n          var bg = require('./assets/' + path);\n\n          this.game = new Game(context, bg, this.currentGuard.name);\n          console.log(this.currentGuard);\n\n          this.game.onSleepingPills = sleepingPills => this.setState({\n            sleepingPills\n          });\n        } else {\n          this.setState({\n            isListEmpty: true\n          });\n          this.currentGuard = this.guardsList.pop();\n\n          var _path = this.backgroundList.pop();\n\n          var _bg = require('./assets/' + _path);\n\n          this.game = new Game(context, _bg, this.currentGuard.name);\n          console.log(this.currentGuard);\n\n          this.game.onSleepingPills = sleepingPills => this.setState({\n            sleepingPills\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        userSelect: 'none',\n        position: 'absolute',\n        bottom: 50,\n        left: 100\n      },\n      onLongPress: () => {\n        this.game.onPress();\n        console.log(\"it's been pressed\");\n      },\n      onPressOut: () => {\n        this.displayQuestions();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: '10vw',\n        userSelect: 'none',\n        height: '10vh'\n      },\n      source: require(\"./assets/binoculars6.png\"),\n      resizeMode: \"contain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }))));\n    var walking = React.createElement(View, {\n      style: [{\n        width: '100vw',\n        height: '100vh',\n        overflow: 'hidden'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 7\n      }\n    }, React.createElement(Modal, {\n      isVisible: this.state.visibleModal,\n      onBackdropPress: () => this.setState({\n        visibleModal: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }\n    }, this._renderModalContent()), React.createElement(Modal, {\n      isVisible: this.state.visibleLost,\n      onBackdropPress: () => this.setState({\n        visibleLost: false\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }\n    }, this._renderModalLost()), React.createElement(DisableBodyScrollingView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }\n    }, React.createElement(GLView, {\n      style: {\n        flex: 1,\n        backgroundColor: 'black'\n      },\n      onContextCreate: context => {\n        this.game = new WalkingObject(context);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }\n    })), React.createElement(TouchableOpacity, {\n      style: {\n        userSelect: 'none',\n        position: 'absolute',\n        bottom: 50,\n        left: 100\n      },\n      onPress: () => {\n        this.setState({\n          walking: false\n        });\n        this.setState({\n          level_state: 'levelOne'\n        });\n      },\n      onPressOut: () => {\n        this.setState({\n          result: false\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 100,\n        userSelect: 'none',\n        height: 100\n      },\n      source: require(\"./assets/binoculars6.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 7\n      }\n    }, this.state.level_state == 'menu' && React.createElement(MainMenu, {\n      startGame: this.startGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 13\n      }\n    }), this.state.level_state == 'create_list' && this.createGuardList(this.state.currentLevel), this.state.level_state == 'walking' && walking, this.state.level_state == 'levelOne' && levelOne);\n  }\n\n}\n\nvar SleepingPills = (_ref) => {\n  var {\n    children\n  } = _ref;\n  return React.createElement(Text, {\n    style: {\n      position: 'absolute',\n      left: 0,\n      top: '10%',\n      right: 0,\n      textAlign: 'center',\n      color: 'white',\n      fontSize: 48,\n      userSelect: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 3\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/App.js"],"names":["GLView","React","Modal","styles","DisableBodyScrollingView","Game","WalkingObject","sprites3","MainMenu","require","App","Component","level1_Settings","level","max","green","yellow","red","max_repetition","min_repetition","state","level_state","sleepingPills","modalVisible","visibleLost","visibleCaught","result","level_1","walking","win","lastRefresh","Date","now","toString","isListEmpty","currentLevel","isMainMenuVisible","guardsList","backgroundList","numberOfCards","game","level2_Settings","level3_Settings","_renderButton","text","onPress","button","_renderModalContent","modalContent","headerText","checkForResult","setState","visibleModal","_renderModalLost","_renderModalCaught","_handleOnScroll","event","scrollOffset","nativeEvent","contentOffset","y","_handleScrollTo","p","scrollViewRef","scrollTo","displayQuestions","userLost","onPressOut","isButtonReleased","menu","backToMainMenu","startGame","refreshScreen","bind","createGuardList","random","dic","i","temp","length","Math","floor","number","color","push","console","log","userChoice","currentGuard","render","props","style","levelOne","width","height","overflow","flex","backgroundColor","context","pop","path","bg","name","onSleepingPills","userSelect","position","bottom","left","flexDirection","alignItems","SleepingPills","children","top","right","textAlign","fontSize"],"mappings":"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","sourcesContent":["import { GLView } from 'expo';\nimport * as React from 'react';\nimport { Image, Text, View, TouchableOpacity } from 'react-native';\n\n//import Modal from 'modal-react-native-web';\nimport Modal from 'modal-enhanced-react-native-web';\n\n//importing styles \nimport styles from \"./src/styles\";\n\n\nimport DisableBodyScrollingView from './components/DisableBodyScrollingView';\nimport Game from './src/game';\n\nimport WalkingObject from './src/walking';\nimport sprites3 from './src/Sprites/guardSheet';\n\nimport MainMenu from \"./src/mainmenu\";\n\n\nrequire('default-passive-events');\n\nexport default class App extends React.Component {\n  \n  level1_Settings = {\n    level: 1, //level \n    max: 3, // maximum number of guards\n    green: 10, // number of green guards in this level\n    yellow: 0, // number of yellow guards in this level\n    red: 0, // number of red guards in this level\n    max_repetition: 4, // max number of one type of the guard repeats \n    min_repetition: 2,\n  };\n  \n  state = {\n    level_state: 'menu',\n    sleepingPills: 0,\n    modalVisible: false,\n    visibleLost: false,\n    visibleCaught: false,\n    result: false,\n    level_1: true,\n    walking: true, \n    win: false,\n    lastRefresh: Date(Date.now()).toString(),\n    isListEmpty: false,\n    currentLevel: this.level1_Settings,\n    isMainMenuVisible: true, \n  };\n\n  refreshScreen() {\n    this.refreshScreen.bind(this)\n  } \n\n  guardsList = [];\n  backgroundList=[]; \n  numberOfCards = 30;\n\n  game = null;\n\n  currentGuard; \n  \n    level2_Settings = {\n      level: 2, //level \n      max: 3, // maximum number of guards\n      green: 6, // number of green guards in this level\n      yellow: 4, // number of yellow guards in this level\n      red: 0, // number of red guards in this level\n      max_repetition: 4, // max number of one type of the guard repeats \n      min_repetition: 2\n    };\n\n    level3_Settings = {\n      level: 3, //level \n      max: 4, // maximum number of guards\n      green: 5, // number of green guards in this level\n      yellow: 3, // number of yellow guards in this level\n      red: 2, // number of red guards in this level\n      max_repetition: 4, // max number of one type of the guard repeats \n      min_repetition: 1\n    }; \n\n\n\n   \n  createGuardList(level){\n   \n    this.guardsList = []\n    this.backgroundList = [];\n    let random;  // returns a random integer from 0 to 10; \n\n\n    let green = level.green;\n    let yellow = level.yellow;\n    let red = level.red;\n\n    let dic = {}\n\n    for (let i = 1; i <= level.max; i++)\n      dic[i] = 0;\n\n    let temp;\n    while (this.guardsList.length < 10) {\n      random = Math.floor(Math.random() * this.numberOfCards);\n\n      temp = sprites3[random];\n\n      if (dic[temp.number] < level.max_repetition) {\n        if (temp.number == 1 && dic[1] > 2) {\n        }\n        else {\n          if (temp.color == 'green' && green != 0) {\n            this.guardsList.push(temp)\n            dic[temp.number] = dic[temp.number] + 1;\n            green--;\n          }\n          else if (temp.color == 'yellow' && yellow != 0) {\n            this.guardsList.push(temp)\n            dic[temp.number] = dic[temp.number] + 1;\n\n            yellow--;\n          }\n          else if (temp.color == 'red' && red != 0) {\n            this.guardsList.push(sprites3[random])\n            dic[temp.number] = dic[temp.number] + 1;\n            red--;\n          }\n        }\n      }\n\n    }\n    console.log(this.guardsList);\n    console.log(dic);\n\n    this.backgroundList.push(\"background2.png\");\n    this.backgroundList.push(\"background.png\");\n    this.backgroundList.push(\"background2.png\");\n    this.backgroundList.push(\"background.png\");\n    this.backgroundList.push(\"background2.png\");\n    this.backgroundList.push(\"background.png\");\n    this.backgroundList.push(\"background2.png\");\n    this.backgroundList.push(\"background.png\");\n    this.backgroundList.push(\"background2.png\");\n    this.backgroundList.push(\"background.png\");\n  \n    this.setState({ level_state: 'levelOne' }); \n    \n  }\n\n  _renderButton = (text, onPress) => (\n    <TouchableOpacity onPress={onPress}>\n      <View style={styles.button}>\n        <Text>{text}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n\n  _renderModalContent = () => (\n    <View isLost={false} style={styles.modalContent}>\n      \n\n      {\n        // Display the content in screen when state object \"content\" is true.\n        // Hide the content in screen when state object \"content\" is false. \n        !this.state.result && !this.state.win ? \n        <View>\n          <Text style={styles.headerText}>How many Guards did you see?</Text>\n          <Text style={styles.headerText}> \n            {this._renderButton(\"1\", () => { this.checkForResult(1) })}\n            {this._renderButton(\"2\", () => { this.checkForResult(2) })}\n            {this._renderButton(\"3\", () => { this.checkForResult(3) })}\n            {this._renderButton(\"4\", () => { this.checkForResult(4)})}\n            {this._renderButton(\"5\", () => this.checkForResult(5))}\n\n          </Text> \n        </View>: null\n      }\n\n      {\n        // Display the content in screen when state object \"content\" is true.\n        // Hide the content in screen when state object \"content\" is false. \n        this.state.result && !this.state.isListEmpty ? <Text style={styles.headerText}> {\"\\n\"}Yes, You got it right!  \n        \n        {this._renderButton(\"Next Stage\", () => { this.setState({ level_1: false }); this.setState({ visibleModal: false }); this.setState({ level_state: 'walking' });})}\n\n        </Text> : null \n\n        \n           \n        }\n\n      {\n        // Display the content in screen when state object \"content\" is true.\n        // Hide the content in screen when state object \"content\" is false. \n        this.state.win ? <Text style={styles.headerText}> {\"\\n\"}Congratulations, you won!\n\n        {this._renderButton(\"Next Level\", () => { this.setState({ level_1: false }); this.setState({ visibleModal: false }); this.setState({ level_state: 'create_list' }); this.setState({ currentLevel: this.level3_Settings, win: false, isListEmpty:false });})}\n\n        </Text> : null\n\n      }\n\n    </View>\n  );\n\n\n checkForResult(userChoice){\n\n    if(userChoice == this.currentGuard.number){\n      if(!this.state.isListEmpty)\n        !this.setState({ result: true });\n      else\n        this.setState({win: true});\n    }\n    else{\n      this.setState({ visibleModal: null });\n      this.setState({visibleLost: true });\n    }\n\n }\n  \n  _renderModalLost = () => (\n    <View style={styles.modalContent}>\n      <Text>That’s not right! Please Try Again! </Text>\n      {this._renderButton(\"Try Again!\", () => {\n        this.setState({ level_state: 'create_list' }); this.setState({ visibleLost: false});})}\n    </View>\n  );\n\n  _renderModalCaught= () => (\n    <View style={styles.modalContent}>\n      <Text>The Guards caught you! Please Try Again! </Text>\n      {this._renderButton(\"Try Again!\", () => {\n        this.setState({ level_state: 'create_list' }); this.setState({ visibleCaught: false });\n      })}\n    </View>\n  );\n\n  _handleOnScroll = event => {\n    this.setState({\n      scrollOffset: event.nativeEvent.contentOffset.y\n    });\n  };\n\n  _handleScrollTo = p => {\n    if (this.scrollViewRef) {\n      this.scrollViewRef.scrollTo(p);\n    }\n  };\n\n  displayQuestions = () =>{\n\n    if(!this.game.userLost)\n      {\n        this.game.onPressOut(); this.setState({ visibleModal: true }); this.game.isButtonReleased = true\n      }\n    else{\n      this.setState({ visibleCaught: true });\n    }\n  };\n\n\n  menu = () => {\n    <View>\n    \n    </View> \n  }\n  \n  backToMainMenu = () => {\n    this.setState({\n      isMainMenuVisible: true,\n    });\n  };\n\n  startGame = () => {\n    this.setState({\n      isMainMenuVisible: false,\n    });\n  };\n\n\n  render() {\n    const { style, ...props } = this.props;\n\n  \n    const levelOne = (\n\n      <View\n        style={[{ width: '100vw', height: '100vh', overflow: 'hidden' }]}\n      >\n\n        <Modal\n          isVisible={this.state.visibleModal}\n        // onBackdropPress={() => this.setState({ visibleModal: false })}\n        >\n\n          {this._renderModalContent()}\n\n        </Modal>\n\n        <Modal\n          isVisible={this.state.visibleLost}\n        //onBackdropPress={() => this.setState({ visibleLost: false })}\n        >\n\n          {this._renderModalLost()}\n\n        </Modal>\n        <Modal\n          isVisible={this.state.visibleCaught}\n        //onBackdropPress={() => this.setState({ visibleLost: false })}\n        >\n\n          {this._renderModalCaught()}\n\n        </Modal>\n\n\n        <DisableBodyScrollingView >\n\n          <GLView\n            style={{ flex: 1, backgroundColor: 'black' }}\n            onContextCreate={context => {\n              if (this.guardsList.length > 1){\n                \n                this.currentGuard = this.guardsList.pop();\n                let path = this.backgroundList.pop();\n                let bg = require('./assets/' + path);\n\n                this.game = new Game(context, bg, this.currentGuard.name);\n\n                console.log(this.currentGuard);\n                this.game.onSleepingPills = sleepingPills => this.setState({ sleepingPills });\n              }\n              else{\n                this.setState({ isListEmpty: true })\n                this.currentGuard = this.guardsList.pop();\n                let path = this.backgroundList.pop();\n                let bg = require('./assets/' + path);\n\n                this.game = new Game(context, bg, this.currentGuard.name);\n\n                console.log(this.currentGuard);\n                this.game.onSleepingPills = sleepingPills => this.setState({ sleepingPills });\n              }\n\n            }}\n          >\n\n          </GLView>  \n\n          \n\n\n        </DisableBodyScrollingView>\n       \n        <TouchableOpacity\n          style={{\n            userSelect: 'none',\n            position: 'absolute',\n            bottom: 50,\n            left: 100,\n          }}\n          onLongPress={() => { this.game.onPress(); console.log(\"it's been pressed\"); }}\n          onPressOut={() => { this.displayQuestions() }}>\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n            <Image\n              style={{ width: '10vw', userSelect: 'none', height: '10vh' }}\n              source={require('./assets/binoculars6.png')}\n              resizeMode=\"contain\"\n            />\n            {/* <Text style={{ fontWeight: '600', userSelect: 'none' }}>Expo</Text> */}\n          </View>\n        </TouchableOpacity>\n\n\n        {/* <View style={{ \n          flexDirection: 'row', alignItems: 'center',\n          userSelect: 'none',\n          position: 'absolute',\n          top: 50,\n          right: 100,}}>\n          <Image\n            \n            style={{ width: '5vw', userSelect: 'none', height: '5vh' }}\n            source={require('./assets/sleepingSpell.png')}\n            resizeMode=\"contain\"\n          />\n          \n           </View> */}\n\n\n\n      </View>\n\n    );\n\n\n    const walking = (\n      \n      <View\n        style={[{ width: '100vw', height: '100vh', overflow: 'hidden' }]}\n      >\n\n        <Modal\n          isVisible={this.state.visibleModal}\n          onBackdropPress={() => this.setState({ visibleModal: false })}\n        >\n\n          {this._renderModalContent()}\n\n        </Modal>\n\n        <Modal\n          isVisible={this.state.visibleLost}\n          onBackdropPress={() => this.setState({ visibleLost: false })}\n        >\n\n          {this._renderModalLost()}\n\n        </Modal>\n\n\n        <DisableBodyScrollingView >\n\n          <GLView\n            style={{ flex: 1, backgroundColor: 'black' }}\n            onContextCreate={context => {\n              this.game = new WalkingObject(context);\n             // this.game.walking = walking => { this.setState({ walking: walking }); if (!walking) this.setState({ level_state: 'levelOne' });};\n             // console.log(\"Inside walking object: \" + this.state.walking )\n            \n\n       }}\n     >\n          </GLView>\n\n        </DisableBodyScrollingView>\n\n        <TouchableOpacity\n          style={{\n            userSelect: 'none',\n            position: 'absolute',\n            bottom: 50,\n            left: 100,\n          }}\n          onPress={() => { this.setState({ walking: false }); this.setState({level_state: 'levelOne'})}}\n          onPressOut={() => { this.setState({ result: false });}}>\n          <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n            <Image\n              style={{ width: 100, userSelect: 'none', height: 100 }}\n              source={require('./assets/binoculars6.png')}\n            />\n          </View>\n        </TouchableOpacity>\n\n\n\n\n      </View>\n\n    );\n\n    return (\n    \n      \n      <div>\n        {this.state.level_state == 'menu' && (\n            <MainMenu\n            \n              startGame={this.startGame}\n            />\n          )}\n        {this.state.level_state == 'create_list' && this.createGuardList(this.state.currentLevel)}\n        {this.state.level_state == 'walking' && walking}\n        {this.state.level_state == 'levelOne' && levelOne} \n      </div>\n\n      \n    );\n\n  }\n}\n\nconst SleepingPills = ({ children }) => (\n  <Text\n    style={{\n      position: 'absolute',\n      left: 0,\n      top: '10%',\n      right: 0,\n      textAlign: 'center',\n      color: 'white',\n      fontSize: 48,\n      userSelect: 'none',\n    }}\n  >\n    {/* {children} */}\n  </Text>\n);"]},"metadata":{},"sourceType":"module"}