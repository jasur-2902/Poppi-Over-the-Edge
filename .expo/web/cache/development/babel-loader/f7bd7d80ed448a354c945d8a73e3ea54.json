{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { EventEmitter } from 'expo-core';\nimport UUID from 'uuid-js';\nimport FS from \"./ExponentFileSystem\";\n\nvar normalizeEndingSlash = p => {\n  if (p != null) {\n    return p.replace(/\\/*$/, '') + '/';\n  }\n\n  return null;\n};\n\nFS.documentDirectory = normalizeEndingSlash(FS.documentDirectory);\nFS.cacheDirectory = normalizeEndingSlash(FS.cacheDirectory);\nexport var documentDirectory = FS.documentDirectory;\nexport var cacheDirectory = FS.cacheDirectory;\nexport var bundledAssets = FS.bundledAssets;\nexport var bundleDirectory = FS.bundleDirectory;\nexport var EncodingTypes = {\n  UTF8: 'utf8',\n  Base64: 'base64'\n};\nexport function getInfoAsync(fileUri) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return FS.getInfoAsync(fileUri, options);\n}\nexport function readAsStringAsync(fileUri, options) {\n  return FS.readAsStringAsync(fileUri, options || {});\n}\nexport function writeAsStringAsync(fileUri, contents, options) {\n  return FS.writeAsStringAsync(fileUri, contents, options || {});\n}\nexport function deleteAsync(fileUri) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return FS.deleteAsync(fileUri, options);\n}\nexport function moveAsync(options) {\n  return FS.moveAsync(options);\n}\nexport function copyAsync(options) {\n  return FS.copyAsync(options);\n}\nexport function makeDirectoryAsync(fileUri) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return FS.makeDirectoryAsync(fileUri, options);\n}\nexport function readDirectoryAsync(fileUri) {\n  return FS.readDirectoryAsync(fileUri, {});\n}\nexport function downloadAsync(uri, fileUri) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return FS.downloadAsync(uri, fileUri, options);\n}\nexport function createDownloadResumable(uri, fileUri, options, callback, resumeData) {\n  return new DownloadResumable(uri, fileUri, options, callback, resumeData);\n}\nexport class DownloadResumable {\n  constructor(url, fileUri) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = arguments.length > 3 ? arguments[3] : undefined;\n    var resumeData = arguments.length > 4 ? arguments[4] : undefined;\n    this._uuid = UUID.create(4).toString();\n    this._url = url;\n    this._fileUri = fileUri;\n    this._options = options;\n    this._resumeData = resumeData;\n    this._callback = callback;\n    this._subscription = null;\n    this._emitter = new EventEmitter(FS);\n  }\n\n  downloadAsync() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this._addSubscription();\n\n      return yield FS.downloadResumableStartAsync(_this._url, _this._fileUri, _this._uuid, _this._options, _this._resumeData);\n    })();\n  }\n\n  pauseAsync() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var pauseResult = yield FS.downloadResumablePauseAsync(_this2._uuid);\n\n      _this2._removeSubscription();\n\n      if (pauseResult) {\n        _this2._resumeData = pauseResult.resumeData;\n        return _this2.savable();\n      } else {\n        throw new Error('Unable to generate a savable pause state');\n      }\n    })();\n  }\n\n  resumeAsync() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3._addSubscription();\n\n      return yield FS.downloadResumableStartAsync(_this3._url, _this3._fileUri, _this3._uuid, _this3._options, _this3._resumeData);\n    })();\n  }\n\n  savable() {\n    return {\n      url: this._url,\n      fileUri: this._fileUri,\n      options: this._options,\n      resumeData: this._resumeData\n    };\n  }\n\n  _addSubscription() {\n    if (this._subscription) {\n      return;\n    }\n\n    this._subscription = this._emitter.addListener('Exponent.downloadProgress', (_ref) => {\n      var {\n        uuid,\n        data\n      } = _ref;\n\n      if (uuid === this._uuid) {\n        var callback = this._callback;\n\n        if (callback) {\n          callback(data);\n        }\n      }\n    });\n  }\n\n  _removeSubscription() {\n    if (!this._subscription) {\n      return;\n    }\n\n    this._emitter.removeSubscription(this._subscription);\n\n    this._subscription = null;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jshukurov/Desktop/Poppi Over The Edge/Poppi-Over-the-Edge-master/node_modules/expo-file-system/src/FileSystem.js"],"names":["EventEmitter","UUID","FS","normalizeEndingSlash","p","replace","documentDirectory","cacheDirectory","bundledAssets","bundleDirectory","EncodingTypes","UTF8","Base64","getInfoAsync","fileUri","options","readAsStringAsync","writeAsStringAsync","contents","deleteAsync","moveAsync","copyAsync","makeDirectoryAsync","readDirectoryAsync","downloadAsync","uri","createDownloadResumable","callback","resumeData","DownloadResumable","constructor","url","_uuid","create","toString","_url","_fileUri","_options","_resumeData","_callback","_subscription","_emitter","_addSubscription","downloadResumableStartAsync","pauseAsync","pauseResult","downloadResumablePauseAsync","_removeSubscription","savable","Error","resumeAsync","addListener","uuid","data","removeSubscription"],"mappings":"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","sourcesContent":["// @flow\n\nimport { EventEmitter } from 'expo-core';\nimport UUID from 'uuid-js';\nimport FS from './ExponentFileSystem';\n\nconst normalizeEndingSlash = p => {\n  if (p != null) {\n    return p.replace(/\\/*$/, '') + '/';\n  }\n  return null;\n};\n\nFS.documentDirectory = normalizeEndingSlash(FS.documentDirectory);\nFS.cacheDirectory = normalizeEndingSlash(FS.cacheDirectory);\n\nexport const documentDirectory = FS.documentDirectory;\nexport const cacheDirectory = FS.cacheDirectory;\nexport const bundledAssets = FS.bundledAssets;\nexport const bundleDirectory = FS.bundleDirectory;\nexport const EncodingTypes = {\n  UTF8: 'utf8',\n  Base64: 'base64',\n};\n\ntype FileInfo =\n  | {\n      exists: true,\n      uri: string,\n      size: number,\n      modificationTime: number,\n      md5?: string,\n    }\n  | {\n      exists: false,\n      isDirectory: false,\n    };\n\nexport type EncodingType = typeof EncodingTypes.UTF8 | typeof EncodingTypes.Base64;\n\nexport type ReadingOptions = {\n  encoding?: EncodingType,\n  position?: number,\n  length?: number,\n};\nexport type WritingOptions = {\n  encoding?: EncodingType,\n};\n\nexport function getInfoAsync(fileUri: string, options: { md5?: boolean } = {}): Promise<FileInfo> {\n  return FS.getInfoAsync(fileUri, options);\n}\n\nexport function readAsStringAsync(fileUri: string, options?: ReadingOptions): Promise<string> {\n  return FS.readAsStringAsync(fileUri, options || {});\n}\n\nexport function writeAsStringAsync(\n  fileUri: string,\n  contents: string,\n  options?: WritingOptions\n): Promise<void> {\n  return FS.writeAsStringAsync(fileUri, contents, options || {});\n}\n\nexport function deleteAsync(\n  fileUri: string,\n  options: { idempotent?: boolean } = {}\n): Promise<void> {\n  return FS.deleteAsync(fileUri, options);\n}\n\nexport function moveAsync(options: { from: string, to: string }): Promise<void> {\n  return FS.moveAsync(options);\n}\n\nexport function copyAsync(options: { from: string, to: string }): Promise<void> {\n  return FS.copyAsync(options);\n}\n\nexport function makeDirectoryAsync(\n  fileUri: string,\n  options: { intermediates?: boolean } = {}\n): Promise<void> {\n  return FS.makeDirectoryAsync(fileUri, options);\n}\n\nexport function readDirectoryAsync(fileUri: string): Array<string> {\n  return FS.readDirectoryAsync(fileUri, {});\n}\n\ntype DownloadOptions = {\n  md5?: boolean,\n  headers?: { [string]: string },\n};\ntype DownloadResult = {\n  uri: string,\n  status: number,\n  headers: { [string]: string },\n  md5?: string,\n};\n\nexport function downloadAsync(\n  uri: string,\n  fileUri: string,\n  options: DownloadOptions = {}\n): Promise<DownloadResult> {\n  return FS.downloadAsync(uri, fileUri, options);\n}\n\nexport function createDownloadResumable(\n  uri: string,\n  fileUri: string,\n  options?: DownloadOptions,\n  callback?: DownloadProgressCallback,\n  resumeData?: string\n) {\n  return new DownloadResumable(uri, fileUri, options, callback, resumeData);\n}\n\ntype DownloadProgressCallback = (data: DownloadProgressData) => void;\ntype DownloadProgressData = {\n  totalBytesWritten: number,\n  totalBytesExpectedToWrite: number,\n};\ntype DownloadPauseState = {\n  url: string,\n  fileUri: string,\n  options: DownloadOptions,\n  resumeData: ?string,\n};\n\nexport class DownloadResumable {\n  _uuid: string;\n  _url: string;\n  _fileUri: string;\n  _options: DownloadOptions;\n  _resumeData: ?string;\n  _callback: ?DownloadProgressCallback;\n  _subscription: ?Function;\n  _emitter: EventEmitter;\n\n  constructor(\n    url: string,\n    fileUri: string,\n    options: DownloadOptions = {},\n    callback: ?DownloadProgressCallback,\n    resumeData: ?string\n  ) {\n    this._uuid = UUID.create(4).toString();\n    this._url = url;\n    this._fileUri = fileUri;\n    this._options = options;\n    this._resumeData = resumeData;\n    this._callback = callback;\n    this._subscription = null;\n    this._emitter = new EventEmitter(FS);\n  }\n\n  async downloadAsync(): Promise<?DownloadResult> {\n    this._addSubscription();\n    return await FS.downloadResumableStartAsync(\n      this._url,\n      this._fileUri,\n      this._uuid,\n      this._options,\n      this._resumeData\n    );\n  }\n\n  async pauseAsync(): Promise<DownloadPauseState> {\n    const pauseResult = await FS.downloadResumablePauseAsync(this._uuid);\n    this._removeSubscription();\n    if (pauseResult) {\n      this._resumeData = pauseResult.resumeData;\n      return this.savable();\n    } else {\n      throw new Error('Unable to generate a savable pause state');\n    }\n  }\n\n  async resumeAsync(): Promise<?DownloadResult> {\n    this._addSubscription();\n    return await FS.downloadResumableStartAsync(\n      this._url,\n      this._fileUri,\n      this._uuid,\n      this._options,\n      this._resumeData\n    );\n  }\n\n  savable(): DownloadPauseState {\n    return {\n      url: this._url,\n      fileUri: this._fileUri,\n      options: this._options,\n      resumeData: this._resumeData,\n    };\n  }\n\n  _addSubscription(): void {\n    if (this._subscription) {\n      return;\n    }\n    this._subscription = this._emitter.addListener(\n      'Exponent.downloadProgress',\n      ({ uuid, data }) => {\n        if (uuid === this._uuid) {\n          const callback = this._callback;\n          if (callback) {\n            callback(data);\n          }\n        }\n      }\n    );\n  }\n\n  _removeSubscription(): void {\n    if (!this._subscription) {\n      return;\n    }\n    this._emitter.removeSubscription(this._subscription);\n    this._subscription = null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}